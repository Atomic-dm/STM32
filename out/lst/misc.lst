   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"misc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NVIC_PriorityGroupConfig,"ax",%progbits
  19              		.align	2
  20              		.global	NVIC_PriorityGroupConfig
  21              		.thumb
  22              		.thumb_func
  24              	NVIC_PriorityGroupConfig:
  25              	.LFB29:
  26              		.file 1 ".\\StdPeriphLib\\src/misc.c"
   1:.\StdPeriphLib\src/misc.c **** /**
   2:.\StdPeriphLib\src/misc.c ****   ******************************************************************************
   3:.\StdPeriphLib\src/misc.c ****   * @file    misc.c
   4:.\StdPeriphLib\src/misc.c ****   * @author  MCD Application Team
   5:.\StdPeriphLib\src/misc.c ****   * @version V3.5.0
   6:.\StdPeriphLib\src/misc.c ****   * @date    11-March-2011
   7:.\StdPeriphLib\src/misc.c ****   * @brief   This file provides all the miscellaneous firmware functions (add-on
   8:.\StdPeriphLib\src/misc.c ****   *          to CMSIS functions).
   9:.\StdPeriphLib\src/misc.c ****   ******************************************************************************
  10:.\StdPeriphLib\src/misc.c ****   * @attention
  11:.\StdPeriphLib\src/misc.c ****   *
  12:.\StdPeriphLib\src/misc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  13:.\StdPeriphLib\src/misc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  14:.\StdPeriphLib\src/misc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  15:.\StdPeriphLib\src/misc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  16:.\StdPeriphLib\src/misc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  17:.\StdPeriphLib\src/misc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  18:.\StdPeriphLib\src/misc.c ****   *
  19:.\StdPeriphLib\src/misc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  20:.\StdPeriphLib\src/misc.c ****   ******************************************************************************
  21:.\StdPeriphLib\src/misc.c ****   */
  22:.\StdPeriphLib\src/misc.c **** 
  23:.\StdPeriphLib\src/misc.c **** /* Includes ------------------------------------------------------------------*/
  24:.\StdPeriphLib\src/misc.c **** #include "misc.h"
  25:.\StdPeriphLib\src/misc.c **** 
  26:.\StdPeriphLib\src/misc.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:.\StdPeriphLib\src/misc.c ****   * @{
  28:.\StdPeriphLib\src/misc.c ****   */
  29:.\StdPeriphLib\src/misc.c **** 
  30:.\StdPeriphLib\src/misc.c **** /** @defgroup MISC 
  31:.\StdPeriphLib\src/misc.c ****   * @brief MISC driver modules
  32:.\StdPeriphLib\src/misc.c ****   * @{
  33:.\StdPeriphLib\src/misc.c ****   */
  34:.\StdPeriphLib\src/misc.c **** 
  35:.\StdPeriphLib\src/misc.c **** /** @defgroup MISC_Private_TypesDefinitions
  36:.\StdPeriphLib\src/misc.c ****   * @{
  37:.\StdPeriphLib\src/misc.c ****   */
  38:.\StdPeriphLib\src/misc.c **** 
  39:.\StdPeriphLib\src/misc.c **** /**
  40:.\StdPeriphLib\src/misc.c ****   * @}
  41:.\StdPeriphLib\src/misc.c ****   */ 
  42:.\StdPeriphLib\src/misc.c **** 
  43:.\StdPeriphLib\src/misc.c **** /** @defgroup MISC_Private_Defines
  44:.\StdPeriphLib\src/misc.c ****   * @{
  45:.\StdPeriphLib\src/misc.c ****   */
  46:.\StdPeriphLib\src/misc.c **** 
  47:.\StdPeriphLib\src/misc.c **** #define AIRCR_VECTKEY_MASK    ((uint32_t)0x05FA0000)
  48:.\StdPeriphLib\src/misc.c **** /**
  49:.\StdPeriphLib\src/misc.c ****   * @}
  50:.\StdPeriphLib\src/misc.c ****   */
  51:.\StdPeriphLib\src/misc.c **** 
  52:.\StdPeriphLib\src/misc.c **** /** @defgroup MISC_Private_Macros
  53:.\StdPeriphLib\src/misc.c ****   * @{
  54:.\StdPeriphLib\src/misc.c ****   */
  55:.\StdPeriphLib\src/misc.c **** 
  56:.\StdPeriphLib\src/misc.c **** /**
  57:.\StdPeriphLib\src/misc.c ****   * @}
  58:.\StdPeriphLib\src/misc.c ****   */
  59:.\StdPeriphLib\src/misc.c **** 
  60:.\StdPeriphLib\src/misc.c **** /** @defgroup MISC_Private_Variables
  61:.\StdPeriphLib\src/misc.c ****   * @{
  62:.\StdPeriphLib\src/misc.c ****   */
  63:.\StdPeriphLib\src/misc.c **** 
  64:.\StdPeriphLib\src/misc.c **** /**
  65:.\StdPeriphLib\src/misc.c ****   * @}
  66:.\StdPeriphLib\src/misc.c ****   */
  67:.\StdPeriphLib\src/misc.c **** 
  68:.\StdPeriphLib\src/misc.c **** /** @defgroup MISC_Private_FunctionPrototypes
  69:.\StdPeriphLib\src/misc.c ****   * @{
  70:.\StdPeriphLib\src/misc.c ****   */
  71:.\StdPeriphLib\src/misc.c **** 
  72:.\StdPeriphLib\src/misc.c **** /**
  73:.\StdPeriphLib\src/misc.c ****   * @}
  74:.\StdPeriphLib\src/misc.c ****   */
  75:.\StdPeriphLib\src/misc.c **** 
  76:.\StdPeriphLib\src/misc.c **** /** @defgroup MISC_Private_Functions
  77:.\StdPeriphLib\src/misc.c ****   * @{
  78:.\StdPeriphLib\src/misc.c ****   */
  79:.\StdPeriphLib\src/misc.c **** 
  80:.\StdPeriphLib\src/misc.c **** /**
  81:.\StdPeriphLib\src/misc.c ****   * @brief  Configures the priority grouping: pre-emption priority and subpriority.
  82:.\StdPeriphLib\src/misc.c ****   * @param  NVIC_PriorityGroup: specifies the priority grouping bits length. 
  83:.\StdPeriphLib\src/misc.c ****   *   This parameter can be one of the following values:
  84:.\StdPeriphLib\src/misc.c ****   *     @arg NVIC_PriorityGroup_0: 0 bits for pre-emption priority
  85:.\StdPeriphLib\src/misc.c ****   *                                4 bits for subpriority
  86:.\StdPeriphLib\src/misc.c ****   *     @arg NVIC_PriorityGroup_1: 1 bits for pre-emption priority
  87:.\StdPeriphLib\src/misc.c ****   *                                3 bits for subpriority
  88:.\StdPeriphLib\src/misc.c ****   *     @arg NVIC_PriorityGroup_2: 2 bits for pre-emption priority
  89:.\StdPeriphLib\src/misc.c ****   *                                2 bits for subpriority
  90:.\StdPeriphLib\src/misc.c ****   *     @arg NVIC_PriorityGroup_3: 3 bits for pre-emption priority
  91:.\StdPeriphLib\src/misc.c ****   *                                1 bits for subpriority
  92:.\StdPeriphLib\src/misc.c ****   *     @arg NVIC_PriorityGroup_4: 4 bits for pre-emption priority
  93:.\StdPeriphLib\src/misc.c ****   *                                0 bits for subpriority
  94:.\StdPeriphLib\src/misc.c ****   * @retval None
  95:.\StdPeriphLib\src/misc.c ****   */
  96:.\StdPeriphLib\src/misc.c **** void NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)
  97:.\StdPeriphLib\src/misc.c **** {
  27              		.loc 1 97 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  98:.\StdPeriphLib\src/misc.c ****   /* Check the parameters */
  99:.\StdPeriphLib\src/misc.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(NVIC_PriorityGroup));
 100:.\StdPeriphLib\src/misc.c ****   
 101:.\StdPeriphLib\src/misc.c ****   /* Set the PRIGROUP[10:8] bits according to NVIC_PriorityGroup value */
 102:.\StdPeriphLib\src/misc.c ****   SCB->AIRCR = AIRCR_VECTKEY_MASK | NVIC_PriorityGroup;
  33              		.loc 1 102 0
  34 0000 40F0BF60 		orr	r0, r0, #100139008
  35              	.LVL1:
  36 0004 40F40030 		orr	r0, r0, #131072
  37 0008 014B     		ldr	r3, .L2
  38 000a D860     		str	r0, [r3, #12]
  39 000c 7047     		bx	lr
  40              	.L3:
  41 000e 00BF     		.align	2
  42              	.L2:
  43 0010 00ED00E0 		.word	-536810240
  44              		.cfi_endproc
  45              	.LFE29:
  47              		.section	.text.NVIC_Init,"ax",%progbits
  48              		.align	2
  49              		.global	NVIC_Init
  50              		.thumb
  51              		.thumb_func
  53              	NVIC_Init:
  54              	.LFB30:
 103:.\StdPeriphLib\src/misc.c **** }
 104:.\StdPeriphLib\src/misc.c **** 
 105:.\StdPeriphLib\src/misc.c **** /**
 106:.\StdPeriphLib\src/misc.c ****   * @brief  Initializes the NVIC peripheral according to the specified
 107:.\StdPeriphLib\src/misc.c ****   *         parameters in the NVIC_InitStruct.
 108:.\StdPeriphLib\src/misc.c ****   * @param  NVIC_InitStruct: pointer to a NVIC_InitTypeDef structure that contains
 109:.\StdPeriphLib\src/misc.c ****   *         the configuration information for the specified NVIC peripheral.
 110:.\StdPeriphLib\src/misc.c ****   * @retval None
 111:.\StdPeriphLib\src/misc.c ****   */
 112:.\StdPeriphLib\src/misc.c **** void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)
 113:.\StdPeriphLib\src/misc.c **** {
  55              		.loc 1 113 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LVL2:
 114:.\StdPeriphLib\src/misc.c ****   uint32_t tmppriority = 0x00, tmppre = 0x00, tmpsub = 0x0F;
 115:.\StdPeriphLib\src/misc.c ****   
 116:.\StdPeriphLib\src/misc.c ****   /* Check the parameters */
 117:.\StdPeriphLib\src/misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
 118:.\StdPeriphLib\src/misc.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
 119:.\StdPeriphLib\src/misc.c ****   assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
 120:.\StdPeriphLib\src/misc.c ****     
 121:.\StdPeriphLib\src/misc.c ****   if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
  61              		.loc 1 121 0
  62 0000 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
  63 0002 FBB1     		cbz	r3, .L5
 122:.\StdPeriphLib\src/misc.c ****   {
 123:.\StdPeriphLib\src/misc.c ****     /* Compute the Corresponding IRQ Priority --------------------------------*/    
 124:.\StdPeriphLib\src/misc.c ****     tmppriority = (0x700 - ((SCB->AIRCR) & (uint32_t)0x700))>> 0x08;
  64              		.loc 1 124 0
  65 0004 154B     		ldr	r3, .L7
  66 0006 D968     		ldr	r1, [r3, #12]
  67 0008 C943     		mvns	r1, r1
  68 000a C1F30221 		ubfx	r1, r1, #8, #3
  69              	.LVL3:
 125:.\StdPeriphLib\src/misc.c ****     tmppre = (0x4 - tmppriority);
  70              		.loc 1 125 0
  71 000e C1F10402 		rsb	r2, r1, #4
  72              	.LVL4:
 126:.\StdPeriphLib\src/misc.c ****     tmpsub = tmpsub >> tmppriority;
 127:.\StdPeriphLib\src/misc.c **** 
 128:.\StdPeriphLib\src/misc.c ****     tmppriority = (uint32_t)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
  73              		.loc 1 128 0
  74 0012 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
  75 0014 03FA02F2 		lsl	r2, r3, r2
  76              	.LVL5:
 126:.\StdPeriphLib\src/misc.c ****     tmpsub = tmpsub >> tmppriority;
  77              		.loc 1 126 0
  78 0018 0F23     		movs	r3, #15
  79 001a CB40     		lsrs	r3, r3, r1
  80              	.LVL6:
 129:.\StdPeriphLib\src/misc.c ****     tmppriority |=  NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub;
  81              		.loc 1 129 0
  82 001c 8178     		ldrb	r1, [r0, #2]	@ zero_extendqisi2
  83              	.LVL7:
  84 001e 0B40     		ands	r3, r3, r1
  85              	.LVL8:
  86 0020 1343     		orrs	r3, r3, r2
  87              	.LVL9:
 130:.\StdPeriphLib\src/misc.c ****     tmppriority = tmppriority << 0x04;
 131:.\StdPeriphLib\src/misc.c ****         
 132:.\StdPeriphLib\src/misc.c ****     NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel] = tmppriority;
  88              		.loc 1 132 0
  89 0022 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 130:.\StdPeriphLib\src/misc.c ****     tmppriority = tmppriority << 0x04;
  90              		.loc 1 130 0
  91 0024 1B01     		lsls	r3, r3, #4
  92              	.LVL10:
  93              		.loc 1 132 0
  94 0026 DBB2     		uxtb	r3, r3
  95              	.LVL11:
  96 0028 0D49     		ldr	r1, .L7+4
  97 002a 0A44     		add	r2, r2, r1
  98 002c 82F80033 		strb	r3, [r2, #768]
 133:.\StdPeriphLib\src/misc.c ****     
 134:.\StdPeriphLib\src/misc.c ****     /* Enable the Selected IRQ Channels --------------------------------------*/
 135:.\StdPeriphLib\src/misc.c ****     NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
  99              		.loc 1 135 0
 100 0030 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 101 0032 5809     		lsrs	r0, r3, #5
 102              	.LVL12:
 136:.\StdPeriphLib\src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 103              		.loc 1 136 0
 104 0034 03F01F03 		and	r3, r3, #31
 105 0038 0122     		movs	r2, #1
 106 003a 02FA03F3 		lsl	r3, r2, r3
 135:.\StdPeriphLib\src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 107              		.loc 1 135 0
 108 003e 41F82030 		str	r3, [r1, r0, lsl #2]
 109 0042 7047     		bx	lr
 110              	.LVL13:
 111              	.L5:
 137:.\StdPeriphLib\src/misc.c ****   }
 138:.\StdPeriphLib\src/misc.c ****   else
 139:.\StdPeriphLib\src/misc.c ****   {
 140:.\StdPeriphLib\src/misc.c ****     /* Disable the Selected IRQ Channels -------------------------------------*/
 141:.\StdPeriphLib\src/misc.c ****     NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 112              		.loc 1 141 0
 113 0044 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 114 0046 5A09     		lsrs	r2, r3, #5
 142:.\StdPeriphLib\src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 115              		.loc 1 142 0
 116 0048 03F01F03 		and	r3, r3, #31
 117 004c 0121     		movs	r1, #1
 118 004e 9940     		lsls	r1, r1, r3
 141:.\StdPeriphLib\src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 119              		.loc 1 141 0
 120 0050 02F12003 		add	r3, r2, #32
 121 0054 024A     		ldr	r2, .L7+4
 122 0056 42F82310 		str	r1, [r2, r3, lsl #2]
 123 005a 7047     		bx	lr
 124              	.L8:
 125              		.align	2
 126              	.L7:
 127 005c 00ED00E0 		.word	-536810240
 128 0060 00E100E0 		.word	-536813312
 129              		.cfi_endproc
 130              	.LFE30:
 132              		.section	.text.NVIC_SetVectorTable,"ax",%progbits
 133              		.align	2
 134              		.global	NVIC_SetVectorTable
 135              		.thumb
 136              		.thumb_func
 138              	NVIC_SetVectorTable:
 139              	.LFB31:
 143:.\StdPeriphLib\src/misc.c ****   }
 144:.\StdPeriphLib\src/misc.c **** }
 145:.\StdPeriphLib\src/misc.c **** 
 146:.\StdPeriphLib\src/misc.c **** /**
 147:.\StdPeriphLib\src/misc.c ****   * @brief  Sets the vector table location and Offset.
 148:.\StdPeriphLib\src/misc.c ****   * @param  NVIC_VectTab: specifies if the vector table is in RAM or FLASH memory.
 149:.\StdPeriphLib\src/misc.c ****   *   This parameter can be one of the following values:
 150:.\StdPeriphLib\src/misc.c ****   *     @arg NVIC_VectTab_RAM
 151:.\StdPeriphLib\src/misc.c ****   *     @arg NVIC_VectTab_FLASH
 152:.\StdPeriphLib\src/misc.c ****   * @param  Offset: Vector Table base offset field. This value must be a multiple 
 153:.\StdPeriphLib\src/misc.c ****   *         of 0x200.
 154:.\StdPeriphLib\src/misc.c ****   * @retval None
 155:.\StdPeriphLib\src/misc.c ****   */
 156:.\StdPeriphLib\src/misc.c **** void NVIC_SetVectorTable(uint32_t NVIC_VectTab, uint32_t Offset)
 157:.\StdPeriphLib\src/misc.c **** { 
 140              		.loc 1 157 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 145              	.LVL14:
 158:.\StdPeriphLib\src/misc.c ****   /* Check the parameters */
 159:.\StdPeriphLib\src/misc.c ****   assert_param(IS_NVIC_VECTTAB(NVIC_VectTab));
 160:.\StdPeriphLib\src/misc.c ****   assert_param(IS_NVIC_OFFSET(Offset));  
 161:.\StdPeriphLib\src/misc.c ****    
 162:.\StdPeriphLib\src/misc.c ****   SCB->VTOR = NVIC_VectTab | (Offset & (uint32_t)0x1FFFFF80);
 146              		.loc 1 162 0
 147 0000 21F06041 		bic	r1, r1, #-536870912
 148              	.LVL15:
 149 0004 21F07F01 		bic	r1, r1, #127
 150 0008 0843     		orrs	r0, r0, r1
 151              	.LVL16:
 152 000a 014B     		ldr	r3, .L10
 153 000c 9860     		str	r0, [r3, #8]
 154 000e 7047     		bx	lr
 155              	.L11:
 156              		.align	2
 157              	.L10:
 158 0010 00ED00E0 		.word	-536810240
 159              		.cfi_endproc
 160              	.LFE31:
 162              		.section	.text.NVIC_SystemLPConfig,"ax",%progbits
 163              		.align	2
 164              		.global	NVIC_SystemLPConfig
 165              		.thumb
 166              		.thumb_func
 168              	NVIC_SystemLPConfig:
 169              	.LFB32:
 163:.\StdPeriphLib\src/misc.c **** }
 164:.\StdPeriphLib\src/misc.c **** 
 165:.\StdPeriphLib\src/misc.c **** /**
 166:.\StdPeriphLib\src/misc.c ****   * @brief  Selects the condition for the system to enter low power mode.
 167:.\StdPeriphLib\src/misc.c ****   * @param  LowPowerMode: Specifies the new mode for the system to enter low power mode.
 168:.\StdPeriphLib\src/misc.c ****   *   This parameter can be one of the following values:
 169:.\StdPeriphLib\src/misc.c ****   *     @arg NVIC_LP_SEVONPEND
 170:.\StdPeriphLib\src/misc.c ****   *     @arg NVIC_LP_SLEEPDEEP
 171:.\StdPeriphLib\src/misc.c ****   *     @arg NVIC_LP_SLEEPONEXIT
 172:.\StdPeriphLib\src/misc.c ****   * @param  NewState: new state of LP condition. This parameter can be: ENABLE or DISABLE.
 173:.\StdPeriphLib\src/misc.c ****   * @retval None
 174:.\StdPeriphLib\src/misc.c ****   */
 175:.\StdPeriphLib\src/misc.c **** void NVIC_SystemLPConfig(uint8_t LowPowerMode, FunctionalState NewState)
 176:.\StdPeriphLib\src/misc.c **** {
 170              		.loc 1 176 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              		@ link register save eliminated.
 175              	.LVL17:
 177:.\StdPeriphLib\src/misc.c ****   /* Check the parameters */
 178:.\StdPeriphLib\src/misc.c ****   assert_param(IS_NVIC_LP(LowPowerMode));
 179:.\StdPeriphLib\src/misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));  
 180:.\StdPeriphLib\src/misc.c ****   
 181:.\StdPeriphLib\src/misc.c ****   if (NewState != DISABLE)
 176              		.loc 1 181 0
 177 0000 21B1     		cbz	r1, .L13
 182:.\StdPeriphLib\src/misc.c ****   {
 183:.\StdPeriphLib\src/misc.c ****     SCB->SCR |= LowPowerMode;
 178              		.loc 1 183 0
 179 0002 054A     		ldr	r2, .L15
 180 0004 1369     		ldr	r3, [r2, #16]
 181 0006 1843     		orrs	r0, r0, r3
 182              	.LVL18:
 183 0008 1061     		str	r0, [r2, #16]
 184 000a 7047     		bx	lr
 185              	.LVL19:
 186              	.L13:
 184:.\StdPeriphLib\src/misc.c ****   }
 185:.\StdPeriphLib\src/misc.c ****   else
 186:.\StdPeriphLib\src/misc.c ****   {
 187:.\StdPeriphLib\src/misc.c ****     SCB->SCR &= (uint32_t)(~(uint32_t)LowPowerMode);
 187              		.loc 1 187 0
 188 000c 024A     		ldr	r2, .L15
 189 000e 1369     		ldr	r3, [r2, #16]
 190 0010 23EA0000 		bic	r0, r3, r0
 191              	.LVL20:
 192 0014 1061     		str	r0, [r2, #16]
 193 0016 7047     		bx	lr
 194              	.L16:
 195              		.align	2
 196              	.L15:
 197 0018 00ED00E0 		.word	-536810240
 198              		.cfi_endproc
 199              	.LFE32:
 201              		.section	.text.SysTick_CLKSourceConfig,"ax",%progbits
 202              		.align	2
 203              		.global	SysTick_CLKSourceConfig
 204              		.thumb
 205              		.thumb_func
 207              	SysTick_CLKSourceConfig:
 208              	.LFB33:
 188:.\StdPeriphLib\src/misc.c ****   }
 189:.\StdPeriphLib\src/misc.c **** }
 190:.\StdPeriphLib\src/misc.c **** 
 191:.\StdPeriphLib\src/misc.c **** /**
 192:.\StdPeriphLib\src/misc.c ****   * @brief  Configures the SysTick clock source.
 193:.\StdPeriphLib\src/misc.c ****   * @param  SysTick_CLKSource: specifies the SysTick clock source.
 194:.\StdPeriphLib\src/misc.c ****   *   This parameter can be one of the following values:
 195:.\StdPeriphLib\src/misc.c ****   *     @arg SysTick_CLKSource_HCLK_Div8: AHB clock divided by 8 selected as SysTick clock source.
 196:.\StdPeriphLib\src/misc.c ****   *     @arg SysTick_CLKSource_HCLK: AHB clock selected as SysTick clock source.
 197:.\StdPeriphLib\src/misc.c ****   * @retval None
 198:.\StdPeriphLib\src/misc.c ****   */
 199:.\StdPeriphLib\src/misc.c **** void SysTick_CLKSourceConfig(uint32_t SysTick_CLKSource)
 200:.\StdPeriphLib\src/misc.c **** {
 209              		.loc 1 200 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 214              	.LVL21:
 201:.\StdPeriphLib\src/misc.c ****   /* Check the parameters */
 202:.\StdPeriphLib\src/misc.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(SysTick_CLKSource));
 203:.\StdPeriphLib\src/misc.c ****   if (SysTick_CLKSource == SysTick_CLKSource_HCLK)
 215              		.loc 1 203 0
 216 0000 0428     		cmp	r0, #4
 204:.\StdPeriphLib\src/misc.c ****   {
 205:.\StdPeriphLib\src/misc.c ****     SysTick->CTRL |= SysTick_CLKSource_HCLK;
 217              		.loc 1 205 0
 218 0002 044A     		ldr	r2, .L20
 219 0004 1368     		ldr	r3, [r2]
 220 0006 0CBF     		ite	eq
 221 0008 43F00403 		orreq	r3, r3, #4
 206:.\StdPeriphLib\src/misc.c ****   }
 207:.\StdPeriphLib\src/misc.c ****   else
 208:.\StdPeriphLib\src/misc.c ****   {
 209:.\StdPeriphLib\src/misc.c ****     SysTick->CTRL &= SysTick_CLKSource_HCLK_Div8;
 222              		.loc 1 209 0
 223 000c 23F00403 		bicne	r3, r3, #4
 224 0010 1360     		str	r3, [r2]
 225 0012 7047     		bx	lr
 226              	.L21:
 227              		.align	2
 228              	.L20:
 229 0014 10E000E0 		.word	-536813552
 230              		.cfi_endproc
 231              	.LFE33:
 233              		.text
 234              	.Letext0:
 235              		.file 2 "d:\\atomic\\sublime\\gnu tools arm embedded\\arm-none-eabi\\include\\machine\\_default_ty
 236              		.file 3 "d:\\atomic\\sublime\\gnu tools arm embedded\\arm-none-eabi\\include\\sys\\_stdint.h"
 237              		.file 4 ".\\CMSIS/core_cm3.h"
 238              		.file 5 ".\\CMSIS/stm32f10x.h"
 239              		.file 6 ".\\StdPeriphLib\\inc/misc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 misc.c
C:\Users\Admin\AppData\Local\Temp\ccvvlisl.s:19     .text.NVIC_PriorityGroupConfig:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccvvlisl.s:24     .text.NVIC_PriorityGroupConfig:00000000 NVIC_PriorityGroupConfig
C:\Users\Admin\AppData\Local\Temp\ccvvlisl.s:43     .text.NVIC_PriorityGroupConfig:00000010 $d
C:\Users\Admin\AppData\Local\Temp\ccvvlisl.s:48     .text.NVIC_Init:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccvvlisl.s:53     .text.NVIC_Init:00000000 NVIC_Init
C:\Users\Admin\AppData\Local\Temp\ccvvlisl.s:127    .text.NVIC_Init:0000005c $d
C:\Users\Admin\AppData\Local\Temp\ccvvlisl.s:133    .text.NVIC_SetVectorTable:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccvvlisl.s:138    .text.NVIC_SetVectorTable:00000000 NVIC_SetVectorTable
C:\Users\Admin\AppData\Local\Temp\ccvvlisl.s:158    .text.NVIC_SetVectorTable:00000010 $d
C:\Users\Admin\AppData\Local\Temp\ccvvlisl.s:163    .text.NVIC_SystemLPConfig:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccvvlisl.s:168    .text.NVIC_SystemLPConfig:00000000 NVIC_SystemLPConfig
C:\Users\Admin\AppData\Local\Temp\ccvvlisl.s:197    .text.NVIC_SystemLPConfig:00000018 $d
C:\Users\Admin\AppData\Local\Temp\ccvvlisl.s:202    .text.SysTick_CLKSourceConfig:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccvvlisl.s:207    .text.SysTick_CLKSourceConfig:00000000 SysTick_CLKSourceConfig
C:\Users\Admin\AppData\Local\Temp\ccvvlisl.s:229    .text.SysTick_CLKSourceConfig:00000014 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
