   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_iwdg.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.IWDG_WriteAccessCmd,"ax",%progbits
  19              		.align	2
  20              		.global	IWDG_WriteAccessCmd
  21              		.thumb
  22              		.thumb_func
  24              	IWDG_WriteAccessCmd:
  25              	.LFB29:
  26              		.file 1 ".\\StdPeriphLib\\src/stm32f10x_iwdg.c"
   1:.\StdPeriphLib\src/stm32f10x_iwdg.c **** /**
   2:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   ******************************************************************************
   3:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @file    stm32f10x_iwdg.c
   4:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @author  MCD Application Team
   5:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @version V3.5.0
   6:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @date    11-March-2011
   7:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @brief   This file provides all the IWDG firmware functions.
   8:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   ******************************************************************************
   9:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @attention
  10:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   *
  11:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   *
  18:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   ******************************************************************************
  20:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   */
  21:.\StdPeriphLib\src/stm32f10x_iwdg.c **** 
  22:.\StdPeriphLib\src/stm32f10x_iwdg.c **** /* Includes ------------------------------------------------------------------*/
  23:.\StdPeriphLib\src/stm32f10x_iwdg.c **** #include "stm32f10x_iwdg.h"
  24:.\StdPeriphLib\src/stm32f10x_iwdg.c **** 
  25:.\StdPeriphLib\src/stm32f10x_iwdg.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  26:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @{
  27:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   */
  28:.\StdPeriphLib\src/stm32f10x_iwdg.c **** 
  29:.\StdPeriphLib\src/stm32f10x_iwdg.c **** /** @defgroup IWDG 
  30:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @brief IWDG driver modules
  31:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @{
  32:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   */ 
  33:.\StdPeriphLib\src/stm32f10x_iwdg.c **** 
  34:.\StdPeriphLib\src/stm32f10x_iwdg.c **** /** @defgroup IWDG_Private_TypesDefinitions
  35:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @{
  36:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   */
  37:.\StdPeriphLib\src/stm32f10x_iwdg.c **** 
  38:.\StdPeriphLib\src/stm32f10x_iwdg.c **** /**
  39:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @}
  40:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   */
  41:.\StdPeriphLib\src/stm32f10x_iwdg.c **** 
  42:.\StdPeriphLib\src/stm32f10x_iwdg.c **** /** @defgroup IWDG_Private_Defines
  43:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @{
  44:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   */ 
  45:.\StdPeriphLib\src/stm32f10x_iwdg.c **** 
  46:.\StdPeriphLib\src/stm32f10x_iwdg.c **** /* ---------------------- IWDG registers bit mask ----------------------------*/
  47:.\StdPeriphLib\src/stm32f10x_iwdg.c **** 
  48:.\StdPeriphLib\src/stm32f10x_iwdg.c **** /* KR register bit mask */
  49:.\StdPeriphLib\src/stm32f10x_iwdg.c **** #define KR_KEY_Reload    ((uint16_t)0xAAAA)
  50:.\StdPeriphLib\src/stm32f10x_iwdg.c **** #define KR_KEY_Enable    ((uint16_t)0xCCCC)
  51:.\StdPeriphLib\src/stm32f10x_iwdg.c **** 
  52:.\StdPeriphLib\src/stm32f10x_iwdg.c **** /**
  53:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @}
  54:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   */ 
  55:.\StdPeriphLib\src/stm32f10x_iwdg.c **** 
  56:.\StdPeriphLib\src/stm32f10x_iwdg.c **** /** @defgroup IWDG_Private_Macros
  57:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @{
  58:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   */
  59:.\StdPeriphLib\src/stm32f10x_iwdg.c **** 
  60:.\StdPeriphLib\src/stm32f10x_iwdg.c **** /**
  61:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @}
  62:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   */
  63:.\StdPeriphLib\src/stm32f10x_iwdg.c **** 
  64:.\StdPeriphLib\src/stm32f10x_iwdg.c **** /** @defgroup IWDG_Private_Variables
  65:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @{
  66:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   */
  67:.\StdPeriphLib\src/stm32f10x_iwdg.c **** 
  68:.\StdPeriphLib\src/stm32f10x_iwdg.c **** /**
  69:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @}
  70:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   */
  71:.\StdPeriphLib\src/stm32f10x_iwdg.c **** 
  72:.\StdPeriphLib\src/stm32f10x_iwdg.c **** /** @defgroup IWDG_Private_FunctionPrototypes
  73:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @{
  74:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   */
  75:.\StdPeriphLib\src/stm32f10x_iwdg.c **** 
  76:.\StdPeriphLib\src/stm32f10x_iwdg.c **** /**
  77:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @}
  78:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   */
  79:.\StdPeriphLib\src/stm32f10x_iwdg.c **** 
  80:.\StdPeriphLib\src/stm32f10x_iwdg.c **** /** @defgroup IWDG_Private_Functions
  81:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @{
  82:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   */
  83:.\StdPeriphLib\src/stm32f10x_iwdg.c **** 
  84:.\StdPeriphLib\src/stm32f10x_iwdg.c **** /**
  85:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @brief  Enables or disables write access to IWDG_PR and IWDG_RLR registers.
  86:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @param  IWDG_WriteAccess: new state of write access to IWDG_PR and IWDG_RLR registers.
  87:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   *   This parameter can be one of the following values:
  88:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   *     @arg IWDG_WriteAccess_Enable: Enable write access to IWDG_PR and IWDG_RLR registers
  89:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   *     @arg IWDG_WriteAccess_Disable: Disable write access to IWDG_PR and IWDG_RLR registers
  90:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @retval None
  91:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   */
  92:.\StdPeriphLib\src/stm32f10x_iwdg.c **** void IWDG_WriteAccessCmd(uint16_t IWDG_WriteAccess)
  93:.\StdPeriphLib\src/stm32f10x_iwdg.c **** {
  27              		.loc 1 93 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  94:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   /* Check the parameters */
  95:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   assert_param(IS_IWDG_WRITE_ACCESS(IWDG_WriteAccess));
  96:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   IWDG->KR = IWDG_WriteAccess;
  33              		.loc 1 96 0
  34 0000 014B     		ldr	r3, .L2
  35 0002 1860     		str	r0, [r3]
  36 0004 7047     		bx	lr
  37              	.L3:
  38 0006 00BF     		.align	2
  39              	.L2:
  40 0008 00300040 		.word	1073754112
  41              		.cfi_endproc
  42              	.LFE29:
  44              		.section	.text.IWDG_SetPrescaler,"ax",%progbits
  45              		.align	2
  46              		.global	IWDG_SetPrescaler
  47              		.thumb
  48              		.thumb_func
  50              	IWDG_SetPrescaler:
  51              	.LFB30:
  97:.\StdPeriphLib\src/stm32f10x_iwdg.c **** }
  98:.\StdPeriphLib\src/stm32f10x_iwdg.c **** 
  99:.\StdPeriphLib\src/stm32f10x_iwdg.c **** /**
 100:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @brief  Sets IWDG Prescaler value.
 101:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @param  IWDG_Prescaler: specifies the IWDG Prescaler value.
 102:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   *   This parameter can be one of the following values:
 103:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   *     @arg IWDG_Prescaler_4: IWDG prescaler set to 4
 104:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   *     @arg IWDG_Prescaler_8: IWDG prescaler set to 8
 105:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   *     @arg IWDG_Prescaler_16: IWDG prescaler set to 16
 106:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   *     @arg IWDG_Prescaler_32: IWDG prescaler set to 32
 107:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   *     @arg IWDG_Prescaler_64: IWDG prescaler set to 64
 108:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   *     @arg IWDG_Prescaler_128: IWDG prescaler set to 128
 109:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   *     @arg IWDG_Prescaler_256: IWDG prescaler set to 256
 110:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @retval None
 111:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   */
 112:.\StdPeriphLib\src/stm32f10x_iwdg.c **** void IWDG_SetPrescaler(uint8_t IWDG_Prescaler)
 113:.\StdPeriphLib\src/stm32f10x_iwdg.c **** {
  52              		.loc 1 113 0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              	.LVL1:
 114:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   /* Check the parameters */
 115:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   assert_param(IS_IWDG_PRESCALER(IWDG_Prescaler));
 116:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   IWDG->PR = IWDG_Prescaler;
  58              		.loc 1 116 0
  59 0000 014B     		ldr	r3, .L5
  60 0002 5860     		str	r0, [r3, #4]
  61 0004 7047     		bx	lr
  62              	.L6:
  63 0006 00BF     		.align	2
  64              	.L5:
  65 0008 00300040 		.word	1073754112
  66              		.cfi_endproc
  67              	.LFE30:
  69              		.section	.text.IWDG_SetReload,"ax",%progbits
  70              		.align	2
  71              		.global	IWDG_SetReload
  72              		.thumb
  73              		.thumb_func
  75              	IWDG_SetReload:
  76              	.LFB31:
 117:.\StdPeriphLib\src/stm32f10x_iwdg.c **** }
 118:.\StdPeriphLib\src/stm32f10x_iwdg.c **** 
 119:.\StdPeriphLib\src/stm32f10x_iwdg.c **** /**
 120:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @brief  Sets IWDG Reload value.
 121:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @param  Reload: specifies the IWDG Reload value.
 122:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   *   This parameter must be a number between 0 and 0x0FFF.
 123:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @retval None
 124:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   */
 125:.\StdPeriphLib\src/stm32f10x_iwdg.c **** void IWDG_SetReload(uint16_t Reload)
 126:.\StdPeriphLib\src/stm32f10x_iwdg.c **** {
  77              		.loc 1 126 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82              	.LVL2:
 127:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   /* Check the parameters */
 128:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   assert_param(IS_IWDG_RELOAD(Reload));
 129:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   IWDG->RLR = Reload;
  83              		.loc 1 129 0
  84 0000 014B     		ldr	r3, .L8
  85 0002 9860     		str	r0, [r3, #8]
  86 0004 7047     		bx	lr
  87              	.L9:
  88 0006 00BF     		.align	2
  89              	.L8:
  90 0008 00300040 		.word	1073754112
  91              		.cfi_endproc
  92              	.LFE31:
  94              		.section	.text.IWDG_ReloadCounter,"ax",%progbits
  95              		.align	2
  96              		.global	IWDG_ReloadCounter
  97              		.thumb
  98              		.thumb_func
 100              	IWDG_ReloadCounter:
 101              	.LFB32:
 130:.\StdPeriphLib\src/stm32f10x_iwdg.c **** }
 131:.\StdPeriphLib\src/stm32f10x_iwdg.c **** 
 132:.\StdPeriphLib\src/stm32f10x_iwdg.c **** /**
 133:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @brief  Reloads IWDG counter with value defined in the reload register
 134:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   *   (write access to IWDG_PR and IWDG_RLR registers disabled).
 135:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @param  None
 136:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @retval None
 137:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   */
 138:.\StdPeriphLib\src/stm32f10x_iwdg.c **** void IWDG_ReloadCounter(void)
 139:.\StdPeriphLib\src/stm32f10x_iwdg.c **** {
 102              		.loc 1 139 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
 140:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   IWDG->KR = KR_KEY_Reload;
 107              		.loc 1 140 0
 108 0000 4AF6AA22 		movw	r2, #43690
 109 0004 014B     		ldr	r3, .L11
 110 0006 1A60     		str	r2, [r3]
 111 0008 7047     		bx	lr
 112              	.L12:
 113 000a 00BF     		.align	2
 114              	.L11:
 115 000c 00300040 		.word	1073754112
 116              		.cfi_endproc
 117              	.LFE32:
 119              		.section	.text.IWDG_Enable,"ax",%progbits
 120              		.align	2
 121              		.global	IWDG_Enable
 122              		.thumb
 123              		.thumb_func
 125              	IWDG_Enable:
 126              	.LFB33:
 141:.\StdPeriphLib\src/stm32f10x_iwdg.c **** }
 142:.\StdPeriphLib\src/stm32f10x_iwdg.c **** 
 143:.\StdPeriphLib\src/stm32f10x_iwdg.c **** /**
 144:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @brief  Enables IWDG (write access to IWDG_PR and IWDG_RLR registers disabled).
 145:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @param  None
 146:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @retval None
 147:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   */
 148:.\StdPeriphLib\src/stm32f10x_iwdg.c **** void IWDG_Enable(void)
 149:.\StdPeriphLib\src/stm32f10x_iwdg.c **** {
 127              		.loc 1 149 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              		@ link register save eliminated.
 150:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   IWDG->KR = KR_KEY_Enable;
 132              		.loc 1 150 0
 133 0000 4CF6CC42 		movw	r2, #52428
 134 0004 014B     		ldr	r3, .L14
 135 0006 1A60     		str	r2, [r3]
 136 0008 7047     		bx	lr
 137              	.L15:
 138 000a 00BF     		.align	2
 139              	.L14:
 140 000c 00300040 		.word	1073754112
 141              		.cfi_endproc
 142              	.LFE33:
 144              		.section	.text.IWDG_GetFlagStatus,"ax",%progbits
 145              		.align	2
 146              		.global	IWDG_GetFlagStatus
 147              		.thumb
 148              		.thumb_func
 150              	IWDG_GetFlagStatus:
 151              	.LFB34:
 151:.\StdPeriphLib\src/stm32f10x_iwdg.c **** }
 152:.\StdPeriphLib\src/stm32f10x_iwdg.c **** 
 153:.\StdPeriphLib\src/stm32f10x_iwdg.c **** /**
 154:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @brief  Checks whether the specified IWDG flag is set or not.
 155:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @param  IWDG_FLAG: specifies the flag to check.
 156:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   *   This parameter can be one of the following values:
 157:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   *     @arg IWDG_FLAG_PVU: Prescaler Value Update on going
 158:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   *     @arg IWDG_FLAG_RVU: Reload Value Update on going
 159:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   * @retval The new state of IWDG_FLAG (SET or RESET).
 160:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   */
 161:.\StdPeriphLib\src/stm32f10x_iwdg.c **** FlagStatus IWDG_GetFlagStatus(uint16_t IWDG_FLAG)
 162:.\StdPeriphLib\src/stm32f10x_iwdg.c **** {
 152              		.loc 1 162 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 157              	.LVL3:
 163:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   FlagStatus bitstatus = RESET;
 164:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   /* Check the parameters */
 165:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   assert_param(IS_IWDG_FLAG(IWDG_FLAG));
 166:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   if ((IWDG->SR & IWDG_FLAG) != (uint32_t)RESET)
 158              		.loc 1 166 0
 159 0000 034B     		ldr	r3, .L17
 160 0002 DB68     		ldr	r3, [r3, #12]
 161              	.LVL4:
 162 0004 1842     		tst	r0, r3
 167:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   {
 168:.\StdPeriphLib\src/stm32f10x_iwdg.c ****     bitstatus = SET;
 169:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   }
 170:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   else
 171:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   {
 172:.\StdPeriphLib\src/stm32f10x_iwdg.c ****     bitstatus = RESET;
 173:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   }
 174:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   /* Return the flag status */
 175:.\StdPeriphLib\src/stm32f10x_iwdg.c ****   return bitstatus;
 176:.\StdPeriphLib\src/stm32f10x_iwdg.c **** }
 163              		.loc 1 176 0
 164 0006 14BF     		ite	ne
 165 0008 0120     		movne	r0, #1
 166              	.LVL5:
 167 000a 0020     		moveq	r0, #0
 168 000c 7047     		bx	lr
 169              	.L18:
 170 000e 00BF     		.align	2
 171              	.L17:
 172 0010 00300040 		.word	1073754112
 173              		.cfi_endproc
 174              	.LFE34:
 176              		.text
 177              	.Letext0:
 178              		.file 2 "d:\\atomic\\sublime\\gnu tools arm embedded\\arm-none-eabi\\include\\machine\\_default_ty
 179              		.file 3 "d:\\atomic\\sublime\\gnu tools arm embedded\\arm-none-eabi\\include\\sys\\_stdint.h"
 180              		.file 4 ".\\CMSIS/stm32f10x.h"
 181              		.file 5 ".\\CMSIS/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_iwdg.c
C:\Users\Admin\AppData\Local\Temp\ccHd1U0d.s:19     .text.IWDG_WriteAccessCmd:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccHd1U0d.s:24     .text.IWDG_WriteAccessCmd:00000000 IWDG_WriteAccessCmd
C:\Users\Admin\AppData\Local\Temp\ccHd1U0d.s:40     .text.IWDG_WriteAccessCmd:00000008 $d
C:\Users\Admin\AppData\Local\Temp\ccHd1U0d.s:45     .text.IWDG_SetPrescaler:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccHd1U0d.s:50     .text.IWDG_SetPrescaler:00000000 IWDG_SetPrescaler
C:\Users\Admin\AppData\Local\Temp\ccHd1U0d.s:65     .text.IWDG_SetPrescaler:00000008 $d
C:\Users\Admin\AppData\Local\Temp\ccHd1U0d.s:70     .text.IWDG_SetReload:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccHd1U0d.s:75     .text.IWDG_SetReload:00000000 IWDG_SetReload
C:\Users\Admin\AppData\Local\Temp\ccHd1U0d.s:90     .text.IWDG_SetReload:00000008 $d
C:\Users\Admin\AppData\Local\Temp\ccHd1U0d.s:95     .text.IWDG_ReloadCounter:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccHd1U0d.s:100    .text.IWDG_ReloadCounter:00000000 IWDG_ReloadCounter
C:\Users\Admin\AppData\Local\Temp\ccHd1U0d.s:115    .text.IWDG_ReloadCounter:0000000c $d
C:\Users\Admin\AppData\Local\Temp\ccHd1U0d.s:120    .text.IWDG_Enable:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccHd1U0d.s:125    .text.IWDG_Enable:00000000 IWDG_Enable
C:\Users\Admin\AppData\Local\Temp\ccHd1U0d.s:140    .text.IWDG_Enable:0000000c $d
C:\Users\Admin\AppData\Local\Temp\ccHd1U0d.s:145    .text.IWDG_GetFlagStatus:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccHd1U0d.s:150    .text.IWDG_GetFlagStatus:00000000 IWDG_GetFlagStatus
C:\Users\Admin\AppData\Local\Temp\ccHd1U0d.s:172    .text.IWDG_GetFlagStatus:00000010 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
