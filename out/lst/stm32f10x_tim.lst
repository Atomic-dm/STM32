   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_tim.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.TI1_Config,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  23              	TI1_Config:
  24              	.LFB116:
  25              		.file 1 ".\\StdPeriphLib\\src/stm32f10x_tim.c"
   1:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
   2:.\StdPeriphLib\src/stm32f10x_tim.c ****   ******************************************************************************
   3:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @file    stm32f10x_tim.c
   4:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @author  MCD Application Team
   5:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @version V3.5.0
   6:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @date    11-March-2011
   7:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief   This file provides all the TIM firmware functions.
   8:.\StdPeriphLib\src/stm32f10x_tim.c ****   ******************************************************************************
   9:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @attention
  10:.\StdPeriphLib\src/stm32f10x_tim.c ****   *
  11:.\StdPeriphLib\src/stm32f10x_tim.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:.\StdPeriphLib\src/stm32f10x_tim.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:.\StdPeriphLib\src/stm32f10x_tim.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:.\StdPeriphLib\src/stm32f10x_tim.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:.\StdPeriphLib\src/stm32f10x_tim.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:.\StdPeriphLib\src/stm32f10x_tim.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:.\StdPeriphLib\src/stm32f10x_tim.c ****   *
  18:.\StdPeriphLib\src/stm32f10x_tim.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:.\StdPeriphLib\src/stm32f10x_tim.c ****   ******************************************************************************
  20:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
  21:.\StdPeriphLib\src/stm32f10x_tim.c **** 
  22:.\StdPeriphLib\src/stm32f10x_tim.c **** /* Includes ------------------------------------------------------------------*/
  23:.\StdPeriphLib\src/stm32f10x_tim.c **** #include "stm32f10x_tim.h"
  24:.\StdPeriphLib\src/stm32f10x_tim.c **** #include "stm32f10x_rcc.h"
  25:.\StdPeriphLib\src/stm32f10x_tim.c **** 
  26:.\StdPeriphLib\src/stm32f10x_tim.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @{
  28:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
  29:.\StdPeriphLib\src/stm32f10x_tim.c **** 
  30:.\StdPeriphLib\src/stm32f10x_tim.c **** /** @defgroup TIM 
  31:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief TIM driver modules
  32:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @{
  33:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
  34:.\StdPeriphLib\src/stm32f10x_tim.c **** 
  35:.\StdPeriphLib\src/stm32f10x_tim.c **** /** @defgroup TIM_Private_TypesDefinitions
  36:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @{
  37:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
  38:.\StdPeriphLib\src/stm32f10x_tim.c **** 
  39:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
  40:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @}
  41:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
  42:.\StdPeriphLib\src/stm32f10x_tim.c **** 
  43:.\StdPeriphLib\src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Defines
  44:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @{
  45:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
  46:.\StdPeriphLib\src/stm32f10x_tim.c **** 
  47:.\StdPeriphLib\src/stm32f10x_tim.c **** /* ---------------------- TIM registers bit mask ------------------------ */
  48:.\StdPeriphLib\src/stm32f10x_tim.c **** #define SMCR_ETR_Mask               ((uint16_t)0x00FF) 
  49:.\StdPeriphLib\src/stm32f10x_tim.c **** #define CCMR_Offset                 ((uint16_t)0x0018)
  50:.\StdPeriphLib\src/stm32f10x_tim.c **** #define CCER_CCE_Set                ((uint16_t)0x0001)  
  51:.\StdPeriphLib\src/stm32f10x_tim.c **** #define	CCER_CCNE_Set               ((uint16_t)0x0004) 
  52:.\StdPeriphLib\src/stm32f10x_tim.c **** 
  53:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
  54:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @}
  55:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
  56:.\StdPeriphLib\src/stm32f10x_tim.c **** 
  57:.\StdPeriphLib\src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Macros
  58:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @{
  59:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
  60:.\StdPeriphLib\src/stm32f10x_tim.c **** 
  61:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
  62:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @}
  63:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
  64:.\StdPeriphLib\src/stm32f10x_tim.c **** 
  65:.\StdPeriphLib\src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Variables
  66:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @{
  67:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
  68:.\StdPeriphLib\src/stm32f10x_tim.c **** 
  69:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
  70:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @}
  71:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
  72:.\StdPeriphLib\src/stm32f10x_tim.c **** 
  73:.\StdPeriphLib\src/stm32f10x_tim.c **** /** @defgroup TIM_Private_FunctionPrototypes
  74:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @{
  75:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
  76:.\StdPeriphLib\src/stm32f10x_tim.c **** 
  77:.\StdPeriphLib\src/stm32f10x_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
  78:.\StdPeriphLib\src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter);
  79:.\StdPeriphLib\src/stm32f10x_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
  80:.\StdPeriphLib\src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter);
  81:.\StdPeriphLib\src/stm32f10x_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
  82:.\StdPeriphLib\src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter);
  83:.\StdPeriphLib\src/stm32f10x_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
  84:.\StdPeriphLib\src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter);
  85:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
  86:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @}
  87:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
  88:.\StdPeriphLib\src/stm32f10x_tim.c **** 
  89:.\StdPeriphLib\src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Macros
  90:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @{
  91:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
  92:.\StdPeriphLib\src/stm32f10x_tim.c **** 
  93:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
  94:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @}
  95:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
  96:.\StdPeriphLib\src/stm32f10x_tim.c **** 
  97:.\StdPeriphLib\src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Variables
  98:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @{
  99:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
 100:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 101:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
 102:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @}
 103:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
 104:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 105:.\StdPeriphLib\src/stm32f10x_tim.c **** /** @defgroup TIM_Private_FunctionPrototypes
 106:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @{
 107:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
 108:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 109:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
 110:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @}
 111:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
 112:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 113:.\StdPeriphLib\src/stm32f10x_tim.c **** /** @defgroup TIM_Private_Functions
 114:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @{
 115:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
 116:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 117:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
 118:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Deinitializes the TIMx peripheral registers to their default reset values.
 119:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
 120:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
 121:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
 122:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_DeInit(TIM_TypeDef* TIMx)
 123:.\StdPeriphLib\src/stm32f10x_tim.c **** {
 124:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 125:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 126:.\StdPeriphLib\src/stm32f10x_tim.c ****  
 127:.\StdPeriphLib\src/stm32f10x_tim.c ****   if (TIMx == TIM1)
 128:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 129:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
 130:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
 131:.\StdPeriphLib\src/stm32f10x_tim.c ****   }     
 132:.\StdPeriphLib\src/stm32f10x_tim.c ****   else if (TIMx == TIM2)
 133:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 134:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, ENABLE);
 135:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
 136:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 137:.\StdPeriphLib\src/stm32f10x_tim.c ****   else if (TIMx == TIM3)
 138:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 139:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
 140:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
 141:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 142:.\StdPeriphLib\src/stm32f10x_tim.c ****   else if (TIMx == TIM4)
 143:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 144:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, ENABLE);
 145:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
 146:.\StdPeriphLib\src/stm32f10x_tim.c ****   } 
 147:.\StdPeriphLib\src/stm32f10x_tim.c ****   else if (TIMx == TIM5)
 148:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 149:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, ENABLE);
 150:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 151:.\StdPeriphLib\src/stm32f10x_tim.c ****   } 
 152:.\StdPeriphLib\src/stm32f10x_tim.c ****   else if (TIMx == TIM6)
 153:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 154:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, ENABLE);
 155:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 156:.\StdPeriphLib\src/stm32f10x_tim.c ****   } 
 157:.\StdPeriphLib\src/stm32f10x_tim.c ****   else if (TIMx == TIM7)
 158:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 159:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
 160:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 161:.\StdPeriphLib\src/stm32f10x_tim.c ****   } 
 162:.\StdPeriphLib\src/stm32f10x_tim.c ****   else if (TIMx == TIM8)
 163:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 164:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
 165:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);
 166:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 167:.\StdPeriphLib\src/stm32f10x_tim.c ****   else if (TIMx == TIM9)
 168:.\StdPeriphLib\src/stm32f10x_tim.c ****   {      
 169:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, ENABLE);
 170:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 171:.\StdPeriphLib\src/stm32f10x_tim.c ****    }  
 172:.\StdPeriphLib\src/stm32f10x_tim.c ****   else if (TIMx == TIM10)
 173:.\StdPeriphLib\src/stm32f10x_tim.c ****   {      
 174:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, ENABLE);
 175:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 176:.\StdPeriphLib\src/stm32f10x_tim.c ****   }  
 177:.\StdPeriphLib\src/stm32f10x_tim.c ****   else if (TIMx == TIM11) 
 178:.\StdPeriphLib\src/stm32f10x_tim.c ****   {     
 179:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, ENABLE);
 180:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 181:.\StdPeriphLib\src/stm32f10x_tim.c ****   }  
 182:.\StdPeriphLib\src/stm32f10x_tim.c ****   else if (TIMx == TIM12)
 183:.\StdPeriphLib\src/stm32f10x_tim.c ****   {      
 184:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, ENABLE);
 185:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 186:.\StdPeriphLib\src/stm32f10x_tim.c ****   }  
 187:.\StdPeriphLib\src/stm32f10x_tim.c ****   else if (TIMx == TIM13) 
 188:.\StdPeriphLib\src/stm32f10x_tim.c ****   {       
 189:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, ENABLE);
 190:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 191:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 192:.\StdPeriphLib\src/stm32f10x_tim.c ****   else if (TIMx == TIM14) 
 193:.\StdPeriphLib\src/stm32f10x_tim.c ****   {       
 194:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, ENABLE);
 195:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE);  
 196:.\StdPeriphLib\src/stm32f10x_tim.c ****   }        
 197:.\StdPeriphLib\src/stm32f10x_tim.c ****   else if (TIMx == TIM15)
 198:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 199:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM15, ENABLE);
 200:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM15, DISABLE);
 201:.\StdPeriphLib\src/stm32f10x_tim.c ****   } 
 202:.\StdPeriphLib\src/stm32f10x_tim.c ****   else if (TIMx == TIM16)
 203:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 204:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM16, ENABLE);
 205:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM16, DISABLE);
 206:.\StdPeriphLib\src/stm32f10x_tim.c ****   } 
 207:.\StdPeriphLib\src/stm32f10x_tim.c ****   else
 208:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 209:.\StdPeriphLib\src/stm32f10x_tim.c ****     if (TIMx == TIM17)
 210:.\StdPeriphLib\src/stm32f10x_tim.c ****     {
 211:.\StdPeriphLib\src/stm32f10x_tim.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM17, ENABLE);
 212:.\StdPeriphLib\src/stm32f10x_tim.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM17, DISABLE);
 213:.\StdPeriphLib\src/stm32f10x_tim.c ****     }  
 214:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 215:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 216:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 217:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
 218:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Time Base Unit peripheral according to 
 219:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         the specified parameters in the TIM_TimeBaseInitStruct.
 220:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
 221:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_TimeBaseInitStruct: pointer to a TIM_TimeBaseInitTypeDef
 222:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         structure that contains the configuration information for the 
 223:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         specified TIM peripheral.
 224:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
 225:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
 226:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 227:.\StdPeriphLib\src/stm32f10x_tim.c **** {
 228:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpcr1 = 0;
 229:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 230:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 231:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 232:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
 233:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));
 234:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 235:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpcr1 = TIMx->CR1;  
 236:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 237:.\StdPeriphLib\src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM2) || (TIMx == TIM3)||
 238:.\StdPeriphLib\src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 239:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 240:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Select the Counter Mode */
 241:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpcr1 &= (uint16_t)(~((uint16_t)(TIM_CR1_DIR | TIM_CR1_CMS)));
 242:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 243:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 244:.\StdPeriphLib\src/stm32f10x_tim.c ****  
 245:.\StdPeriphLib\src/stm32f10x_tim.c ****   if((TIMx != TIM6) && (TIMx != TIM7))
 246:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 247:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the clock division */
 248:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpcr1 &= (uint16_t)(~((uint16_t)TIM_CR1_CKD));
 249:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 250:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 251:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 252:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CR1 = tmpcr1;
 253:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 254:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Autoreload value */
 255:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
 256:.\StdPeriphLib\src/stm32f10x_tim.c ****  
 257:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Prescaler value */
 258:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
 259:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 260:.\StdPeriphLib\src/stm32f10x_tim.c ****   if ((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM15)|| (TIMx == TIM16) || (TIMx == TIM17))  
 261:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 262:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Repetition Counter value */
 263:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
 264:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 265:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 266:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Generate an update event to reload the Prescaler and the Repetition counter
 267:.\StdPeriphLib\src/stm32f10x_tim.c ****      values immediately */
 268:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->EGR = TIM_PSCReloadMode_Immediate;           
 269:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 270:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 271:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
 272:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Channel1 according to the specified
 273:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         parameters in the TIM_OCInitStruct.
 274:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
 275:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 276:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 277:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
 278:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
 279:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 280:.\StdPeriphLib\src/stm32f10x_tim.c **** {
 281:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 282:.\StdPeriphLib\src/stm32f10x_tim.c ****    
 283:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 284:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
 285:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 286:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 287:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 288:.\StdPeriphLib\src/stm32f10x_tim.c ****  /* Disable the Channel 1: Reset the CC1E Bit */
 289:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~(uint16_t)TIM_CCER_CC1E);
 290:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
 291:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 292:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 293:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 294:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 295:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
 296:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR1;
 297:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 298:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the Output Compare Mode Bits */
 299:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_OC1M));
 300:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_CC1S));
 301:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 302:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 303:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 304:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 305:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the Output Polarity level */
 306:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC1P));
 307:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 308:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 309:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 310:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Output State */
 311:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OutputState;
 312:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 313:.\StdPeriphLib\src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)|| (TIMx == TIM15)||
 314:.\StdPeriphLib\src/stm32f10x_tim.c ****      (TIMx == TIM16)|| (TIMx == TIM17))
 315:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 316:.\StdPeriphLib\src/stm32f10x_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 317:.\StdPeriphLib\src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 318:.\StdPeriphLib\src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 319:.\StdPeriphLib\src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 320:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 321:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Reset the Output N Polarity level */
 322:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC1NP));
 323:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 324:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
 325:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 326:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Reset the Output N State */
 327:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC1NE));    
 328:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Output N State */
 329:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
 330:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 331:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 332:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS1));
 333:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS1N));
 334:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 335:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 336:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
 337:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 338:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
 339:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 340:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CR2 */
 341:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 342:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 343:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 344:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 345:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 346:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Capture Compare Register value */
 347:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse; 
 348:.\StdPeriphLib\src/stm32f10x_tim.c ****  
 349:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 350:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 351:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 352:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 353:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
 354:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Channel2 according to the specified
 355:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         parameters in the TIM_OCInitStruct.
 356:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select 
 357:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         the TIM peripheral.
 358:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 359:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 360:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
 361:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
 362:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 363:.\StdPeriphLib\src/stm32f10x_tim.c **** {
 364:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 365:.\StdPeriphLib\src/stm32f10x_tim.c ****    
 366:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 367:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx)); 
 368:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 369:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 370:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 371:.\StdPeriphLib\src/stm32f10x_tim.c ****    /* Disable the Channel 2: Reset the CC2E Bit */
 372:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~((uint16_t)TIM_CCER_CC2E));
 373:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 374:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */  
 375:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 376:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 377:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 378:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 379:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
 380:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR1;
 381:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 382:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 383:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_OC2M));
 384:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR1_CC2S));
 385:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 386:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 387:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 388:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 389:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the Output Polarity level */
 390:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC2P));
 391:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 392:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 4);
 393:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 394:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Output State */
 395:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 4);
 396:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 397:.\StdPeriphLib\src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 398:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 399:.\StdPeriphLib\src/stm32f10x_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 400:.\StdPeriphLib\src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 401:.\StdPeriphLib\src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 402:.\StdPeriphLib\src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 403:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 404:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Reset the Output N Polarity level */
 405:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC2NP));
 406:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 407:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
 408:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 409:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Reset the Output N State */
 410:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC2NE));    
 411:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Output N State */
 412:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 4);
 413:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 414:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 415:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS2));
 416:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS2N));
 417:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 418:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 419:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 2);
 420:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 421:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
 422:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 423:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CR2 */
 424:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 425:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 426:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 427:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 428:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 429:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Capture Compare Register value */
 430:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
 431:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 432:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 433:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 434:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 435:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 436:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
 437:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Channel3 according to the specified
 438:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         parameters in the TIM_OCInitStruct.
 439:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 440:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 441:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 442:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
 443:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
 444:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 445:.\StdPeriphLib\src/stm32f10x_tim.c **** {
 446:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 447:.\StdPeriphLib\src/stm32f10x_tim.c ****    
 448:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 449:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 450:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 451:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 452:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 453:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
 454:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~((uint16_t)TIM_CCER_CC3E));
 455:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 456:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
 457:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 458:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 459:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 460:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 461:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the TIMx CCMR2 register value */
 462:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR2;
 463:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 464:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 465:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_OC3M));
 466:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_CC3S));  
 467:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 468:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 469:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 470:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the Output Polarity level */
 471:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC3P));
 472:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 473:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 8);
 474:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 475:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Output State */
 476:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 8);
 477:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 478:.\StdPeriphLib\src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 479:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 480:.\StdPeriphLib\src/stm32f10x_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 481:.\StdPeriphLib\src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 482:.\StdPeriphLib\src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 483:.\StdPeriphLib\src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 484:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 485:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Reset the Output N Polarity level */
 486:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC3NP));
 487:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 488:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
 489:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Reset the Output N State */
 490:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC3NE));
 491:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 492:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Output N State */
 493:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 8);
 494:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 495:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS3));
 496:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS3N));
 497:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 498:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 4);
 499:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 500:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
 501:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 502:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CR2 */
 503:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 504:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 505:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
 506:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 507:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 508:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Capture Compare Register value */
 509:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
 510:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 511:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 512:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 513:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 514:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 515:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
 516:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Initializes the TIMx Channel4 according to the specified
 517:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         parameters in the TIM_OCInitStruct.
 518:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 519:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure
 520:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 521:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
 522:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
 523:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 524:.\StdPeriphLib\src/stm32f10x_tim.c **** {
 525:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 526:.\StdPeriphLib\src/stm32f10x_tim.c ****    
 527:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 528:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 529:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 530:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 531:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 532:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Disable the Channel 2: Reset the CC4E Bit */
 533:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)(~((uint16_t)TIM_CCER_CC4E));
 534:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 535:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
 536:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 537:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 538:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpcr2 =  TIMx->CR2;
 539:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 540:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the TIMx CCMR2 register value */
 541:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmrx = TIMx->CCMR2;
 542:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 543:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 544:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_OC4M));
 545:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmrx &= (uint16_t)(~((uint16_t)TIM_CCMR2_CC4S));
 546:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 547:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 548:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 549:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 550:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the Output Polarity level */
 551:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(~((uint16_t)TIM_CCER_CC4P));
 552:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 553:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 12);
 554:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 555:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Output State */
 556:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 12);
 557:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 558:.\StdPeriphLib\src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 559:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 560:.\StdPeriphLib\src/stm32f10x_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 561:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Reset the Output Compare IDLE State */
 562:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpcr2 &= (uint16_t)(~((uint16_t)TIM_CR2_OIS4));
 563:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 564:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 6);
 565:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 566:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CR2 */
 567:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CR2 = tmpcr2;
 568:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 569:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */  
 570:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 571:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 572:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Capture Compare Register value */
 573:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
 574:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 575:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 576:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 577:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 578:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 579:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
 580:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Initializes the TIM peripheral according to the specified
 581:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         parameters in the TIM_ICInitStruct.
 582:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
 583:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure
 584:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 585:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
 586:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
 587:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
 588:.\StdPeriphLib\src/stm32f10x_tim.c **** {
 589:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 590:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_ICInitStruct->TIM_Channel));  
 591:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_SELECTION(TIM_ICInitStruct->TIM_ICSelection));
 592:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICInitStruct->TIM_ICPrescaler));
 593:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_FILTER(TIM_ICInitStruct->TIM_ICFilter));
 594:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 595:.\StdPeriphLib\src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
 596:.\StdPeriphLib\src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
 597:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 598:.\StdPeriphLib\src/stm32f10x_tim.c ****     assert_param(IS_TIM_IC_POLARITY(TIM_ICInitStruct->TIM_ICPolarity));
 599:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 600:.\StdPeriphLib\src/stm32f10x_tim.c ****   else
 601:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 602:.\StdPeriphLib\src/stm32f10x_tim.c ****     assert_param(IS_TIM_IC_POLARITY_LITE(TIM_ICInitStruct->TIM_ICPolarity));
 603:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 604:.\StdPeriphLib\src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 605:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 606:.\StdPeriphLib\src/stm32f10x_tim.c ****     assert_param(IS_TIM_LIST8_PERIPH(TIMx));
 607:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* TI1 Configuration */
 608:.\StdPeriphLib\src/stm32f10x_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 609:.\StdPeriphLib\src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 610:.\StdPeriphLib\src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 611:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 612:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 613:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 614:.\StdPeriphLib\src/stm32f10x_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
 615:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 616:.\StdPeriphLib\src/stm32f10x_tim.c ****     assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 617:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* TI2 Configuration */
 618:.\StdPeriphLib\src/stm32f10x_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 619:.\StdPeriphLib\src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 620:.\StdPeriphLib\src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 621:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 622:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 623:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 624:.\StdPeriphLib\src/stm32f10x_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
 625:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 626:.\StdPeriphLib\src/stm32f10x_tim.c ****     assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 627:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* TI3 Configuration */
 628:.\StdPeriphLib\src/stm32f10x_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 629:.\StdPeriphLib\src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 630:.\StdPeriphLib\src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 631:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 632:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 633:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 634:.\StdPeriphLib\src/stm32f10x_tim.c ****   else
 635:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 636:.\StdPeriphLib\src/stm32f10x_tim.c ****     assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 637:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* TI4 Configuration */
 638:.\StdPeriphLib\src/stm32f10x_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 639:.\StdPeriphLib\src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 640:.\StdPeriphLib\src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 641:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 642:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 643:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 644:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 645:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 646:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
 647:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configures the TIM peripheral according to the specified
 648:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         parameters in the TIM_ICInitStruct to measure an external PWM signal.
 649:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
 650:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure
 651:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 652:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
 653:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
 654:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
 655:.\StdPeriphLib\src/stm32f10x_tim.c **** {
 656:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
 657:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t icoppositeselection = TIM_ICSelection_DirectTI;
 658:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 659:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 660:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Select the Opposite Input Polarity */
 661:.\StdPeriphLib\src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
 662:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 663:.\StdPeriphLib\src/stm32f10x_tim.c ****     icoppositepolarity = TIM_ICPolarity_Falling;
 664:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 665:.\StdPeriphLib\src/stm32f10x_tim.c ****   else
 666:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 667:.\StdPeriphLib\src/stm32f10x_tim.c ****     icoppositepolarity = TIM_ICPolarity_Rising;
 668:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 669:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Select the Opposite Input */
 670:.\StdPeriphLib\src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
 671:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 672:.\StdPeriphLib\src/stm32f10x_tim.c ****     icoppositeselection = TIM_ICSelection_IndirectTI;
 673:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 674:.\StdPeriphLib\src/stm32f10x_tim.c ****   else
 675:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 676:.\StdPeriphLib\src/stm32f10x_tim.c ****     icoppositeselection = TIM_ICSelection_DirectTI;
 677:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 678:.\StdPeriphLib\src/stm32f10x_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 679:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 680:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* TI1 Configuration */
 681:.\StdPeriphLib\src/stm32f10x_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 682:.\StdPeriphLib\src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 683:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 684:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 685:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* TI2 Configuration */
 686:.\StdPeriphLib\src/stm32f10x_tim.c ****     TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 687:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 688:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 689:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 690:.\StdPeriphLib\src/stm32f10x_tim.c ****   else
 691:.\StdPeriphLib\src/stm32f10x_tim.c ****   { 
 692:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* TI2 Configuration */
 693:.\StdPeriphLib\src/stm32f10x_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 694:.\StdPeriphLib\src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 695:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 696:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 697:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* TI1 Configuration */
 698:.\StdPeriphLib\src/stm32f10x_tim.c ****     TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 699:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 700:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 701:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 702:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 703:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 704:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
 705:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configures the: Break feature, dead time, Lock level, the OSSI,
 706:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         the OSSR State and the AOE(automatic output enable).
 707:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIM 
 708:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure that
 709:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         contains the BDTR Register configuration  information for the TIM peripheral.
 710:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
 711:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
 712:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_BDTRConfig(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct)
 713:.\StdPeriphLib\src/stm32f10x_tim.c **** {
 714:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 715:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
 716:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OSSR_STATE(TIM_BDTRInitStruct->TIM_OSSRState));
 717:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OSSI_STATE(TIM_BDTRInitStruct->TIM_OSSIState));
 718:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LOCK_LEVEL(TIM_BDTRInitStruct->TIM_LOCKLevel));
 719:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_BREAK_STATE(TIM_BDTRInitStruct->TIM_Break));
 720:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_BREAK_POLARITY(TIM_BDTRInitStruct->TIM_BreakPolarity));
 721:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(TIM_BDTRInitStruct->TIM_AutomaticOutput));
 722:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Lock level, the Break enable Bit and the Ploarity, the OSSR State,
 723:.\StdPeriphLib\src/stm32f10x_tim.c ****      the OSSI State, the dead time value and the Automatic Output Enable Bit */
 724:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 725:.\StdPeriphLib\src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 726:.\StdPeriphLib\src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
 727:.\StdPeriphLib\src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
 728:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 729:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 730:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
 731:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Fills each TIM_TimeBaseInitStruct member with its default value.
 732:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_TimeBaseInitStruct : pointer to a TIM_TimeBaseInitTypeDef
 733:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         structure which will be initialized.
 734:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
 735:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
 736:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 737:.\StdPeriphLib\src/stm32f10x_tim.c **** {
 738:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the default configuration */
 739:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_Period = 0xFFFF;
 740:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 741:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 742:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 743:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 744:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 745:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 746:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
 747:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Fills each TIM_OCInitStruct member with its default value.
 748:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_OCInitStruct : pointer to a TIM_OCInitTypeDef structure which will
 749:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         be initialized.
 750:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
 751:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
 752:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct)
 753:.\StdPeriphLib\src/stm32f10x_tim.c **** {
 754:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the default configuration */
 755:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
 756:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 757:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 758:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x0000;
 759:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 760:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 761:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 762:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 763:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 764:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 765:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
 766:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Fills each TIM_ICInitStruct member with its default value.
 767:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure which will
 768:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         be initialized.
 769:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
 770:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
 771:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct)
 772:.\StdPeriphLib\src/stm32f10x_tim.c **** {
 773:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the default configuration */
 774:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
 775:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
 776:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 777:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 778:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 779:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 780:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 781:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
 782:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Fills each TIM_BDTRInitStruct member with its default value.
 783:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure which
 784:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         will be initialized.
 785:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
 786:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
 787:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)
 788:.\StdPeriphLib\src/stm32f10x_tim.c **** {
 789:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the default configuration */
 790:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
 791:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 792:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 793:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 794:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 795:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 796:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 797:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 798:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 799:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
 800:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Enables or disables the specified TIM peripheral.
 801:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIMx peripheral.
 802:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIMx peripheral.
 803:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
 804:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
 805:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
 806:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_Cmd(TIM_TypeDef* TIMx, FunctionalState NewState)
 807:.\StdPeriphLib\src/stm32f10x_tim.c **** {
 808:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 809:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 810:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 811:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 812:.\StdPeriphLib\src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 813:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 814:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Enable the TIM Counter */
 815:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_CEN;
 816:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 817:.\StdPeriphLib\src/stm32f10x_tim.c ****   else
 818:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 819:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Disable the TIM Counter */
 820:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)(~((uint16_t)TIM_CR1_CEN));
 821:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 822:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 823:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 824:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
 825:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIM peripheral Main Outputs.
 826:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 8, 15, 16 or 17 to select the TIMx peripheral.
 827:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIM peripheral Main Outputs.
 828:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
 829:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
 830:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
 831:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_CtrlPWMOutputs(TIM_TypeDef* TIMx, FunctionalState NewState)
 832:.\StdPeriphLib\src/stm32f10x_tim.c **** {
 833:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 834:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
 835:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 836:.\StdPeriphLib\src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 837:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 838:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Enable the TIM Main Output */
 839:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIMx->BDTR |= TIM_BDTR_MOE;
 840:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 841:.\StdPeriphLib\src/stm32f10x_tim.c ****   else
 842:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 843:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Disable the TIM Main Output */
 844:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIMx->BDTR &= (uint16_t)(~((uint16_t)TIM_BDTR_MOE));
 845:.\StdPeriphLib\src/stm32f10x_tim.c ****   }  
 846:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 847:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 848:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
 849:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Enables or disables the specified TIM interrupts.
 850:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIMx peripheral.
 851:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_IT: specifies the TIM interrupts sources to be enabled or disabled.
 852:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be any combination of the following values:
 853:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_IT_Update: TIM update Interrupt source
 854:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
 855:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
 856:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
 857:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
 858:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_IT_COM: TIM Commutation Interrupt source
 859:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_IT_Trigger: TIM Trigger Interrupt source
 860:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_IT_Break: TIM Break Interrupt source
 861:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @note 
 862:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can only generate an update interrupt.
 863:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_IT_Update, TIM_IT_CC1,
 864:.\StdPeriphLib\src/stm32f10x_tim.c ****   *      TIM_IT_CC2 or TIM_IT_Trigger. 
 865:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_IT_Update or TIM_IT_CC1.   
 866:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   - TIM_IT_Break is used only with TIM1, TIM8 and TIM15. 
 867:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   - TIM_IT_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.    
 868:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIM interrupts.
 869:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
 870:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
 871:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
 872:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_ITConfig(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState)
 873:.\StdPeriphLib\src/stm32f10x_tim.c **** {  
 874:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 875:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 876:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
 877:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 878:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 879:.\StdPeriphLib\src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 880:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 881:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Enable the Interrupt sources */
 882:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIMx->DIER |= TIM_IT;
 883:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 884:.\StdPeriphLib\src/stm32f10x_tim.c ****   else
 885:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 886:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Disable the Interrupt sources */
 887:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_IT;
 888:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 889:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 890:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 891:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
 892:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configures the TIMx event to be generate by software.
 893:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
 894:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_EventSource: specifies the event source.
 895:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one or more of the following values:	   
 896:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_Update: Timer update Event source
 897:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_CC1: Timer Capture Compare 1 Event source
 898:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_CC2: Timer Capture Compare 2 Event source
 899:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_CC3: Timer Capture Compare 3 Event source
 900:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_CC4: Timer Capture Compare 4 Event source
 901:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_COM: Timer COM event source  
 902:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_Trigger: Timer Trigger Event source
 903:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_EventSource_Break: Timer Break event source
 904:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @note 
 905:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can only generate an update event. 
 906:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   - TIM_EventSource_COM and TIM_EventSource_Break are used only with TIM1 and TIM8.      
 907:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
 908:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
 909:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_GenerateEvent(TIM_TypeDef* TIMx, uint16_t TIM_EventSource)
 910:.\StdPeriphLib\src/stm32f10x_tim.c **** { 
 911:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 912:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 913:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(TIM_EventSource));
 914:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 915:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the event sources */
 916:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->EGR = TIM_EventSource;
 917:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 918:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 919:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
 920:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configures the TIMx's DMA interface.
 921:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 15, 16 or 17 to select 
 922:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   the TIM peripheral.
 923:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_DMABase: DMA Base address.
 924:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
 925:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_DMABase_CR, TIM_DMABase_CR2, TIM_DMABase_SMCR,
 926:.\StdPeriphLib\src/stm32f10x_tim.c ****   *          TIM_DMABase_DIER, TIM1_DMABase_SR, TIM_DMABase_EGR,
 927:.\StdPeriphLib\src/stm32f10x_tim.c ****   *          TIM_DMABase_CCMR1, TIM_DMABase_CCMR2, TIM_DMABase_CCER,
 928:.\StdPeriphLib\src/stm32f10x_tim.c ****   *          TIM_DMABase_CNT, TIM_DMABase_PSC, TIM_DMABase_ARR,
 929:.\StdPeriphLib\src/stm32f10x_tim.c ****   *          TIM_DMABase_RCR, TIM_DMABase_CCR1, TIM_DMABase_CCR2,
 930:.\StdPeriphLib\src/stm32f10x_tim.c ****   *          TIM_DMABase_CCR3, TIM_DMABase_CCR4, TIM_DMABase_BDTR,
 931:.\StdPeriphLib\src/stm32f10x_tim.c ****   *          TIM_DMABase_DCR.
 932:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_DMABurstLength: DMA Burst length.
 933:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one value between:
 934:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   TIM_DMABurstLength_1Transfer and TIM_DMABurstLength_18Transfers.
 935:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
 936:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
 937:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_DMAConfig(TIM_TypeDef* TIMx, uint16_t TIM_DMABase, uint16_t TIM_DMABurstLength)
 938:.\StdPeriphLib\src/stm32f10x_tim.c **** {
 939:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 940:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
 941:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_DMA_BASE(TIM_DMABase));
 942:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(TIM_DMABurstLength));
 943:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the DMA Base and the DMA Burst Length */
 944:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->DCR = TIM_DMABase | TIM_DMABurstLength;
 945:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 946:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 947:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
 948:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx's DMA Requests.
 949:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 6, 7, 8, 15, 16 or 17 
 950:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   to select the TIM peripheral. 
 951:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_DMASource: specifies the DMA Request sources.
 952:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be any combination of the following values:
 953:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_DMA_Update: TIM update Interrupt source
 954:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
 955:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
 956:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
 957:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
 958:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_DMA_COM: TIM Commutation DMA source
 959:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_DMA_Trigger: TIM Trigger DMA source
 960:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  NewState: new state of the DMA Request sources.
 961:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
 962:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
 963:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
 964:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_DMACmd(TIM_TypeDef* TIMx, uint16_t TIM_DMASource, FunctionalState NewState)
 965:.\StdPeriphLib\src/stm32f10x_tim.c **** { 
 966:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 967:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST9_PERIPH(TIMx));
 968:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(TIM_DMASource));
 969:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 970:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 971:.\StdPeriphLib\src/stm32f10x_tim.c ****   if (NewState != DISABLE)
 972:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 973:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Enable the DMA sources */
 974:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIMx->DIER |= TIM_DMASource; 
 975:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 976:.\StdPeriphLib\src/stm32f10x_tim.c ****   else
 977:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 978:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Disable the DMA sources */
 979:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_DMASource;
 980:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 981:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 982:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 983:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
 984:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configures the TIMx internal Clock
 985:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15
 986:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         to select the TIM peripheral.
 987:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
 988:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
 989:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_InternalClockConfig(TIM_TypeDef* TIMx)
 990:.\StdPeriphLib\src/stm32f10x_tim.c **** {
 991:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 992:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
 993:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Disable slave mode to clock the prescaler directly with the internal clock */
 994:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->SMCR &=  (uint16_t)(~((uint16_t)TIM_SMCR_SMS));
 995:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 996:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 997:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
 998:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Internal Trigger as External Clock
 999:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 9, 12 or 15 to select the TIM peripheral.
1000:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ITRSource: Trigger source.
1001:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1002:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_TS_ITR0: Internal Trigger 0
1003:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_TS_ITR1: Internal Trigger 1
1004:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_TS_ITR2: Internal Trigger 2
1005:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_TS_ITR3: Internal Trigger 3
1006:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1007:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1008:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
1009:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1010:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1011:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1012:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_INTERNAL_TRIGGER_SELECTION(TIM_InputTriggerSource));
1013:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Select the Internal Trigger */
1014:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_InputTriggerSource);
1015:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Select the External clock mode1 */
1016:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
1017:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1018:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1019:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1020:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Trigger as External Clock
1021:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 9, 12 or 15 to select the TIM peripheral.
1022:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_TIxExternalCLKSource: Trigger source.
1023:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1024:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_TIxExternalCLK1Source_TI1ED: TI1 Edge Detector
1025:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_TIxExternalCLK1Source_TI1: Filtered Timer Input 1
1026:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_TIxExternalCLK1Source_TI2: Filtered Timer Input 2
1027:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity: specifies the TIx Polarity.
1028:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1029:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
1030:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
1031:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  ICFilter : specifies the filter value.
1032:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x0 and 0xF.
1033:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1034:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1035:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource,
1036:.\StdPeriphLib\src/stm32f10x_tim.c ****                                 uint16_t TIM_ICPolarity, uint16_t ICFilter)
1037:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1038:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1039:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1040:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_TIXCLK_SOURCE(TIM_TIxExternalCLKSource));
1041:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICPolarity));
1042:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_FILTER(ICFilter));
1043:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Configure the Timer Input Clock Source */
1044:.\StdPeriphLib\src/stm32f10x_tim.c ****   if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
1045:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
1046:.\StdPeriphLib\src/stm32f10x_tim.c ****     TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
1047:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
1048:.\StdPeriphLib\src/stm32f10x_tim.c ****   else
1049:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
1050:.\StdPeriphLib\src/stm32f10x_tim.c ****     TI1_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
1051:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
1052:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Select the Trigger source */
1053:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_TIxExternalCLKSource);
1054:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Select the External clock mode1 */
1055:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
1056:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1057:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1058:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1059:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configures the External clock Mode1
1060:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1061:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
1062:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1063:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
1064:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
1065:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
1066:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
1067:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
1068:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1069:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
1070:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
1071:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
1072:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F
1073:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1074:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1075:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRGPo
1076:.\StdPeriphLib\src/stm32f10x_tim.c ****                              uint16_t ExtTRGFilter)
1077:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1078:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
1079:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1080:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1081:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
1082:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
1083:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
1084:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Configure the ETR Clock source */
1085:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
1086:.\StdPeriphLib\src/stm32f10x_tim.c ****   
1087:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the TIMx SMCR register value */
1088:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
1089:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the SMS Bits */
1090:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_SMS));
1091:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Select the External clock mode1 */
1092:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpsmcr |= TIM_SlaveMode_External1;
1093:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Select the Trigger selection : ETRF */
1094:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_TS));
1095:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpsmcr |= TIM_TS_ETRF;
1096:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
1097:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
1098:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1099:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1100:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1101:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configures the External clock Mode2
1102:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1103:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
1104:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1105:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
1106:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
1107:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
1108:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
1109:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
1110:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1111:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
1112:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
1113:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
1114:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F
1115:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1116:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1117:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, 
1118:.\StdPeriphLib\src/stm32f10x_tim.c ****                              uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
1119:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1120:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1121:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1122:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
1123:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
1124:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
1125:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Configure the ETR Clock source */
1126:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
1127:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Enable the External clock mode2 */
1128:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SMCR_ECE;
1129:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1130:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1131:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1132:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configures the TIMx External Trigger (ETR).
1133:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1134:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
1135:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1136:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
1137:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
1138:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
1139:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
1140:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
1141:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1142:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
1143:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
1144:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
1145:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F
1146:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1147:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1148:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRGPolarity,
1149:.\StdPeriphLib\src/stm32f10x_tim.c ****                    uint16_t ExtTRGFilter)
1150:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1151:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
1152:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1153:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1154:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
1155:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
1156:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
1157:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
1158:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the ETR Bits */
1159:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpsmcr &= SMCR_ETR_Mask;
1160:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
1161:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpsmcr |= (uint16_t)(TIM_ExtTRGPrescaler | (uint16_t)(TIM_ExtTRGPolarity | (uint16_t)(ExtTRGFilt
1162:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
1163:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
1164:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1165:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1166:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1167:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Prescaler.
1168:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
1169:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  Prescaler: specifies the Prescaler Register value
1170:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_PSCReloadMode: specifies the TIM Prescaler Reload mode
1171:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1172:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_PSCReloadMode_Update: The Prescaler is loaded at the update event.
1173:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_PSCReloadMode_Immediate: The Prescaler is loaded immediately.
1174:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1175:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1176:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_PrescalerConfig(TIM_TypeDef* TIMx, uint16_t Prescaler, uint16_t TIM_PSCReloadMode)
1177:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1178:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1179:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
1180:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_PRESCALER_RELOAD(TIM_PSCReloadMode));
1181:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Prescaler value */
1182:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->PSC = Prescaler;
1183:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set or reset the UG Bit */
1184:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->EGR = TIM_PSCReloadMode;
1185:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1186:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1187:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1188:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Specifies the TIMx Counter Mode to be used.
1189:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1190:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_CounterMode: specifies the Counter Mode to be used
1191:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1192:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_Up: TIM Up Counting Mode
1193:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_Down: TIM Down Counting Mode
1194:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_CenterAligned1: TIM Center Aligned Mode1
1195:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_CenterAligned2: TIM Center Aligned Mode2
1196:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_CounterMode_CenterAligned3: TIM Center Aligned Mode3
1197:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1198:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1199:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_CounterModeConfig(TIM_TypeDef* TIMx, uint16_t TIM_CounterMode)
1200:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1201:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpcr1 = 0;
1202:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1203:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1204:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_CounterMode));
1205:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpcr1 = TIMx->CR1;
1206:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the CMS and DIR Bits */
1207:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpcr1 &= (uint16_t)(~((uint16_t)(TIM_CR1_DIR | TIM_CR1_CMS)));
1208:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Counter Mode */
1209:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpcr1 |= TIM_CounterMode;
1210:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CR1 register */
1211:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CR1 = tmpcr1;
1212:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1213:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1214:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1215:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Selects the Input Trigger source
1216:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
1217:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_InputTriggerSource: The Input Trigger source.
1218:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1219:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_TS_ITR0: Internal Trigger 0
1220:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_TS_ITR1: Internal Trigger 1
1221:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_TS_ITR2: Internal Trigger 2
1222:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_TS_ITR3: Internal Trigger 3
1223:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_TS_TI1F_ED: TI1 Edge Detector
1224:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_TS_TI1FP1: Filtered Timer Input 1
1225:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_TS_TI2FP2: Filtered Timer Input 2
1226:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_TS_ETRF: External Trigger input
1227:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1228:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1229:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
1230:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1231:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
1232:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1233:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1234:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(TIM_InputTriggerSource));
1235:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the TIMx SMCR register value */
1236:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
1237:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the TS Bits */
1238:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_TS));
1239:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Input Trigger source */
1240:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
1241:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
1242:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
1243:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1244:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1245:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1246:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Encoder Interface.
1247:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1248:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_EncoderMode: specifies the TIMx Encoder Mode.
1249:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1250:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_EncoderMode_TI1: Counter counts on TI1FP1 edge depending on TI2FP2 level.
1251:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_EncoderMode_TI2: Counter counts on TI2FP2 edge depending on TI1FP1 level.
1252:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_EncoderMode_TI12: Counter counts on both TI1FP1 and TI2FP2 edges depending
1253:.\StdPeriphLib\src/stm32f10x_tim.c ****   *                                on the level of the other input.
1254:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_IC1Polarity: specifies the IC1 Polarity
1255:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1256:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling: IC Falling edge.
1257:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising: IC Rising edge.
1258:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_IC2Polarity: specifies the IC2 Polarity
1259:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1260:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling: IC Falling edge.
1261:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising: IC Rising edge.
1262:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1263:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1264:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_EncoderInterfaceConfig(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode,
1265:.\StdPeriphLib\src/stm32f10x_tim.c ****                                 uint16_t TIM_IC1Polarity, uint16_t TIM_IC2Polarity)
1266:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1267:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
1268:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1269:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1270:.\StdPeriphLib\src/stm32f10x_tim.c ****     
1271:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1272:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx));
1273:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(TIM_EncoderMode));
1274:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC1Polarity));
1275:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC2Polarity));
1276:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1277:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the TIMx SMCR register value */
1278:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpsmcr = TIMx->SMCR;
1279:.\StdPeriphLib\src/stm32f10x_tim.c ****   
1280:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
1281:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1282:.\StdPeriphLib\src/stm32f10x_tim.c ****   
1283:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
1284:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1285:.\StdPeriphLib\src/stm32f10x_tim.c ****   
1286:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the encoder Mode */
1287:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpsmcr &= (uint16_t)(~((uint16_t)TIM_SMCR_SMS));
1288:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpsmcr |= TIM_EncoderMode;
1289:.\StdPeriphLib\src/stm32f10x_tim.c ****   
1290:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Select the Capture Compare 1 and the Capture Compare 2 as input */
1291:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR1_CC1S)) & (uint16_t)(~((uint16_t)TIM_CCMR1
1292:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
1293:.\StdPeriphLib\src/stm32f10x_tim.c ****   
1294:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the TI1 and the TI2 Polarities */
1295:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCER_CC1P)) & ((uint16_t)~((uint16_t)TIM_CCER_CC
1296:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
1297:.\StdPeriphLib\src/stm32f10x_tim.c ****   
1298:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
1299:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->SMCR = tmpsmcr;
1300:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
1301:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1302:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
1303:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1304:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1305:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1306:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1307:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Forces the TIMx output 1 waveform to active or inactive level.
1308:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
1309:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1310:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1311:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC1REF
1312:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC1REF.
1313:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1314:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1315:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_ForcedOC1Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1316:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1317:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1318:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1319:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
1320:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1321:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1322:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC1M Bits */
1323:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1M);
1324:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
1325:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_ForcedAction;
1326:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1327:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1328:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1329:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1330:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1331:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Forces the TIMx output 2 waveform to active or inactive level.
1332:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
1333:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1334:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1335:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC2REF
1336:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC2REF.
1337:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1338:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1339:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_ForcedOC2Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1340:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1341:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1342:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1343:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1344:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1345:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1346:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC2M Bits */
1347:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2M);
1348:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
1349:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ForcedAction << 8);
1350:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1351:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1352:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1353:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1354:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1355:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Forces the TIMx output 3 waveform to active or inactive level.
1356:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1357:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1358:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1359:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC3REF
1360:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC3REF.
1361:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1362:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1363:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_ForcedOC3Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1364:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1365:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1366:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1367:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1368:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1369:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1370:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC1M Bits */
1371:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3M);
1372:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
1373:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_ForcedAction;
1374:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1375:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1376:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1377:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1378:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1379:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Forces the TIMx output 4 waveform to active or inactive level.
1380:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1381:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1382:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1383:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active: Force active level on OC4REF
1384:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive: Force inactive level on OC4REF.
1385:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1386:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1387:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_ForcedOC4Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1388:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1389:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1390:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1391:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1392:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1393:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1394:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC2M Bits */
1395:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4M);
1396:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
1397:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ForcedAction << 8);
1398:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1399:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1400:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1401:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1402:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1403:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Enables or disables TIMx peripheral Preload register on ARR.
1404:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 to select the TIM peripheral.
1405:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIMx peripheral Preload register
1406:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
1407:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1408:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1409:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_ARRPreloadConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
1410:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1411:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1412:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
1413:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1414:.\StdPeriphLib\src/stm32f10x_tim.c ****   if (NewState != DISABLE)
1415:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
1416:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the ARR Preload Bit */
1417:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_ARPE;
1418:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
1419:.\StdPeriphLib\src/stm32f10x_tim.c ****   else
1420:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
1421:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Reset the ARR Preload Bit */
1422:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_ARPE);
1423:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
1424:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1425:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1426:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1427:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Selects the TIM peripheral Commutation event.
1428:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 8, 15, 16 or 17 to select the TIMx peripheral
1429:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  NewState: new state of the Commutation event.
1430:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
1431:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1432:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1433:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_SelectCOM(TIM_TypeDef* TIMx, FunctionalState NewState)
1434:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1435:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1436:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1437:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1438:.\StdPeriphLib\src/stm32f10x_tim.c ****   if (NewState != DISABLE)
1439:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
1440:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the COM Bit */
1441:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_CCUS;
1442:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
1443:.\StdPeriphLib\src/stm32f10x_tim.c ****   else
1444:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
1445:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Reset the COM Bit */
1446:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_CCUS);
1447:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
1448:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1449:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1450:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1451:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Selects the TIMx peripheral Capture Compare DMA source.
1452:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 15, 16 or 17 to select 
1453:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         the TIM peripheral.
1454:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  NewState: new state of the Capture Compare DMA source
1455:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
1456:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1457:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1458:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_SelectCCDMA(TIM_TypeDef* TIMx, FunctionalState NewState)
1459:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1460:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1461:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1462:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1463:.\StdPeriphLib\src/stm32f10x_tim.c ****   if (NewState != DISABLE)
1464:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
1465:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the CCDS Bit */
1466:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_CCDS;
1467:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
1468:.\StdPeriphLib\src/stm32f10x_tim.c ****   else
1469:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
1470:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Reset the CCDS Bit */
1471:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_CCDS);
1472:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
1473:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1474:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1475:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1476:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Sets or Resets the TIM peripheral Capture Compare Preload Control bit.
1477:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be   1, 2, 3, 4, 5, 8 or 15 
1478:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         to select the TIMx peripheral
1479:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  NewState: new state of the Capture Compare Preload Control bit
1480:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
1481:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1482:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1483:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_CCPreloadControl(TIM_TypeDef* TIMx, FunctionalState NewState)
1484:.\StdPeriphLib\src/stm32f10x_tim.c **** { 
1485:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1486:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx));
1487:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1488:.\StdPeriphLib\src/stm32f10x_tim.c ****   if (NewState != DISABLE)
1489:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
1490:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the CCPC Bit */
1491:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_CCPC;
1492:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
1493:.\StdPeriphLib\src/stm32f10x_tim.c ****   else
1494:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
1495:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Reset the CCPC Bit */
1496:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_CCPC);
1497:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
1498:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1499:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1500:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1501:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR1.
1502:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
1503:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1504:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1505:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Enable
1506:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Disable
1507:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1508:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1509:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_OC1PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1510:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1511:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1512:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1513:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
1514:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1515:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1516:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC1PE Bit */
1517:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1PE);
1518:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1519:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_OCPreload;
1520:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1521:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1522:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1523:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1524:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1525:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR2.
1526:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select 
1527:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         the TIM peripheral.
1528:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1529:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1530:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Enable
1531:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Disable
1532:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1533:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1534:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_OC2PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1535:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1536:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1537:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1538:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1539:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1540:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1541:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC2PE Bit */
1542:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2PE);
1543:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1544:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCPreload << 8);
1545:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1546:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1547:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1548:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1549:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1550:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR3.
1551:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1552:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1553:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1554:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Enable
1555:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Disable
1556:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1557:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1558:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_OC3PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1559:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1560:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1561:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1562:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1563:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1564:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1565:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC3PE Bit */
1566:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3PE);
1567:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1568:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_OCPreload;
1569:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1570:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1571:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1572:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1573:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1574:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR4.
1575:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1576:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1577:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1578:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Enable
1579:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCPreload_Disable
1580:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1581:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1582:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_OC4PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1583:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1584:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1585:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1586:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1587:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1588:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1589:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC4PE Bit */
1590:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4PE);
1591:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1592:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCPreload << 8);
1593:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1594:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1595:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1596:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1597:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1598:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Output Compare 1 Fast feature.
1599:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select the TIM peripheral.
1600:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1601:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1602:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
1603:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1604:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1605:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1606:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_OC1FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1607:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1608:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1609:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1610:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
1611:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1612:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
1613:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1614:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC1FE Bit */
1615:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1FE);
1616:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1617:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_OCFast;
1618:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
1619:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1620:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1621:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1622:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1623:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Output Compare 2 Fast feature.
1624:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 12 or 15 to select 
1625:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         the TIM peripheral.
1626:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1627:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1628:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
1629:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1630:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1631:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1632:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_OC2FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1633:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1634:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1635:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1636:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1637:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1638:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the TIMx CCMR1 register value */
1639:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1640:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC2FE Bit */
1641:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2FE);
1642:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1643:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCFast << 8);
1644:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
1645:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1646:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1647:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1648:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1649:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Output Compare 3 Fast feature.
1650:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1651:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1652:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1653:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
1654:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1655:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1656:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1657:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_OC3FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1658:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1659:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1660:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1661:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1662:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1663:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the TIMx CCMR2 register value */
1664:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1665:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC3FE Bit */
1666:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3FE);
1667:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1668:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_OCFast;
1669:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
1670:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1671:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1672:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1673:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1674:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Output Compare 4 Fast feature.
1675:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1676:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1677:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1678:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Enable: TIM output compare fast enable
1679:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCFast_Disable: TIM output compare fast disable
1680:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1681:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1682:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_OC4FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1683:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1684:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1685:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1686:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1687:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1688:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the TIMx CCMR2 register value */
1689:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1690:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC4FE Bit */
1691:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4FE);
1692:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1693:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCFast << 8);
1694:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
1695:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1696:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1697:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1698:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1699:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Clears or safeguards the OCREF1 signal on an external event
1700:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1701:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1702:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1703:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1704:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1705:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1706:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1707:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_ClearOC1Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1708:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1709:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1710:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1711:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1712:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1713:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1714:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1715:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1716:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC1CE Bit */
1717:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC1CE);
1718:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1719:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_OCClear;
1720:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1721:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1722:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1723:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1724:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1725:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Clears or safeguards the OCREF2 signal on an external event
1726:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1727:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1728:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1729:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1730:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1731:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1732:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1733:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_ClearOC2Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1734:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1735:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
1736:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1737:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1738:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1739:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
1740:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC2CE Bit */
1741:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)~((uint16_t)TIM_CCMR1_OC2CE);
1742:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1743:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCClear << 8);
1744:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
1745:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
1746:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1747:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1748:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1749:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Clears or safeguards the OCREF3 signal on an external event
1750:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1751:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1752:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1753:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1754:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1755:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1756:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1757:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_ClearOC3Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1758:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1759:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1760:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1761:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1762:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1763:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1764:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC3CE Bit */
1765:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC3CE);
1766:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1767:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 |= TIM_OCClear;
1768:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1769:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1770:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1771:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1772:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1773:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Clears or safeguards the OCREF4 signal on an external event
1774:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1775:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1776:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1777:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Enable: TIM Output clear enable
1778:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCClear_Disable: TIM Output clear disable
1779:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1780:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1781:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_ClearOC4Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1782:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1783:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
1784:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1785:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1786:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1787:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
1788:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC4CE Bit */
1789:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)~((uint16_t)TIM_CCMR2_OC4CE);
1790:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1791:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCClear << 8);
1792:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
1793:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
1794:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1795:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1796:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1797:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configures the TIMx channel 1 polarity.
1798:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
1799:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC1 Polarity
1800:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1801:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
1802:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1803:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1804:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1805:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_OC1PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1806:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1807:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1808:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1809:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
1810:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1811:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1812:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set or Reset the CC1P Bit */
1813:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC1P);
1814:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer |= TIM_OCPolarity;
1815:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1816:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1817:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1818:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1819:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1820:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Channel 1N polarity.
1821:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 8, 15, 16 or 17 to select the TIM peripheral.
1822:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC1N Polarity
1823:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1824:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_High: Output Compare active high
1825:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_Low: Output Compare active low
1826:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1827:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1828:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_OC1NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1829:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1830:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1831:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1832:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1833:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1834:.\StdPeriphLib\src/stm32f10x_tim.c ****    
1835:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1836:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set or Reset the CC1NP Bit */
1837:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC1NP);
1838:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer |= TIM_OCNPolarity;
1839:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1840:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1841:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1842:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1843:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1844:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configures the TIMx channel 2 polarity.
1845:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
1846:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC2 Polarity
1847:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1848:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
1849:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1850:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1851:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1852:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_OC2PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1853:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1854:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1855:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1856:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
1857:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1858:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1859:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set or Reset the CC2P Bit */
1860:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC2P);
1861:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
1862:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1863:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1864:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1865:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1866:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1867:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Channel 2N polarity.
1868:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1869:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC2N Polarity
1870:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1871:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_High: Output Compare active high
1872:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_Low: Output Compare active low
1873:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1874:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1875:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_OC2NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1876:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1877:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1878:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1879:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1880:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1881:.\StdPeriphLib\src/stm32f10x_tim.c ****   
1882:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1883:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set or Reset the CC2NP Bit */
1884:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC2NP);
1885:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
1886:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1887:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1888:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1889:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1890:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1891:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configures the TIMx channel 3 polarity.
1892:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1893:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC3 Polarity
1894:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1895:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
1896:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1897:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1898:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1899:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_OC3PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1900:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1901:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1902:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1903:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1904:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1905:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1906:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set or Reset the CC3P Bit */
1907:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC3P);
1908:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
1909:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1910:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1911:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1912:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1913:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1914:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Channel 3N polarity.
1915:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1916:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC3N Polarity
1917:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1918:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_High: Output Compare active high
1919:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCNPolarity_Low: Output Compare active low
1920:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1921:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1922:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_OC3NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1923:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1924:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1925:.\StdPeriphLib\src/stm32f10x_tim.c ****  
1926:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1927:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1928:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1929:.\StdPeriphLib\src/stm32f10x_tim.c ****     
1930:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1931:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set or Reset the CC3NP Bit */
1932:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC3NP);
1933:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
1934:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1935:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1936:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1937:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1938:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1939:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configures the TIMx channel 4 polarity.
1940:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1941:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_OCPolarity: specifies the OC4 Polarity
1942:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1943:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_High: Output Compare active high
1944:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCPolarity_Low: Output Compare active low
1945:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1946:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1947:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1948:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1949:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
1950:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1951:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1952:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1953:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
1954:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set or Reset the CC4P Bit */
1955:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer &= (uint16_t)~((uint16_t)TIM_CCER_CC4P);
1956:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
1957:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
1958:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
1959:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1960:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1961:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1962:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel x.
1963:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
1964:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1965:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1966:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_Channel_1: TIM Channel 1
1967:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_Channel_2: TIM Channel 2
1968:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_Channel_3: TIM Channel 3
1969:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_Channel_4: TIM Channel 4
1970:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_CCx: specifies the TIM Channel CCxE bit new state.
1971:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be: TIM_CCx_Enable or TIM_CCx_Disable. 
1972:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
1973:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
1974:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx)
1975:.\StdPeriphLib\src/stm32f10x_tim.c **** {
1976:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmp = 0;
1977:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1978:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
1979:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
1980:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1981:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_CCX(TIM_CCx));
1982:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1983:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmp = CCER_CCE_Set << TIM_Channel;
1984:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1985:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the CCxE Bit */
1986:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~ tmp;
1987:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1988:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set or reset the CCxE Bit */ 
1989:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCx << TIM_Channel);
1990:.\StdPeriphLib\src/stm32f10x_tim.c **** }
1991:.\StdPeriphLib\src/stm32f10x_tim.c **** 
1992:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
1993:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel xN.
1994:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 8, 15, 16 or 17 to select the TIM peripheral.
1995:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1996:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
1997:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_Channel_1: TIM Channel 1
1998:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_Channel_2: TIM Channel 2
1999:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_Channel_3: TIM Channel 3
2000:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_CCxN: specifies the TIM Channel CCxNE bit new state.
2001:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be: TIM_CCxN_Enable or TIM_CCxN_Disable. 
2002:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
2003:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2004:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN)
2005:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2006:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmp = 0;
2007:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2008:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2009:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2010:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_COMPLEMENTARY_CHANNEL(TIM_Channel));
2011:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_CCXN(TIM_CCxN));
2012:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2013:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmp = CCER_CCNE_Set << TIM_Channel;
2014:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2015:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the CCxNE Bit */
2016:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp;
2017:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2018:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set or reset the CCxNE Bit */ 
2019:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCxN << TIM_Channel);
2020:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2021:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2022:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2023:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Selects the TIM Output Compare Mode.
2024:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @note   This function disables the selected channel before changing the Output
2025:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         Compare Mode.
2026:.\StdPeriphLib\src/stm32f10x_tim.c ****   *         User has to enable this channel using TIM_CCxCmd and TIM_CCxNCmd functions.
2027:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2028:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
2029:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2030:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_Channel_1: TIM Channel 1
2031:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_Channel_2: TIM Channel 2
2032:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_Channel_3: TIM Channel 3
2033:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_Channel_4: TIM Channel 4
2034:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_OCMode: specifies the TIM Output Compare Mode.
2035:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2036:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_Timing
2037:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_Active
2038:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_Toggle
2039:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_PWM1
2040:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OCMode_PWM2
2041:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_Active
2042:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ForcedAction_InActive
2043:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
2044:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2045:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode)
2046:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2047:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint32_t tmp = 0;
2048:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmp1 = 0;
2049:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2050:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2051:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
2052:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
2053:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OCM(TIM_OCMode));
2054:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2055:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmp = (uint32_t) TIMx;
2056:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmp += CCMR_Offset;
2057:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2058:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmp1 = CCER_CCE_Set << (uint16_t)TIM_Channel;
2059:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2060:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Disable the Channel: Reset the CCxE Bit */
2061:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
2062:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2063:.\StdPeriphLib\src/stm32f10x_tim.c ****   if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
2064:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
2065:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmp += (TIM_Channel>>1);
2066:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2067:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
2068:.\StdPeriphLib\src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp &= (uint32_t)~((uint32_t)TIM_CCMR1_OC1M);
2069:.\StdPeriphLib\src/stm32f10x_tim.c ****    
2070:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
2071:.\StdPeriphLib\src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp |= TIM_OCMode;
2072:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
2073:.\StdPeriphLib\src/stm32f10x_tim.c ****   else
2074:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
2075:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmp += (uint16_t)(TIM_Channel - (uint16_t)4)>> (uint16_t)1;
2076:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2077:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
2078:.\StdPeriphLib\src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp &= (uint32_t)~((uint32_t)TIM_CCMR1_OC2M);
2079:.\StdPeriphLib\src/stm32f10x_tim.c ****     
2080:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
2081:.\StdPeriphLib\src/stm32f10x_tim.c ****     *(__IO uint32_t *) tmp |= (uint16_t)(TIM_OCMode << 8);
2082:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
2083:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2084:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2085:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2086:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Enables or Disables the TIMx Update event.
2087:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2088:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIMx UDIS bit
2089:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
2090:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
2091:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2092:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
2093:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2094:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2095:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2096:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2097:.\StdPeriphLib\src/stm32f10x_tim.c ****   if (NewState != DISABLE)
2098:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
2099:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Update Disable Bit */
2100:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_UDIS;
2101:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
2102:.\StdPeriphLib\src/stm32f10x_tim.c ****   else
2103:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
2104:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Reset the Update Disable Bit */
2105:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_UDIS);
2106:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
2107:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2108:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2109:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2110:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configures the TIMx Update Request Interrupt source.
2111:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2112:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_UpdateSource: specifies the Update source.
2113:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2114:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_UpdateSource_Regular: Source of update is the counter overflow/underflow
2115:.\StdPeriphLib\src/stm32f10x_tim.c ****                                        or the setting of UG bit, or an update generation
2116:.\StdPeriphLib\src/stm32f10x_tim.c ****                                        through the slave mode controller.
2117:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_UpdateSource_Global: Source of update is counter overflow/underflow.
2118:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
2119:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2120:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource)
2121:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2122:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2123:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2124:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_UPDATE_SOURCE(TIM_UpdateSource));
2125:.\StdPeriphLib\src/stm32f10x_tim.c ****   if (TIM_UpdateSource != TIM_UpdateSource_Global)
2126:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
2127:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the URS Bit */
2128:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIMx->CR1 |= TIM_CR1_URS;
2129:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
2130:.\StdPeriphLib\src/stm32f10x_tim.c ****   else
2131:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
2132:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Reset the URS Bit */
2133:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_URS);
2134:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
2135:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2136:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2137:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2138:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Enables or disables the TIMx's Hall sensor interface.
2139:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2140:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  NewState: new state of the TIMx Hall sensor interface.
2141:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be: ENABLE or DISABLE.
2142:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
2143:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2144:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState)
2145:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2146:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2147:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2148:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2149:.\StdPeriphLib\src/stm32f10x_tim.c ****   if (NewState != DISABLE)
2150:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
2151:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the TI1S Bit */
2152:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIMx->CR2 |= TIM_CR2_TI1S;
2153:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
2154:.\StdPeriphLib\src/stm32f10x_tim.c ****   else
2155:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
2156:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Reset the TI1S Bit */
2157:.\StdPeriphLib\src/stm32f10x_tim.c ****     TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_TI1S);
2158:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
2159:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2160:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2161:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2162:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Selects the TIMx's One Pulse Mode.
2163:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2164:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_OPMode: specifies the OPM Mode to be used.
2165:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2166:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OPMode_Single
2167:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_OPMode_Repetitive
2168:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
2169:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2170:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode)
2171:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2172:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2173:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2174:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_OPM_MODE(TIM_OPMode));
2175:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OPM Bit */
2176:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_OPM);
2177:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Configure the OPM Mode */
2178:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CR1 |= TIM_OPMode;
2179:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2180:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2181:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2182:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Selects the TIMx Trigger Output Mode.
2183:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7, 8, 9, 12 or 15 to select the TIM peripheral.
2184:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_TRGOSource: specifies the Trigger Output source.
2185:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This paramter can be one of the following values:
2186:.\StdPeriphLib\src/stm32f10x_tim.c ****   *
2187:.\StdPeriphLib\src/stm32f10x_tim.c ****   *  - For all TIMx
2188:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_Reset:  The UG bit in the TIM_EGR register is used as the trigger outpu
2189:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_Enable: The Counter Enable CEN is used as the trigger output (TRGO).
2190:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_Update: The update event is selected as the trigger output (TRGO).
2191:.\StdPeriphLib\src/stm32f10x_tim.c ****   *
2192:.\StdPeriphLib\src/stm32f10x_tim.c ****   *  - For all TIMx except TIM6 and TIM7
2193:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC1: The trigger output sends a positive pulse when the CC1IF flag
2194:.\StdPeriphLib\src/stm32f10x_tim.c ****   *                              is to be set, as soon as a capture or compare match occurs (TRGO).
2195:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC1Ref: OC1REF signal is used as the trigger output (TRGO).
2196:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC2Ref: OC2REF signal is used as the trigger output (TRGO).
2197:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC3Ref: OC3REF signal is used as the trigger output (TRGO).
2198:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_TRGOSource_OC4Ref: OC4REF signal is used as the trigger output (TRGO).
2199:.\StdPeriphLib\src/stm32f10x_tim.c ****   *
2200:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
2201:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2202:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource)
2203:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2204:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2205:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST7_PERIPH(TIMx));
2206:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_TRGO_SOURCE(TIM_TRGOSource));
2207:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the MMS Bits */
2208:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CR2 &= (uint16_t)~((uint16_t)TIM_CR2_MMS);
2209:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Select the TRGO source */
2210:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CR2 |=  TIM_TRGOSource;
2211:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2212:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2213:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2214:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Selects the TIMx Slave Mode.
2215:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2216:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_SlaveMode: specifies the Timer Slave Mode.
2217:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2218:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_SlaveMode_Reset: Rising edge of the selected trigger signal (TRGI) re-initializes
2219:.\StdPeriphLib\src/stm32f10x_tim.c ****   *                               the counter and triggers an update of the registers.
2220:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_SlaveMode_Gated:     The counter clock is enabled when the trigger signal (TRGI) i
2221:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_SlaveMode_Trigger:   The counter starts at a rising edge of the trigger TRGI.
2222:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_SlaveMode_External1: Rising edges of the selected trigger (TRGI) clock the counter
2223:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
2224:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2225:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode)
2226:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2227:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2228:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2229:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(TIM_SlaveMode));
2230:.\StdPeriphLib\src/stm32f10x_tim.c ****  /* Reset the SMS Bits */
2231:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->SMCR &= (uint16_t)~((uint16_t)TIM_SMCR_SMS);
2232:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Select the Slave Mode */
2233:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_SlaveMode;
2234:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2235:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2236:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2237:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Sets or Resets the TIMx Master/Slave Mode.
2238:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2239:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_MasterSlaveMode: specifies the Timer Master Slave Mode.
2240:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2241:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_MasterSlaveMode_Enable: synchronization between the current timer
2242:.\StdPeriphLib\src/stm32f10x_tim.c ****   *                                      and its slaves (through TRGO).
2243:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_MasterSlaveMode_Disable: No action
2244:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
2245:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2246:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode)
2247:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2248:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2249:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2250:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_MSM_STATE(TIM_MasterSlaveMode));
2251:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the MSM Bit */
2252:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->SMCR &= (uint16_t)~((uint16_t)TIM_SMCR_MSM);
2253:.\StdPeriphLib\src/stm32f10x_tim.c ****   
2254:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set or Reset the MSM Bit */
2255:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->SMCR |= TIM_MasterSlaveMode;
2256:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2257:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2258:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2259:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Counter Register value
2260:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2261:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  Counter: specifies the Counter register new value.
2262:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
2263:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2264:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_SetCounter(TIM_TypeDef* TIMx, uint16_t Counter)
2265:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2266:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2267:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2268:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Counter Register value */
2269:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CNT = Counter;
2270:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2271:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2272:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2273:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Autoreload Register value
2274:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2275:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  Autoreload: specifies the Autoreload register new value.
2276:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
2277:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2278:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_SetAutoreload(TIM_TypeDef* TIMx, uint16_t Autoreload)
2279:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2280:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2281:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2282:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Autoreload Register value */
2283:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->ARR = Autoreload;
2284:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2285:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2286:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2287:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Capture Compare1 Register value
2288:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2289:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  Compare1: specifies the Capture Compare1 register new value.
2290:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
2291:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2292:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_SetCompare1(TIM_TypeDef* TIMx, uint16_t Compare1)
2293:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2294:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2295:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
2296:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Capture Compare1 Register value */
2297:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCR1 = Compare1;
2298:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2299:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2300:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2301:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Capture Compare2 Register value
2302:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2303:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  Compare2: specifies the Capture Compare2 register new value.
2304:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
2305:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2306:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_SetCompare2(TIM_TypeDef* TIMx, uint16_t Compare2)
2307:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2308:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2309:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2310:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Capture Compare2 Register value */
2311:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCR2 = Compare2;
2312:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2313:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2314:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2315:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Capture Compare3 Register value
2316:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2317:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  Compare3: specifies the Capture Compare3 register new value.
2318:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
2319:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2320:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_SetCompare3(TIM_TypeDef* TIMx, uint16_t Compare3)
2321:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2322:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2323:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2324:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Capture Compare3 Register value */
2325:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCR3 = Compare3;
2326:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2327:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2328:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2329:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Capture Compare4 Register value
2330:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2331:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  Compare4: specifies the Capture Compare4 register new value.
2332:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
2333:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2334:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_SetCompare4(TIM_TypeDef* TIMx, uint16_t Compare4)
2335:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2336:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2337:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2338:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Capture Compare4 Register value */
2339:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCR4 = Compare4;
2340:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2341:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2342:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2343:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Input Capture 1 prescaler.
2344:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2345:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture1 prescaler new value.
2346:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2347:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
2348:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2349:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2350:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2351:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
2352:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2353:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2354:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2355:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2356:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
2357:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2358:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the IC1PSC Bits */
2359:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR1 &= (uint16_t)~((uint16_t)TIM_CCMR1_IC1PSC);
2360:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the IC1PSC value */
2361:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR1 |= TIM_ICPSC;
2362:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2363:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2364:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2365:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Input Capture 2 prescaler.
2366:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2367:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture2 prescaler new value.
2368:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2369:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
2370:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2371:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2372:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2373:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
2374:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2375:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2376:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2377:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2378:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2379:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2380:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the IC2PSC Bits */
2381:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR1 &= (uint16_t)~((uint16_t)TIM_CCMR1_IC2PSC);
2382:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the IC2PSC value */
2383:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR1 |= (uint16_t)(TIM_ICPSC << 8);
2384:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2385:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2386:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2387:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Input Capture 3 prescaler.
2388:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2389:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture3 prescaler new value.
2390:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2391:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
2392:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2393:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2394:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2395:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
2396:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2397:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2398:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2399:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2400:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2401:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2402:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the IC3PSC Bits */
2403:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR2 &= (uint16_t)~((uint16_t)TIM_CCMR2_IC3PSC);
2404:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the IC3PSC value */
2405:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR2 |= TIM_ICPSC;
2406:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2407:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2408:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2409:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Input Capture 4 prescaler.
2410:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2411:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture4 prescaler new value.
2412:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2413:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV1: no prescaler
2414:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2415:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2416:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2417:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
2418:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2419:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2420:.\StdPeriphLib\src/stm32f10x_tim.c **** {  
2421:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2422:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2423:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2424:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the IC4PSC Bits */
2425:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR2 &= (uint16_t)~((uint16_t)TIM_CCMR2_IC4PSC);
2426:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the IC4PSC value */
2427:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR2 |= (uint16_t)(TIM_ICPSC << 8);
2428:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2429:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2430:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2431:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Sets the TIMx Clock Division value.
2432:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be  1 to 17 except 6 and 7 to select 
2433:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   the TIM peripheral.
2434:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_CKD: specifies the clock division value.
2435:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following value:
2436:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_CKD_DIV1: TDTS = Tck_tim
2437:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_CKD_DIV2: TDTS = 2*Tck_tim
2438:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_CKD_DIV4: TDTS = 4*Tck_tim
2439:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
2440:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2441:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD)
2442:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2443:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2444:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
2445:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_CKD));
2446:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the CKD Bits */
2447:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CR1 &= (uint16_t)~((uint16_t)TIM_CR1_CKD);
2448:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the CKD value */
2449:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CR1 |= TIM_CKD;
2450:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2451:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2452:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2453:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Input Capture 1 value.
2454:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2455:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval Capture Compare 1 Register value.
2456:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2457:.\StdPeriphLib\src/stm32f10x_tim.c **** uint16_t TIM_GetCapture1(TIM_TypeDef* TIMx)
2458:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2459:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2460:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST8_PERIPH(TIMx));
2461:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the Capture 1 Register value */
2462:.\StdPeriphLib\src/stm32f10x_tim.c ****   return TIMx->CCR1;
2463:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2464:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2465:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2466:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Input Capture 2 value.
2467:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2468:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval Capture Compare 2 Register value.
2469:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2470:.\StdPeriphLib\src/stm32f10x_tim.c **** uint16_t TIM_GetCapture2(TIM_TypeDef* TIMx)
2471:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2472:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2473:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
2474:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the Capture 2 Register value */
2475:.\StdPeriphLib\src/stm32f10x_tim.c ****   return TIMx->CCR2;
2476:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2477:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2478:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2479:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Input Capture 3 value.
2480:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2481:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval Capture Compare 3 Register value.
2482:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2483:.\StdPeriphLib\src/stm32f10x_tim.c **** uint16_t TIM_GetCapture3(TIM_TypeDef* TIMx)
2484:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2485:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2486:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
2487:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the Capture 3 Register value */
2488:.\StdPeriphLib\src/stm32f10x_tim.c ****   return TIMx->CCR3;
2489:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2490:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2491:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2492:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Input Capture 4 value.
2493:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2494:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval Capture Compare 4 Register value.
2495:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2496:.\StdPeriphLib\src/stm32f10x_tim.c **** uint16_t TIM_GetCapture4(TIM_TypeDef* TIMx)
2497:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2498:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2499:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2500:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the Capture 4 Register value */
2501:.\StdPeriphLib\src/stm32f10x_tim.c ****   return TIMx->CCR4;
2502:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2503:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2504:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2505:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Counter value.
2506:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2507:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval Counter Register value.
2508:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2509:.\StdPeriphLib\src/stm32f10x_tim.c **** uint16_t TIM_GetCounter(TIM_TypeDef* TIMx)
2510:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2511:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2512:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2513:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the Counter Register value */
2514:.\StdPeriphLib\src/stm32f10x_tim.c ****   return TIMx->CNT;
2515:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2516:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2517:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2518:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Gets the TIMx Prescaler value.
2519:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2520:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval Prescaler Register value.
2521:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2522:.\StdPeriphLib\src/stm32f10x_tim.c **** uint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx)
2523:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2524:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2525:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2526:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the Prescaler Register value */
2527:.\StdPeriphLib\src/stm32f10x_tim.c ****   return TIMx->PSC;
2528:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2529:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2530:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2531:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Checks whether the specified TIM flag is set or not.
2532:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2533:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_FLAG: specifies the flag to check.
2534:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2535:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Update: TIM update Flag
2536:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2537:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2538:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2539:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2540:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_COM: TIM Commutation Flag
2541:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Trigger: TIM Trigger Flag
2542:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Break: TIM Break Flag
2543:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 overcapture Flag
2544:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 overcapture Flag
2545:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 overcapture Flag
2546:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 overcapture Flag
2547:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @note
2548:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can have only one update flag. 
2549:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_FLAG_Update, TIM_FLAG_CC1,
2550:.\StdPeriphLib\src/stm32f10x_tim.c ****   *      TIM_FLAG_CC2 or TIM_FLAG_Trigger. 
2551:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_FLAG_Update or TIM_FLAG_CC1.   
2552:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   - TIM_FLAG_Break is used only with TIM1, TIM8 and TIM15. 
2553:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   - TIM_FLAG_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.    
2554:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval The new state of TIM_FLAG (SET or RESET).
2555:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2556:.\StdPeriphLib\src/stm32f10x_tim.c **** FlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2557:.\StdPeriphLib\src/stm32f10x_tim.c **** { 
2558:.\StdPeriphLib\src/stm32f10x_tim.c ****   ITStatus bitstatus = RESET;  
2559:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2560:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2561:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_GET_FLAG(TIM_FLAG));
2562:.\StdPeriphLib\src/stm32f10x_tim.c ****   
2563:.\StdPeriphLib\src/stm32f10x_tim.c ****   if ((TIMx->SR & TIM_FLAG) != (uint16_t)RESET)
2564:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
2565:.\StdPeriphLib\src/stm32f10x_tim.c ****     bitstatus = SET;
2566:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
2567:.\StdPeriphLib\src/stm32f10x_tim.c ****   else
2568:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
2569:.\StdPeriphLib\src/stm32f10x_tim.c ****     bitstatus = RESET;
2570:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
2571:.\StdPeriphLib\src/stm32f10x_tim.c ****   return bitstatus;
2572:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2573:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2574:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2575:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Clears the TIMx's pending flags.
2576:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2577:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_FLAG: specifies the flag bit to clear.
2578:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be any combination of the following values:
2579:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Update: TIM update Flag
2580:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2581:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2582:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2583:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2584:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_COM: TIM Commutation Flag
2585:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Trigger: TIM Trigger Flag
2586:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_Break: TIM Break Flag
2587:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 overcapture Flag
2588:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 overcapture Flag
2589:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 overcapture Flag
2590:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 overcapture Flag
2591:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @note
2592:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can have only one update flag. 
2593:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_FLAG_Update, TIM_FLAG_CC1,
2594:.\StdPeriphLib\src/stm32f10x_tim.c ****   *      TIM_FLAG_CC2 or TIM_FLAG_Trigger. 
2595:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_FLAG_Update or TIM_FLAG_CC1.   
2596:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   - TIM_FLAG_Break is used only with TIM1, TIM8 and TIM15. 
2597:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   - TIM_FLAG_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.   
2598:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
2599:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2600:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2601:.\StdPeriphLib\src/stm32f10x_tim.c **** {  
2602:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2603:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2604:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_CLEAR_FLAG(TIM_FLAG));
2605:.\StdPeriphLib\src/stm32f10x_tim.c ****    
2606:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Clear the flags */
2607:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->SR = (uint16_t)~TIM_FLAG;
2608:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2609:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2610:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2611:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Checks whether the TIM interrupt has occurred or not.
2612:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2613:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_IT: specifies the TIM interrupt source to check.
2614:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2615:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_IT_Update: TIM update Interrupt source
2616:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2617:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2618:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2619:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2620:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_IT_COM: TIM Commutation Interrupt source
2621:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2622:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_IT_Break: TIM Break Interrupt source
2623:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @note
2624:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can generate only an update interrupt.
2625:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_IT_Update, TIM_IT_CC1,
2626:.\StdPeriphLib\src/stm32f10x_tim.c ****   *      TIM_IT_CC2 or TIM_IT_Trigger. 
2627:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_IT_Update or TIM_IT_CC1.   
2628:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   - TIM_IT_Break is used only with TIM1, TIM8 and TIM15. 
2629:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   - TIM_IT_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.  
2630:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval The new state of the TIM_IT(SET or RESET).
2631:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2632:.\StdPeriphLib\src/stm32f10x_tim.c **** ITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2633:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2634:.\StdPeriphLib\src/stm32f10x_tim.c ****   ITStatus bitstatus = RESET;  
2635:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t itstatus = 0x0, itenable = 0x0;
2636:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2637:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2638:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_GET_IT(TIM_IT));
2639:.\StdPeriphLib\src/stm32f10x_tim.c ****    
2640:.\StdPeriphLib\src/stm32f10x_tim.c ****   itstatus = TIMx->SR & TIM_IT;
2641:.\StdPeriphLib\src/stm32f10x_tim.c ****   
2642:.\StdPeriphLib\src/stm32f10x_tim.c ****   itenable = TIMx->DIER & TIM_IT;
2643:.\StdPeriphLib\src/stm32f10x_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
2644:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
2645:.\StdPeriphLib\src/stm32f10x_tim.c ****     bitstatus = SET;
2646:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
2647:.\StdPeriphLib\src/stm32f10x_tim.c ****   else
2648:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
2649:.\StdPeriphLib\src/stm32f10x_tim.c ****     bitstatus = RESET;
2650:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
2651:.\StdPeriphLib\src/stm32f10x_tim.c ****   return bitstatus;
2652:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2653:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2654:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2655:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Clears the TIMx's interrupt pending bits.
2656:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 to select the TIM peripheral.
2657:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_IT: specifies the pending bit to clear.
2658:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be any combination of the following values:
2659:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_IT_Update: TIM1 update Interrupt source
2660:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2661:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2662:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2663:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2664:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_IT_COM: TIM Commutation Interrupt source
2665:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2666:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_IT_Break: TIM Break Interrupt source
2667:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @note
2668:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   - TIM6 and TIM7 can generate only an update interrupt.
2669:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   - TIM9, TIM12 and TIM15 can have only TIM_IT_Update, TIM_IT_CC1,
2670:.\StdPeriphLib\src/stm32f10x_tim.c ****   *      TIM_IT_CC2 or TIM_IT_Trigger. 
2671:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   - TIM10, TIM11, TIM13, TIM14, TIM16 and TIM17 can have TIM_IT_Update or TIM_IT_CC1.   
2672:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   - TIM_IT_Break is used only with TIM1, TIM8 and TIM15. 
2673:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   - TIM_IT_COM is used only with TIM1, TIM8, TIM15, TIM16 and TIM17.    
2674:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
2675:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2676:.\StdPeriphLib\src/stm32f10x_tim.c **** void TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2677:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2678:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
2679:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2680:.\StdPeriphLib\src/stm32f10x_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
2681:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Clear the IT pending Bit */
2682:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->SR = (uint16_t)~TIM_IT;
2683:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2684:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2685:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2686:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configure the TI1 as Input.
2687:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1 to 17 except 6 and 7 to select the TIM peripheral.
2688:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
2689:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2690:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
2691:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
2692:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
2693:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2694:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 1 is selected to be connected to IC1.
2695:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 1 is selected to be connected to IC2.
2696:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 1 is selected to be connected to TRC.
2697:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
2698:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
2699:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
2700:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2701:.\StdPeriphLib\src/stm32f10x_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
2702:.\StdPeriphLib\src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter)
2703:.\StdPeriphLib\src/stm32f10x_tim.c **** {
  26              		.loc 1 2703 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  32 0000 30B4     		push	{r4, r5}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 5, -4
  37              	.LVL1:
2704:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0;
2705:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
2706:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC1E);
  38              		.loc 1 2706 0
  39 0002 048C     		ldrh	r4, [r0, #32]
  40 0004 24F00104 		bic	r4, r4, #1
  41 0008 2404     		lsls	r4, r4, #16
  42 000a 240C     		lsrs	r4, r4, #16
  43 000c 0484     		strh	r4, [r0, #32]	@ movhi
2707:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
  44              		.loc 1 2707 0
  45 000e 048B     		ldrh	r4, [r0, #24]
  46 0010 A4B2     		uxth	r4, r4
  47              	.LVL2:
2708:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
  48              		.loc 1 2708 0
  49 0012 058C     		ldrh	r5, [r0, #32]
  50 0014 ADB2     		uxth	r5, r5
  51              	.LVL3:
2709:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Select the Input and set the filter */
2710:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR1_CC1S)) & ((uint16_t)~((uint16_t)TIM_CCMR1
  52              		.loc 1 2710 0
  53 0016 24F0F304 		bic	r4, r4, #243
  54              	.LVL4:
  55 001a 2243     		orrs	r2, r2, r4
  56              	.LVL5:
2711:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
  57              		.loc 1 2711 0
  58 001c 42EA0313 		orr	r3, r2, r3, lsl #4
  59              	.LVL6:
  60 0020 9AB2     		uxth	r2, r3
  61              	.LVL7:
2712:.\StdPeriphLib\src/stm32f10x_tim.c ****   
2713:.\StdPeriphLib\src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
  62              		.loc 1 2713 0
  63 0022 124C     		ldr	r4, .L6
  64 0024 A042     		cmp	r0, r4
  65 0026 11D0     		beq	.L2
  66              		.loc 1 2713 0 is_stmt 0 discriminator 1
  67 0028 114B     		ldr	r3, .L6+4
  68 002a 9842     		cmp	r0, r3
  69 002c 0ED0     		beq	.L2
  70              		.loc 1 2713 0 discriminator 2
  71 002e B0F1804F 		cmp	r0, #1073741824
  72 0032 0BD0     		beq	.L2
  73              		.loc 1 2713 0 discriminator 3
  74 0034 A3F59833 		sub	r3, r3, #77824
  75 0038 9842     		cmp	r0, r3
  76 003a 07D0     		beq	.L2
  77              		.loc 1 2713 0 discriminator 4
  78 003c 03F58063 		add	r3, r3, #1024
  79 0040 9842     		cmp	r0, r3
  80 0042 03D0     		beq	.L2
2714:.\StdPeriphLib\src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
  81              		.loc 1 2714 0 is_stmt 1
  82 0044 03F58063 		add	r3, r3, #1024
  83 0048 9842     		cmp	r0, r3
  84 004a 05D1     		bne	.L3
  85              	.L2:
  86              	.LVL8:
2715:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
2716:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC1E Bit */
2717:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC1P));
  87              		.loc 1 2717 0
  88 004c 25F00203 		bic	r3, r5, #2
  89 0050 43F00103 		orr	r3, r3, #1
2718:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
  90              		.loc 1 2718 0
  91 0054 1943     		orrs	r1, r1, r3
  92              	.LVL9:
  93 0056 04E0     		b	.L4
  94              	.LVL10:
  95              	.L3:
2719:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
2720:.\StdPeriphLib\src/stm32f10x_tim.c ****   else
2721:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
2722:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC1E Bit */
2723:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC1P | TIM_CCER_CC1NP));
  96              		.loc 1 2723 0
  97 0058 25F00A03 		bic	r3, r5, #10
  98 005c 43F00103 		orr	r3, r3, #1
2724:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
  99              		.loc 1 2724 0
 100 0060 1943     		orrs	r1, r1, r3
 101              	.LVL11:
 102              	.L4:
2725:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
2726:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2727:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
2728:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 103              		.loc 1 2728 0
 104 0062 0283     		strh	r2, [r0, #24]	@ movhi
2729:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 105              		.loc 1 2729 0
 106 0064 0184     		strh	r1, [r0, #32]	@ movhi
2730:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 107              		.loc 1 2730 0
 108 0066 30BC     		pop	{r4, r5}
 109              	.LCFI1:
 110              		.cfi_restore 5
 111              		.cfi_restore 4
 112              		.cfi_def_cfa_offset 0
 113 0068 7047     		bx	lr
 114              	.L7:
 115 006a 00BF     		.align	2
 116              	.L6:
 117 006c 002C0140 		.word	1073818624
 118 0070 00340140 		.word	1073820672
 119              		.cfi_endproc
 120              	.LFE116:
 122              		.section	.text.TI2_Config,"ax",%progbits
 123              		.align	2
 124              		.thumb
 125              		.thumb_func
 127              	TI2_Config:
 128              	.LFB117:
2731:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2732:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2733:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configure the TI2 as Input.
2734:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 12 or 15 to select the TIM peripheral.
2735:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
2736:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2737:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
2738:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
2739:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
2740:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2741:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 2 is selected to be connected to IC2.
2742:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 2 is selected to be connected to IC1.
2743:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 2 is selected to be connected to TRC.
2744:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
2745:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
2746:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
2747:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2748:.\StdPeriphLib\src/stm32f10x_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
2749:.\StdPeriphLib\src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter)
2750:.\StdPeriphLib\src/stm32f10x_tim.c **** {
 129              		.loc 1 2750 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              	.LVL12:
 135 0000 30B4     		push	{r4, r5}
 136              	.LCFI2:
 137              		.cfi_def_cfa_offset 8
 138              		.cfi_offset 4, -8
 139              		.cfi_offset 5, -4
 140              	.LVL13:
2751:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0, tmp = 0;
2752:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
2753:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC2E);
 141              		.loc 1 2753 0
 142 0002 058C     		ldrh	r5, [r0, #32]
 143 0004 25F01005 		bic	r5, r5, #16
 144 0008 2D04     		lsls	r5, r5, #16
 145 000a 2D0C     		lsrs	r5, r5, #16
 146 000c 0584     		strh	r5, [r0, #32]	@ movhi
2754:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 147              		.loc 1 2754 0
 148 000e 058B     		ldrh	r5, [r0, #24]
 149              	.LVL14:
2755:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 150              		.loc 1 2755 0
 151 0010 048C     		ldrh	r4, [r0, #32]
 152 0012 A4B2     		uxth	r4, r4
 153              	.LVL15:
2756:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 4);
2757:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Select the Input and set the filter */
2758:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR1_CC2S)) & ((uint16_t)~((uint16_t)TIM_CCMR1
 154              		.loc 1 2758 0
 155 0014 25F44075 		bic	r5, r5, #768
 156              	.LVL16:
 157 0018 2D05     		lsls	r5, r5, #20
 158 001a 2D0D     		lsrs	r5, r5, #20
 159 001c 45EA0222 		orr	r2, r5, r2, lsl #8
 160              	.LVL17:
2759:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICFilter << 12);
2760:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection << 8);
 161              		.loc 1 2760 0
 162 0020 42EA0333 		orr	r3, r2, r3, lsl #12
 163              	.LVL18:
 164 0024 9BB2     		uxth	r3, r3
 165              	.LVL19:
2761:.\StdPeriphLib\src/stm32f10x_tim.c ****   
2762:.\StdPeriphLib\src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
 166              		.loc 1 2762 0
 167 0026 134A     		ldr	r2, .L13
 168 0028 9042     		cmp	r0, r2
 169 002a 12D0     		beq	.L9
 170              		.loc 1 2762 0 is_stmt 0 discriminator 1
 171 002c 02F50062 		add	r2, r2, #2048
 172 0030 9042     		cmp	r0, r2
 173 0032 0ED0     		beq	.L9
 174              		.loc 1 2762 0 discriminator 2
 175 0034 B0F1804F 		cmp	r0, #1073741824
 176 0038 0BD0     		beq	.L9
 177              		.loc 1 2762 0 discriminator 3
 178 003a A2F59832 		sub	r2, r2, #77824
 179 003e 9042     		cmp	r0, r2
 180 0040 07D0     		beq	.L9
 181              		.loc 1 2762 0 discriminator 4
 182 0042 02F58062 		add	r2, r2, #1024
 183 0046 9042     		cmp	r0, r2
 184 0048 03D0     		beq	.L9
2763:.\StdPeriphLib\src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
 185              		.loc 1 2763 0 is_stmt 1
 186 004a 02F58062 		add	r2, r2, #1024
 187 004e 9042     		cmp	r0, r2
 188 0050 07D1     		bne	.L10
 189              	.L9:
 190              	.LVL20:
2764:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
2765:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC2E Bit */
2766:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC2P));
 191              		.loc 1 2766 0
 192 0052 24F02004 		bic	r4, r4, #32
 193              	.LVL21:
 194 0056 44F01004 		orr	r4, r4, #16
2767:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer |=  (uint16_t)(tmp | (uint16_t)TIM_CCER_CC2E);
 195              		.loc 1 2767 0
 196 005a 44EA0111 		orr	r1, r4, r1, lsl #4
 197              	.LVL22:
 198 005e 89B2     		uxth	r1, r1
 199              	.LVL23:
 200 0060 04E0     		b	.L11
 201              	.LVL24:
 202              	.L10:
2768:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
2769:.\StdPeriphLib\src/stm32f10x_tim.c ****   else
2770:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
2771:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC2E Bit */
2772:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC2P | TIM_CCER_CC2NP));
 203              		.loc 1 2772 0
 204 0062 24F0A004 		bic	r4, r4, #160
 205              	.LVL25:
 206 0066 44F01004 		orr	r4, r4, #16
2773:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC2E);
 207              		.loc 1 2773 0
 208 006a 2143     		orrs	r1, r1, r4
 209              	.LVL26:
 210              	.L11:
2774:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
2775:.\StdPeriphLib\src/stm32f10x_tim.c ****   
2776:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
2777:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 211              		.loc 1 2777 0
 212 006c 0383     		strh	r3, [r0, #24]	@ movhi
2778:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 213              		.loc 1 2778 0
 214 006e 0184     		strh	r1, [r0, #32]	@ movhi
2779:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 215              		.loc 1 2779 0
 216 0070 30BC     		pop	{r4, r5}
 217              	.LCFI3:
 218              		.cfi_restore 5
 219              		.cfi_restore 4
 220              		.cfi_def_cfa_offset 0
 221 0072 7047     		bx	lr
 222              	.L14:
 223              		.align	2
 224              	.L13:
 225 0074 002C0140 		.word	1073818624
 226              		.cfi_endproc
 227              	.LFE117:
 229              		.section	.text.TIM_DeInit,"ax",%progbits
 230              		.align	2
 231              		.global	TIM_DeInit
 232              		.thumb
 233              		.thumb_func
 235              	TIM_DeInit:
 236              	.LFB29:
 123:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 237              		.loc 1 123 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              	.LVL27:
 242 0000 08B5     		push	{r3, lr}
 243              	.LCFI4:
 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 3, -8
 246              		.cfi_offset 14, -4
 127:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 247              		.loc 1 127 0
 248 0002 6F4B     		ldr	r3, .L34
 249 0004 9842     		cmp	r0, r3
 250 0006 0AD1     		bne	.L16
 129:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
 251              		.loc 1 129 0
 252 0008 4FF40060 		mov	r0, #2048
 253              	.LVL28:
 254 000c 0121     		movs	r1, #1
 255 000e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 256              	.LVL29:
 130:.\StdPeriphLib\src/stm32f10x_tim.c ****   }     
 257              		.loc 1 130 0
 258 0012 4FF40060 		mov	r0, #2048
 259 0016 0021     		movs	r1, #0
 260 0018 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 261              	.LVL30:
 262 001c 08BD     		pop	{r3, pc}
 263              	.LVL31:
 264              	.L16:
 132:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 265              		.loc 1 132 0
 266 001e B0F1804F 		cmp	r0, #1073741824
 267 0022 08D1     		bne	.L18
 134:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
 268              		.loc 1 134 0
 269 0024 0120     		movs	r0, #1
 270              	.LVL32:
 271 0026 0146     		mov	r1, r0
 272 0028 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 273              	.LVL33:
 135:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 274              		.loc 1 135 0
 275 002c 0120     		movs	r0, #1
 276 002e 0021     		movs	r1, #0
 277 0030 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 278              	.LVL34:
 279 0034 08BD     		pop	{r3, pc}
 280              	.LVL35:
 281              	.L18:
 137:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 282              		.loc 1 137 0
 283 0036 634B     		ldr	r3, .L34+4
 284 0038 9842     		cmp	r0, r3
 285 003a 08D1     		bne	.L19
 139:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
 286              		.loc 1 139 0
 287 003c 0220     		movs	r0, #2
 288              	.LVL36:
 289 003e 0121     		movs	r1, #1
 290 0040 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 291              	.LVL37:
 140:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 292              		.loc 1 140 0
 293 0044 0220     		movs	r0, #2
 294 0046 0021     		movs	r1, #0
 295 0048 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 296              	.LVL38:
 297 004c 08BD     		pop	{r3, pc}
 298              	.LVL39:
 299              	.L19:
 142:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 300              		.loc 1 142 0
 301 004e 5E4B     		ldr	r3, .L34+8
 302 0050 9842     		cmp	r0, r3
 303 0052 08D1     		bne	.L20
 144:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
 304              		.loc 1 144 0
 305 0054 0420     		movs	r0, #4
 306              	.LVL40:
 307 0056 0121     		movs	r1, #1
 308 0058 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 309              	.LVL41:
 145:.\StdPeriphLib\src/stm32f10x_tim.c ****   } 
 310              		.loc 1 145 0
 311 005c 0420     		movs	r0, #4
 312 005e 0021     		movs	r1, #0
 313 0060 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 314              	.LVL42:
 315 0064 08BD     		pop	{r3, pc}
 316              	.LVL43:
 317              	.L20:
 147:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 318              		.loc 1 147 0
 319 0066 594B     		ldr	r3, .L34+12
 320 0068 9842     		cmp	r0, r3
 321 006a 08D1     		bne	.L21
 149:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 322              		.loc 1 149 0
 323 006c 0820     		movs	r0, #8
 324              	.LVL44:
 325 006e 0121     		movs	r1, #1
 326 0070 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 327              	.LVL45:
 150:.\StdPeriphLib\src/stm32f10x_tim.c ****   } 
 328              		.loc 1 150 0
 329 0074 0820     		movs	r0, #8
 330 0076 0021     		movs	r1, #0
 331 0078 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 332              	.LVL46:
 333 007c 08BD     		pop	{r3, pc}
 334              	.LVL47:
 335              	.L21:
 152:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 336              		.loc 1 152 0
 337 007e 544B     		ldr	r3, .L34+16
 338 0080 9842     		cmp	r0, r3
 339 0082 08D1     		bne	.L22
 154:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 340              		.loc 1 154 0
 341 0084 1020     		movs	r0, #16
 342              	.LVL48:
 343 0086 0121     		movs	r1, #1
 344 0088 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 345              	.LVL49:
 155:.\StdPeriphLib\src/stm32f10x_tim.c ****   } 
 346              		.loc 1 155 0
 347 008c 1020     		movs	r0, #16
 348 008e 0021     		movs	r1, #0
 349 0090 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 350              	.LVL50:
 351 0094 08BD     		pop	{r3, pc}
 352              	.LVL51:
 353              	.L22:
 157:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 354              		.loc 1 157 0
 355 0096 4F4B     		ldr	r3, .L34+20
 356 0098 9842     		cmp	r0, r3
 357 009a 08D1     		bne	.L23
 159:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 358              		.loc 1 159 0
 359 009c 2020     		movs	r0, #32
 360              	.LVL52:
 361 009e 0121     		movs	r1, #1
 362 00a0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 363              	.LVL53:
 160:.\StdPeriphLib\src/stm32f10x_tim.c ****   } 
 364              		.loc 1 160 0
 365 00a4 2020     		movs	r0, #32
 366 00a6 0021     		movs	r1, #0
 367 00a8 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 368              	.LVL54:
 369 00ac 08BD     		pop	{r3, pc}
 370              	.LVL55:
 371              	.L23:
 162:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 372              		.loc 1 162 0
 373 00ae 4A4B     		ldr	r3, .L34+24
 374 00b0 9842     		cmp	r0, r3
 375 00b2 0AD1     		bne	.L24
 164:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);
 376              		.loc 1 164 0
 377 00b4 4FF40050 		mov	r0, #8192
 378              	.LVL56:
 379 00b8 0121     		movs	r1, #1
 380 00ba FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 381              	.LVL57:
 165:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 382              		.loc 1 165 0
 383 00be 4FF40050 		mov	r0, #8192
 384 00c2 0021     		movs	r1, #0
 385 00c4 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 386              	.LVL58:
 387 00c8 08BD     		pop	{r3, pc}
 388              	.LVL59:
 389              	.L24:
 167:.\StdPeriphLib\src/stm32f10x_tim.c ****   {      
 390              		.loc 1 167 0
 391 00ca 444B     		ldr	r3, .L34+28
 392 00cc 9842     		cmp	r0, r3
 393 00ce 0AD1     		bne	.L25
 169:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 394              		.loc 1 169 0
 395 00d0 4FF40020 		mov	r0, #524288
 396              	.LVL60:
 397 00d4 0121     		movs	r1, #1
 398 00d6 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 399              	.LVL61:
 170:.\StdPeriphLib\src/stm32f10x_tim.c ****    }  
 400              		.loc 1 170 0
 401 00da 4FF40020 		mov	r0, #524288
 402 00de 0021     		movs	r1, #0
 403 00e0 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 404              	.LVL62:
 405 00e4 08BD     		pop	{r3, pc}
 406              	.LVL63:
 407              	.L25:
 172:.\StdPeriphLib\src/stm32f10x_tim.c ****   {      
 408              		.loc 1 172 0
 409 00e6 3E4B     		ldr	r3, .L34+32
 410 00e8 9842     		cmp	r0, r3
 411 00ea 0AD1     		bne	.L26
 174:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 412              		.loc 1 174 0
 413 00ec 4FF48010 		mov	r0, #1048576
 414              	.LVL64:
 415 00f0 0121     		movs	r1, #1
 416 00f2 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 417              	.LVL65:
 175:.\StdPeriphLib\src/stm32f10x_tim.c ****   }  
 418              		.loc 1 175 0
 419 00f6 4FF48010 		mov	r0, #1048576
 420 00fa 0021     		movs	r1, #0
 421 00fc FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 422              	.LVL66:
 423 0100 08BD     		pop	{r3, pc}
 424              	.LVL67:
 425              	.L26:
 177:.\StdPeriphLib\src/stm32f10x_tim.c ****   {     
 426              		.loc 1 177 0
 427 0102 384B     		ldr	r3, .L34+36
 428 0104 9842     		cmp	r0, r3
 429 0106 0AD1     		bne	.L27
 179:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 430              		.loc 1 179 0
 431 0108 4FF40010 		mov	r0, #2097152
 432              	.LVL68:
 433 010c 0121     		movs	r1, #1
 434 010e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 435              	.LVL69:
 180:.\StdPeriphLib\src/stm32f10x_tim.c ****   }  
 436              		.loc 1 180 0
 437 0112 4FF40010 		mov	r0, #2097152
 438 0116 0021     		movs	r1, #0
 439 0118 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 440              	.LVL70:
 441 011c 08BD     		pop	{r3, pc}
 442              	.LVL71:
 443              	.L27:
 182:.\StdPeriphLib\src/stm32f10x_tim.c ****   {      
 444              		.loc 1 182 0
 445 011e 324B     		ldr	r3, .L34+40
 446 0120 9842     		cmp	r0, r3
 447 0122 08D1     		bne	.L28
 184:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 448              		.loc 1 184 0
 449 0124 4020     		movs	r0, #64
 450              	.LVL72:
 451 0126 0121     		movs	r1, #1
 452 0128 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 453              	.LVL73:
 185:.\StdPeriphLib\src/stm32f10x_tim.c ****   }  
 454              		.loc 1 185 0
 455 012c 4020     		movs	r0, #64
 456 012e 0021     		movs	r1, #0
 457 0130 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 458              	.LVL74:
 459 0134 08BD     		pop	{r3, pc}
 460              	.LVL75:
 461              	.L28:
 187:.\StdPeriphLib\src/stm32f10x_tim.c ****   {       
 462              		.loc 1 187 0
 463 0136 2D4B     		ldr	r3, .L34+44
 464 0138 9842     		cmp	r0, r3
 465 013a 08D1     		bne	.L29
 189:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 466              		.loc 1 189 0
 467 013c 8020     		movs	r0, #128
 468              	.LVL76:
 469 013e 0121     		movs	r1, #1
 470 0140 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 471              	.LVL77:
 190:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 472              		.loc 1 190 0
 473 0144 8020     		movs	r0, #128
 474 0146 0021     		movs	r1, #0
 475 0148 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 476              	.LVL78:
 477 014c 08BD     		pop	{r3, pc}
 478              	.LVL79:
 479              	.L29:
 192:.\StdPeriphLib\src/stm32f10x_tim.c ****   {       
 480              		.loc 1 192 0
 481 014e 284B     		ldr	r3, .L34+48
 482 0150 9842     		cmp	r0, r3
 483 0152 0AD1     		bne	.L30
 194:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE);  
 484              		.loc 1 194 0
 485 0154 4FF48070 		mov	r0, #256
 486              	.LVL80:
 487 0158 0121     		movs	r1, #1
 488 015a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 489              	.LVL81:
 195:.\StdPeriphLib\src/stm32f10x_tim.c ****   }        
 490              		.loc 1 195 0
 491 015e 4FF48070 		mov	r0, #256
 492 0162 0021     		movs	r1, #0
 493 0164 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 494              	.LVL82:
 495 0168 08BD     		pop	{r3, pc}
 496              	.LVL83:
 497              	.L30:
 197:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 498              		.loc 1 197 0
 499 016a 224B     		ldr	r3, .L34+52
 500 016c 9842     		cmp	r0, r3
 501 016e 0AD1     		bne	.L31
 199:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM15, DISABLE);
 502              		.loc 1 199 0
 503 0170 4FF48030 		mov	r0, #65536
 504              	.LVL84:
 505 0174 0121     		movs	r1, #1
 506 0176 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 507              	.LVL85:
 200:.\StdPeriphLib\src/stm32f10x_tim.c ****   } 
 508              		.loc 1 200 0
 509 017a 4FF48030 		mov	r0, #65536
 510 017e 0021     		movs	r1, #0
 511 0180 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 512              	.LVL86:
 513 0184 08BD     		pop	{r3, pc}
 514              	.LVL87:
 515              	.L31:
 202:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 516              		.loc 1 202 0
 517 0186 1C4B     		ldr	r3, .L34+56
 518 0188 9842     		cmp	r0, r3
 519 018a 0AD1     		bne	.L32
 204:.\StdPeriphLib\src/stm32f10x_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM16, DISABLE);
 520              		.loc 1 204 0
 521 018c 4FF40030 		mov	r0, #131072
 522              	.LVL88:
 523 0190 0121     		movs	r1, #1
 524 0192 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 525              	.LVL89:
 205:.\StdPeriphLib\src/stm32f10x_tim.c ****   } 
 526              		.loc 1 205 0
 527 0196 4FF40030 		mov	r0, #131072
 528 019a 0021     		movs	r1, #0
 529 019c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 530              	.LVL90:
 531 01a0 08BD     		pop	{r3, pc}
 532              	.LVL91:
 533              	.L32:
 209:.\StdPeriphLib\src/stm32f10x_tim.c ****     {
 534              		.loc 1 209 0
 535 01a2 164B     		ldr	r3, .L34+60
 536 01a4 9842     		cmp	r0, r3
 537 01a6 09D1     		bne	.L15
 211:.\StdPeriphLib\src/stm32f10x_tim.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM17, DISABLE);
 538              		.loc 1 211 0
 539 01a8 4FF48020 		mov	r0, #262144
 540              	.LVL92:
 541 01ac 0121     		movs	r1, #1
 542 01ae FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 543              	.LVL93:
 212:.\StdPeriphLib\src/stm32f10x_tim.c ****     }  
 544              		.loc 1 212 0
 545 01b2 4FF48020 		mov	r0, #262144
 546 01b6 0021     		movs	r1, #0
 547 01b8 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 548              	.LVL94:
 549              	.L15:
 550 01bc 08BD     		pop	{r3, pc}
 551              	.L35:
 552 01be 00BF     		.align	2
 553              	.L34:
 554 01c0 002C0140 		.word	1073818624
 555 01c4 00040040 		.word	1073742848
 556 01c8 00080040 		.word	1073743872
 557 01cc 000C0040 		.word	1073744896
 558 01d0 00100040 		.word	1073745920
 559 01d4 00140040 		.word	1073746944
 560 01d8 00340140 		.word	1073820672
 561 01dc 004C0140 		.word	1073826816
 562 01e0 00500140 		.word	1073827840
 563 01e4 00540140 		.word	1073828864
 564 01e8 00180040 		.word	1073747968
 565 01ec 001C0040 		.word	1073748992
 566 01f0 00200040 		.word	1073750016
 567 01f4 00400140 		.word	1073823744
 568 01f8 00440140 		.word	1073824768
 569 01fc 00480140 		.word	1073825792
 570              		.cfi_endproc
 571              	.LFE29:
 573              		.section	.text.TIM_TimeBaseInit,"ax",%progbits
 574              		.align	2
 575              		.global	TIM_TimeBaseInit
 576              		.thumb
 577              		.thumb_func
 579              	TIM_TimeBaseInit:
 580              	.LFB30:
 227:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpcr1 = 0;
 581              		.loc 1 227 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 586              	.LVL95:
 235:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 587              		.loc 1 235 0
 588 0000 0388     		ldrh	r3, [r0]
 589 0002 9BB2     		uxth	r3, r3
 590              	.LVL96:
 237:.\StdPeriphLib\src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 591              		.loc 1 237 0
 592 0004 244A     		ldr	r2, .L43
 593 0006 9042     		cmp	r0, r2
 594 0008 12D0     		beq	.L37
 237:.\StdPeriphLib\src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 595              		.loc 1 237 0 is_stmt 0 discriminator 1
 596 000a 02F50062 		add	r2, r2, #2048
 597 000e 9042     		cmp	r0, r2
 598 0010 0ED0     		beq	.L37
 237:.\StdPeriphLib\src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 599              		.loc 1 237 0 discriminator 2
 600 0012 B0F1804F 		cmp	r0, #1073741824
 601 0016 0BD0     		beq	.L37
 237:.\StdPeriphLib\src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 602              		.loc 1 237 0 discriminator 3
 603 0018 A2F59832 		sub	r2, r2, #77824
 604 001c 9042     		cmp	r0, r2
 605 001e 07D0     		beq	.L37
 237:.\StdPeriphLib\src/stm32f10x_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 606              		.loc 1 237 0 discriminator 4
 607 0020 02F58062 		add	r2, r2, #1024
 608 0024 9042     		cmp	r0, r2
 609 0026 03D0     		beq	.L37
 238:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 610              		.loc 1 238 0 is_stmt 1
 611 0028 02F58062 		add	r2, r2, #1024
 612 002c 9042     		cmp	r0, r2
 613 002e 03D1     		bne	.L38
 614              	.L37:
 241:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 615              		.loc 1 241 0
 616 0030 23F07003 		bic	r3, r3, #112
 617              	.LVL97:
 242:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 618              		.loc 1 242 0
 619 0034 4A88     		ldrh	r2, [r1, #2]
 620 0036 1343     		orrs	r3, r3, r2
 621              	.LVL98:
 622              	.L38:
 245:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 623              		.loc 1 245 0
 624 0038 184A     		ldr	r2, .L43+4
 625 003a 9042     		cmp	r0, r2
 626 003c 25D0     		beq	.L39
 245:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 627              		.loc 1 245 0 is_stmt 0 discriminator 1
 628 003e 02F58062 		add	r2, r2, #1024
 629 0042 9042     		cmp	r0, r2
 630 0044 21D0     		beq	.L39
 248:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 631              		.loc 1 248 0 is_stmt 1
 632 0046 23F44073 		bic	r3, r3, #768
 633              	.LVL99:
 634 004a 9BB2     		uxth	r3, r3
 635              	.LVL100:
 249:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 636              		.loc 1 249 0
 637 004c CA88     		ldrh	r2, [r1, #6]
 638 004e 1343     		orrs	r3, r3, r2
 639              	.LVL101:
 252:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 640              		.loc 1 252 0
 641 0050 0380     		strh	r3, [r0]	@ movhi
 255:.\StdPeriphLib\src/stm32f10x_tim.c ****  
 642              		.loc 1 255 0
 643 0052 8B88     		ldrh	r3, [r1, #4]
 644 0054 8385     		strh	r3, [r0, #44]	@ movhi
 258:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 645              		.loc 1 258 0
 646 0056 0B88     		ldrh	r3, [r1]
 647 0058 0385     		strh	r3, [r0, #40]	@ movhi
 260:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 648              		.loc 1 260 0
 649 005a 0F4B     		ldr	r3, .L43
 650 005c 9842     		cmp	r0, r3
 651 005e 0FD0     		beq	.L40
 260:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 652              		.loc 1 260 0 is_stmt 0 discriminator 1
 653 0060 03F50063 		add	r3, r3, #2048
 654 0064 9842     		cmp	r0, r3
 655 0066 0BD0     		beq	.L40
 260:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 656              		.loc 1 260 0 discriminator 2
 657 0068 03F54063 		add	r3, r3, #3072
 658 006c 9842     		cmp	r0, r3
 659 006e 07D0     		beq	.L40
 260:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 660              		.loc 1 260 0 discriminator 3
 661 0070 03F58063 		add	r3, r3, #1024
 662 0074 9842     		cmp	r0, r3
 663 0076 03D0     		beq	.L40
 260:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 664              		.loc 1 260 0 discriminator 4
 665 0078 03F58063 		add	r3, r3, #1024
 666 007c 9842     		cmp	r0, r3
 667 007e 01D1     		bne	.L41
 668              	.L40:
 263:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 669              		.loc 1 263 0 is_stmt 1
 670 0080 0B7A     		ldrb	r3, [r1, #8]	@ zero_extendqisi2
 671 0082 0386     		strh	r3, [r0, #48]	@ movhi
 672              	.L41:
 268:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 673              		.loc 1 268 0
 674 0084 0123     		movs	r3, #1
 675 0086 8382     		strh	r3, [r0, #20]	@ movhi
 676 0088 7047     		bx	lr
 677              	.LVL102:
 678              	.L39:
 252:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 679              		.loc 1 252 0
 680 008a 0380     		strh	r3, [r0]	@ movhi
 255:.\StdPeriphLib\src/stm32f10x_tim.c ****  
 681              		.loc 1 255 0
 682 008c 8B88     		ldrh	r3, [r1, #4]
 683              	.LVL103:
 684 008e 8385     		strh	r3, [r0, #44]	@ movhi
 685              	.LVL104:
 258:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 686              		.loc 1 258 0
 687 0090 0B88     		ldrh	r3, [r1]
 688 0092 0385     		strh	r3, [r0, #40]	@ movhi
 689 0094 F6E7     		b	.L41
 690              	.L44:
 691 0096 00BF     		.align	2
 692              	.L43:
 693 0098 002C0140 		.word	1073818624
 694 009c 00100040 		.word	1073745920
 695              		.cfi_endproc
 696              	.LFE30:
 698              		.section	.text.TIM_OC1Init,"ax",%progbits
 699              		.align	2
 700              		.global	TIM_OC1Init
 701              		.thumb
 702              		.thumb_func
 704              	TIM_OC1Init:
 705              	.LFB31:
 280:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 706              		.loc 1 280 0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 0
 709              		@ frame_needed = 0, uses_anonymous_args = 0
 710              		@ link register save eliminated.
 711              	.LVL105:
 712 0000 70B4     		push	{r4, r5, r6}
 713              	.LCFI5:
 714              		.cfi_def_cfa_offset 12
 715              		.cfi_offset 4, -12
 716              		.cfi_offset 5, -8
 717              		.cfi_offset 6, -4
 718              	.LVL106:
 289:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the TIMx CCER register value */
 719              		.loc 1 289 0
 720 0002 038C     		ldrh	r3, [r0, #32]
 721 0004 23F00103 		bic	r3, r3, #1
 722 0008 1B04     		lsls	r3, r3, #16
 723 000a 1B0C     		lsrs	r3, r3, #16
 724 000c 0384     		strh	r3, [r0, #32]	@ movhi
 291:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 725              		.loc 1 291 0
 726 000e 028C     		ldrh	r2, [r0, #32]
 727              	.LVL107:
 293:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 728              		.loc 1 293 0
 729 0010 8588     		ldrh	r5, [r0, #4]
 730 0012 ADB2     		uxth	r5, r5
 731              	.LVL108:
 296:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 732              		.loc 1 296 0
 733 0014 038B     		ldrh	r3, [r0, #24]
 734              	.LVL109:
 300:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 735              		.loc 1 300 0
 736 0016 23F07303 		bic	r3, r3, #115
 737              	.LVL110:
 738 001a 1B04     		lsls	r3, r3, #16
 739 001c 1B0C     		lsrs	r3, r3, #16
 740              	.LVL111:
 303:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 741              		.loc 1 303 0
 742 001e 0E88     		ldrh	r6, [r1]
 743 0020 1E43     		orrs	r6, r6, r3
 744              	.LVL112:
 306:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 745              		.loc 1 306 0
 746 0022 22F00202 		bic	r2, r2, #2
 747              	.LVL113:
 748 0026 1204     		lsls	r2, r2, #16
 749 0028 120C     		lsrs	r2, r2, #16
 750              	.LVL114:
 751 002a 4B88     		ldrh	r3, [r1, #2]
 752 002c 0C89     		ldrh	r4, [r1, #8]
 753 002e 2343     		orrs	r3, r3, r4
 311:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 754              		.loc 1 311 0
 755 0030 1A43     		orrs	r2, r2, r3
 756              	.LVL115:
 757 0032 93B2     		uxth	r3, r2
 758              	.LVL116:
 313:.\StdPeriphLib\src/stm32f10x_tim.c ****      (TIMx == TIM16)|| (TIMx == TIM17))
 759              		.loc 1 313 0
 760 0034 144A     		ldr	r2, .L49
 761 0036 9042     		cmp	r0, r2
 762 0038 0FD0     		beq	.L46
 313:.\StdPeriphLib\src/stm32f10x_tim.c ****      (TIMx == TIM16)|| (TIMx == TIM17))
 763              		.loc 1 313 0 is_stmt 0 discriminator 1
 764 003a 02F50062 		add	r2, r2, #2048
 765 003e 9042     		cmp	r0, r2
 766 0040 0BD0     		beq	.L46
 313:.\StdPeriphLib\src/stm32f10x_tim.c ****      (TIMx == TIM16)|| (TIMx == TIM17))
 767              		.loc 1 313 0 discriminator 2
 768 0042 02F54062 		add	r2, r2, #3072
 769 0046 9042     		cmp	r0, r2
 770 0048 07D0     		beq	.L46
 313:.\StdPeriphLib\src/stm32f10x_tim.c ****      (TIMx == TIM16)|| (TIMx == TIM17))
 771              		.loc 1 313 0 discriminator 3
 772 004a 02F58062 		add	r2, r2, #1024
 773 004e 9042     		cmp	r0, r2
 774 0050 03D0     		beq	.L46
 314:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 775              		.loc 1 314 0 is_stmt 1
 776 0052 02F58062 		add	r2, r2, #1024
 777 0056 9042     		cmp	r0, r2
 778 0058 0ED1     		bne	.L47
 779              	.L46:
 322:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 780              		.loc 1 322 0
 781 005a 23F00803 		bic	r3, r3, #8
 782              	.LVL117:
 324:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 783              		.loc 1 324 0
 784 005e 4A89     		ldrh	r2, [r1, #10]
 785 0060 1343     		orrs	r3, r3, r2
 786              	.LVL118:
 327:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Output N State */
 787              		.loc 1 327 0
 788 0062 23F00403 		bic	r3, r3, #4
 789              	.LVL119:
 329:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 790              		.loc 1 329 0
 791 0066 8A88     		ldrh	r2, [r1, #4]
 792 0068 1343     		orrs	r3, r3, r2
 793              	.LVL120:
 333:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 794              		.loc 1 333 0
 795 006a 25F44075 		bic	r5, r5, #768
 796              	.LVL121:
 797 006e CC89     		ldrh	r4, [r1, #14]
 798 0070 8A89     		ldrh	r2, [r1, #12]
 799 0072 2243     		orrs	r2, r2, r4
 338:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 800              		.loc 1 338 0
 801 0074 1543     		orrs	r5, r5, r2
 802              	.LVL122:
 803 0076 ADB2     		uxth	r5, r5
 804              	.LVL123:
 805              	.L47:
 341:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 806              		.loc 1 341 0
 807 0078 8580     		strh	r5, [r0, #4]	@ movhi
 344:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 808              		.loc 1 344 0
 809 007a 0683     		strh	r6, [r0, #24]	@ movhi
 347:.\StdPeriphLib\src/stm32f10x_tim.c ****  
 810              		.loc 1 347 0
 811 007c CA88     		ldrh	r2, [r1, #6]
 812 007e 8286     		strh	r2, [r0, #52]	@ movhi
 350:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 813              		.loc 1 350 0
 814 0080 0384     		strh	r3, [r0, #32]	@ movhi
 351:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 815              		.loc 1 351 0
 816 0082 70BC     		pop	{r4, r5, r6}
 817              	.LCFI6:
 818              		.cfi_restore 6
 819              		.cfi_restore 5
 820              		.cfi_restore 4
 821              		.cfi_def_cfa_offset 0
 822              	.LVL124:
 823 0084 7047     		bx	lr
 824              	.L50:
 825 0086 00BF     		.align	2
 826              	.L49:
 827 0088 002C0140 		.word	1073818624
 828              		.cfi_endproc
 829              	.LFE31:
 831              		.section	.text.TIM_OC2Init,"ax",%progbits
 832              		.align	2
 833              		.global	TIM_OC2Init
 834              		.thumb
 835              		.thumb_func
 837              	TIM_OC2Init:
 838              	.LFB32:
 363:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 839              		.loc 1 363 0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 0
 842              		@ frame_needed = 0, uses_anonymous_args = 0
 843              		@ link register save eliminated.
 844              	.LVL125:
 845 0000 30B4     		push	{r4, r5}
 846              	.LCFI7:
 847              		.cfi_def_cfa_offset 8
 848              		.cfi_offset 4, -8
 849              		.cfi_offset 5, -4
 850              	.LVL126:
 372:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 851              		.loc 1 372 0
 852 0002 038C     		ldrh	r3, [r0, #32]
 853 0004 23F01003 		bic	r3, r3, #16
 854 0008 1B04     		lsls	r3, r3, #16
 855 000a 1B0C     		lsrs	r3, r3, #16
 856 000c 0384     		strh	r3, [r0, #32]	@ movhi
 375:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 857              		.loc 1 375 0
 858 000e 038C     		ldrh	r3, [r0, #32]
 859              	.LVL127:
 377:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 860              		.loc 1 377 0
 861 0010 8588     		ldrh	r5, [r0, #4]
 862 0012 ADB2     		uxth	r5, r5
 863              	.LVL128:
 380:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 864              		.loc 1 380 0
 865 0014 028B     		ldrh	r2, [r0, #24]
 866              	.LVL129:
 384:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 867              		.loc 1 384 0
 868 0016 22F4E642 		bic	r2, r2, #29440
 869              	.LVL130:
 870 001a 1204     		lsls	r2, r2, #16
 871 001c 120C     		lsrs	r2, r2, #16
 872              	.LVL131:
 387:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 873              		.loc 1 387 0
 874 001e 0C88     		ldrh	r4, [r1]
 875 0020 42EA0422 		orr	r2, r2, r4, lsl #8
 876              	.LVL132:
 877 0024 94B2     		uxth	r4, r2
 878              	.LVL133:
 390:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 879              		.loc 1 390 0
 880 0026 23F02003 		bic	r3, r3, #32
 881              	.LVL134:
 882 002a 1B04     		lsls	r3, r3, #16
 883 002c 1B0C     		lsrs	r3, r3, #16
 884              	.LVL135:
 392:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 885              		.loc 1 392 0
 886 002e 0A89     		ldrh	r2, [r1, #8]
 887 0030 43EA0213 		orr	r3, r3, r2, lsl #4
 888              	.LVL136:
 395:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 889              		.loc 1 395 0
 890 0034 4A88     		ldrh	r2, [r1, #2]
 891 0036 43EA0213 		orr	r3, r3, r2, lsl #4
 892              	.LVL137:
 893 003a 9BB2     		uxth	r3, r3
 894              	.LVL138:
 397:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 895              		.loc 1 397 0
 896 003c 114A     		ldr	r2, .L55
 897 003e 9042     		cmp	r0, r2
 898 0040 03D0     		beq	.L52
 397:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 899              		.loc 1 397 0 is_stmt 0 discriminator 1
 900 0042 02F50062 		add	r2, r2, #2048
 901 0046 9042     		cmp	r0, r2
 902 0048 15D1     		bne	.L53
 903              	.L52:
 405:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 904              		.loc 1 405 0 is_stmt 1
 905 004a 23F08003 		bic	r3, r3, #128
 906              	.LVL139:
 907 004e 9BB2     		uxth	r3, r3
 908              	.LVL140:
 407:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 909              		.loc 1 407 0
 910 0050 4A89     		ldrh	r2, [r1, #10]
 911 0052 43EA0212 		orr	r2, r3, r2, lsl #4
 912              	.LVL141:
 410:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Output N State */
 913              		.loc 1 410 0
 914 0056 4FF6BF73 		movw	r3, #65471
 915 005a 1340     		ands	r3, r3, r2
 916              	.LVL142:
 412:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 917              		.loc 1 412 0
 918 005c 8A88     		ldrh	r2, [r1, #4]
 919 005e 43EA0213 		orr	r3, r3, r2, lsl #4
 920              	.LVL143:
 921 0062 9BB2     		uxth	r3, r3
 922              	.LVL144:
 416:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 923              		.loc 1 416 0
 924 0064 25F44065 		bic	r5, r5, #3072
 925              	.LVL145:
 419:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 926              		.loc 1 419 0
 927 0068 8A89     		ldrh	r2, [r1, #12]
 928 006a 45EA8205 		orr	r5, r5, r2, lsl #2
 929              	.LVL146:
 421:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 930              		.loc 1 421 0
 931 006e CA89     		ldrh	r2, [r1, #14]
 932 0070 45EA8205 		orr	r5, r5, r2, lsl #2
 933              	.LVL147:
 934 0074 ADB2     		uxth	r5, r5
 935              	.LVL148:
 936              	.L53:
 424:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 937              		.loc 1 424 0
 938 0076 8580     		strh	r5, [r0, #4]	@ movhi
 427:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 939              		.loc 1 427 0
 940 0078 0483     		strh	r4, [r0, #24]	@ movhi
 430:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 941              		.loc 1 430 0
 942 007a CA88     		ldrh	r2, [r1, #6]
 943 007c 0287     		strh	r2, [r0, #56]	@ movhi
 433:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 944              		.loc 1 433 0
 945 007e 0384     		strh	r3, [r0, #32]	@ movhi
 434:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 946              		.loc 1 434 0
 947 0080 30BC     		pop	{r4, r5}
 948              	.LCFI8:
 949              		.cfi_restore 5
 950              		.cfi_restore 4
 951              		.cfi_def_cfa_offset 0
 952              	.LVL149:
 953 0082 7047     		bx	lr
 954              	.L56:
 955              		.align	2
 956              	.L55:
 957 0084 002C0140 		.word	1073818624
 958              		.cfi_endproc
 959              	.LFE32:
 961              		.section	.text.TIM_OC3Init,"ax",%progbits
 962              		.align	2
 963              		.global	TIM_OC3Init
 964              		.thumb
 965              		.thumb_func
 967              	TIM_OC3Init:
 968              	.LFB33:
 445:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 969              		.loc 1 445 0
 970              		.cfi_startproc
 971              		@ args = 0, pretend = 0, frame = 0
 972              		@ frame_needed = 0, uses_anonymous_args = 0
 973              		@ link register save eliminated.
 974              	.LVL150:
 975 0000 30B4     		push	{r4, r5}
 976              	.LCFI9:
 977              		.cfi_def_cfa_offset 8
 978              		.cfi_offset 4, -8
 979              		.cfi_offset 5, -4
 980              	.LVL151:
 454:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 981              		.loc 1 454 0
 982 0002 038C     		ldrh	r3, [r0, #32]
 983 0004 23F48073 		bic	r3, r3, #256
 984 0008 1B04     		lsls	r3, r3, #16
 985 000a 1B0C     		lsrs	r3, r3, #16
 986 000c 0384     		strh	r3, [r0, #32]	@ movhi
 457:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 987              		.loc 1 457 0
 988 000e 038C     		ldrh	r3, [r0, #32]
 989              	.LVL152:
 459:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 990              		.loc 1 459 0
 991 0010 8488     		ldrh	r4, [r0, #4]
 992 0012 A4B2     		uxth	r4, r4
 993              	.LVL153:
 462:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 994              		.loc 1 462 0
 995 0014 828B     		ldrh	r2, [r0, #28]
 996              	.LVL154:
 466:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Select the Output Compare Mode */
 997              		.loc 1 466 0
 998 0016 22F07302 		bic	r2, r2, #115
 999              	.LVL155:
 1000 001a 1204     		lsls	r2, r2, #16
 1001 001c 120C     		lsrs	r2, r2, #16
 1002              	.LVL156:
 468:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 1003              		.loc 1 468 0
 1004 001e 0D88     		ldrh	r5, [r1]
 1005 0020 1543     		orrs	r5, r5, r2
 1006              	.LVL157:
 471:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 1007              		.loc 1 471 0
 1008 0022 23F40073 		bic	r3, r3, #512
 1009              	.LVL158:
 1010 0026 1B04     		lsls	r3, r3, #16
 1011 0028 1B0C     		lsrs	r3, r3, #16
 1012              	.LVL159:
 473:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 1013              		.loc 1 473 0
 1014 002a 0A89     		ldrh	r2, [r1, #8]
 1015 002c 43EA0223 		orr	r3, r3, r2, lsl #8
 1016              	.LVL160:
 476:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 1017              		.loc 1 476 0
 1018 0030 4A88     		ldrh	r2, [r1, #2]
 1019 0032 43EA0223 		orr	r3, r3, r2, lsl #8
 1020              	.LVL161:
 1021 0036 9BB2     		uxth	r3, r3
 1022              	.LVL162:
 478:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 1023              		.loc 1 478 0
 1024 0038 114A     		ldr	r2, .L61
 1025 003a 9042     		cmp	r0, r2
 1026 003c 03D0     		beq	.L58
 478:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 1027              		.loc 1 478 0 is_stmt 0 discriminator 1
 1028 003e 02F50062 		add	r2, r2, #2048
 1029 0042 9042     		cmp	r0, r2
 1030 0044 15D1     		bne	.L59
 1031              	.L58:
 486:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Output N Polarity */
 1032              		.loc 1 486 0 is_stmt 1
 1033 0046 23F40063 		bic	r3, r3, #2048
 1034              	.LVL163:
 1035 004a 9BB2     		uxth	r3, r3
 1036              	.LVL164:
 488:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Reset the Output N State */
 1037              		.loc 1 488 0
 1038 004c 4A89     		ldrh	r2, [r1, #10]
 1039 004e 43EA0222 		orr	r2, r3, r2, lsl #8
 1040              	.LVL165:
 490:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 1041              		.loc 1 490 0
 1042 0052 4FF6FF33 		movw	r3, #64511
 1043 0056 1340     		ands	r3, r3, r2
 1044              	.LVL166:
 493:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 1045              		.loc 1 493 0
 1046 0058 8A88     		ldrh	r2, [r1, #4]
 1047 005a 43EA0223 		orr	r3, r3, r2, lsl #8
 1048              	.LVL167:
 1049 005e 9BB2     		uxth	r3, r3
 1050              	.LVL168:
 496:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 1051              		.loc 1 496 0
 1052 0060 24F44054 		bic	r4, r4, #12288
 1053              	.LVL169:
 498:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Output N Idle state */
 1054              		.loc 1 498 0
 1055 0064 8A89     		ldrh	r2, [r1, #12]
 1056 0066 44EA0214 		orr	r4, r4, r2, lsl #4
 1057              	.LVL170:
 500:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 1058              		.loc 1 500 0
 1059 006a CA89     		ldrh	r2, [r1, #14]
 1060 006c 44EA0214 		orr	r4, r4, r2, lsl #4
 1061              	.LVL171:
 1062 0070 A4B2     		uxth	r4, r4
 1063              	.LVL172:
 1064              	.L59:
 503:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 1065              		.loc 1 503 0
 1066 0072 8480     		strh	r4, [r0, #4]	@ movhi
 506:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 1067              		.loc 1 506 0
 1068 0074 8583     		strh	r5, [r0, #28]	@ movhi
 509:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 1069              		.loc 1 509 0
 1070 0076 CA88     		ldrh	r2, [r1, #6]
 1071 0078 8287     		strh	r2, [r0, #60]	@ movhi
 512:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 1072              		.loc 1 512 0
 1073 007a 0384     		strh	r3, [r0, #32]	@ movhi
 513:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 1074              		.loc 1 513 0
 1075 007c 30BC     		pop	{r4, r5}
 1076              	.LCFI10:
 1077              		.cfi_restore 5
 1078              		.cfi_restore 4
 1079              		.cfi_def_cfa_offset 0
 1080              	.LVL173:
 1081 007e 7047     		bx	lr
 1082              	.L62:
 1083              		.align	2
 1084              	.L61:
 1085 0080 002C0140 		.word	1073818624
 1086              		.cfi_endproc
 1087              	.LFE33:
 1089              		.section	.text.TIM_OC4Init,"ax",%progbits
 1090              		.align	2
 1091              		.global	TIM_OC4Init
 1092              		.thumb
 1093              		.thumb_func
 1095              	TIM_OC4Init:
 1096              	.LFB34:
 524:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1097              		.loc 1 524 0
 1098              		.cfi_startproc
 1099              		@ args = 0, pretend = 0, frame = 0
 1100              		@ frame_needed = 0, uses_anonymous_args = 0
 1101              		@ link register save eliminated.
 1102              	.LVL174:
 1103 0000 30B4     		push	{r4, r5}
 1104              	.LCFI11:
 1105              		.cfi_def_cfa_offset 8
 1106              		.cfi_offset 4, -8
 1107              		.cfi_offset 5, -4
 1108              	.LVL175:
 533:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 1109              		.loc 1 533 0
 1110 0002 038C     		ldrh	r3, [r0, #32]
 1111 0004 23F48053 		bic	r3, r3, #4096
 1112 0008 1B04     		lsls	r3, r3, #16
 1113 000a 1B0C     		lsrs	r3, r3, #16
 1114 000c 0384     		strh	r3, [r0, #32]	@ movhi
 536:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Get the TIMx CR2 register value */
 1115              		.loc 1 536 0
 1116 000e 038C     		ldrh	r3, [r0, #32]
 1117              	.LVL176:
 538:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 1118              		.loc 1 538 0
 1119 0010 8488     		ldrh	r4, [r0, #4]
 1120 0012 A4B2     		uxth	r4, r4
 1121              	.LVL177:
 541:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 1122              		.loc 1 541 0
 1123 0014 828B     		ldrh	r2, [r0, #28]
 1124              	.LVL178:
 545:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 1125              		.loc 1 545 0
 1126 0016 22F4E642 		bic	r2, r2, #29440
 1127              	.LVL179:
 1128 001a 1204     		lsls	r2, r2, #16
 1129 001c 120C     		lsrs	r2, r2, #16
 1130              	.LVL180:
 548:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 1131              		.loc 1 548 0
 1132 001e 0D88     		ldrh	r5, [r1]
 1133 0020 42EA0522 		orr	r2, r2, r5, lsl #8
 1134              	.LVL181:
 1135 0024 92B2     		uxth	r2, r2
 1136              	.LVL182:
 551:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Output Compare Polarity */
 1137              		.loc 1 551 0
 1138 0026 23F40053 		bic	r3, r3, #8192
 1139              	.LVL183:
 1140 002a 1B04     		lsls	r3, r3, #16
 1141 002c 1B0C     		lsrs	r3, r3, #16
 1142              	.LVL184:
 553:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 1143              		.loc 1 553 0
 1144 002e 0D89     		ldrh	r5, [r1, #8]
 1145 0030 43EA0533 		orr	r3, r3, r5, lsl #12
 1146              	.LVL185:
 556:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 1147              		.loc 1 556 0
 1148 0034 4D88     		ldrh	r5, [r1, #2]
 1149 0036 43EA0533 		orr	r3, r3, r5, lsl #12
 1150              	.LVL186:
 1151 003a 9BB2     		uxth	r3, r3
 1152              	.LVL187:
 558:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 1153              		.loc 1 558 0
 1154 003c 0A4D     		ldr	r5, .L67
 1155 003e A842     		cmp	r0, r5
 1156 0040 03D0     		beq	.L64
 558:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 1157              		.loc 1 558 0 is_stmt 0 discriminator 1
 1158 0042 05F50065 		add	r5, r5, #2048
 1159 0046 A842     		cmp	r0, r5
 1160 0048 05D1     		bne	.L65
 1161              	.L64:
 562:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Output Idle state */
 1162              		.loc 1 562 0 is_stmt 1
 1163 004a 24F48044 		bic	r4, r4, #16384
 1164              	.LVL188:
 564:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 1165              		.loc 1 564 0
 1166 004e 8D89     		ldrh	r5, [r1, #12]
 1167 0050 44EA8514 		orr	r4, r4, r5, lsl #6
 1168              	.LVL189:
 1169 0054 A4B2     		uxth	r4, r4
 1170              	.LVL190:
 1171              	.L65:
 567:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 1172              		.loc 1 567 0
 1173 0056 8480     		strh	r4, [r0, #4]	@ movhi
 570:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 1174              		.loc 1 570 0
 1175 0058 8283     		strh	r2, [r0, #28]	@ movhi
 573:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 1176              		.loc 1 573 0
 1177 005a CA88     		ldrh	r2, [r1, #6]
 1178              	.LVL191:
 1179 005c A0F84020 		strh	r2, [r0, #64]	@ movhi
 1180              	.LVL192:
 576:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 1181              		.loc 1 576 0
 1182 0060 0384     		strh	r3, [r0, #32]	@ movhi
 577:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 1183              		.loc 1 577 0
 1184 0062 30BC     		pop	{r4, r5}
 1185              	.LCFI12:
 1186              		.cfi_restore 5
 1187              		.cfi_restore 4
 1188              		.cfi_def_cfa_offset 0
 1189              	.LVL193:
 1190 0064 7047     		bx	lr
 1191              	.L68:
 1192 0066 00BF     		.align	2
 1193              	.L67:
 1194 0068 002C0140 		.word	1073818624
 1195              		.cfi_endproc
 1196              	.LFE34:
 1198              		.section	.text.TIM_BDTRConfig,"ax",%progbits
 1199              		.align	2
 1200              		.global	TIM_BDTRConfig
 1201              		.thumb
 1202              		.thumb_func
 1204              	TIM_BDTRConfig:
 1205              	.LFB37:
 713:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 1206              		.loc 1 713 0
 1207              		.cfi_startproc
 1208              		@ args = 0, pretend = 0, frame = 0
 1209              		@ frame_needed = 0, uses_anonymous_args = 0
 1210              		@ link register save eliminated.
 1211              	.LVL194:
 724:.\StdPeriphLib\src/stm32f10x_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 1212              		.loc 1 724 0
 1213 0000 4A88     		ldrh	r2, [r1, #2]
 1214 0002 0B88     		ldrh	r3, [r1]
 1215 0004 1343     		orrs	r3, r3, r2
 1216 0006 8A88     		ldrh	r2, [r1, #4]
 1217 0008 1343     		orrs	r3, r3, r2
 1218 000a CA88     		ldrh	r2, [r1, #6]
 1219 000c 1343     		orrs	r3, r3, r2
 1220 000e 0A89     		ldrh	r2, [r1, #8]
 1221 0010 1343     		orrs	r3, r3, r2
 1222 0012 4A89     		ldrh	r2, [r1, #10]
 1223 0014 1343     		orrs	r3, r3, r2
 1224 0016 8A89     		ldrh	r2, [r1, #12]
 1225 0018 1343     		orrs	r3, r3, r2
 1226 001a 9BB2     		uxth	r3, r3
 1227 001c A0F84430 		strh	r3, [r0, #68]	@ movhi
 1228 0020 7047     		bx	lr
 1229              		.cfi_endproc
 1230              	.LFE37:
 1232 0022 00BF     		.section	.text.TIM_TimeBaseStructInit,"ax",%progbits
 1233              		.align	2
 1234              		.global	TIM_TimeBaseStructInit
 1235              		.thumb
 1236              		.thumb_func
 1238              	TIM_TimeBaseStructInit:
 1239              	.LFB38:
 737:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the default configuration */
 1240              		.loc 1 737 0
 1241              		.cfi_startproc
 1242              		@ args = 0, pretend = 0, frame = 0
 1243              		@ frame_needed = 0, uses_anonymous_args = 0
 1244              		@ link register save eliminated.
 1245              	.LVL195:
 739:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 1246              		.loc 1 739 0
 1247 0000 4FF6FF73 		movw	r3, #65535
 1248 0004 8380     		strh	r3, [r0, #4]	@ movhi
 740:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 1249              		.loc 1 740 0
 1250 0006 0023     		movs	r3, #0
 1251 0008 0380     		strh	r3, [r0]	@ movhi
 741:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 1252              		.loc 1 741 0
 1253 000a C380     		strh	r3, [r0, #6]	@ movhi
 742:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 1254              		.loc 1 742 0
 1255 000c 4380     		strh	r3, [r0, #2]	@ movhi
 743:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 1256              		.loc 1 743 0
 1257 000e 0372     		strb	r3, [r0, #8]
 1258 0010 7047     		bx	lr
 1259              		.cfi_endproc
 1260              	.LFE38:
 1262 0012 00BF     		.section	.text.TIM_OCStructInit,"ax",%progbits
 1263              		.align	2
 1264              		.global	TIM_OCStructInit
 1265              		.thumb
 1266              		.thumb_func
 1268              	TIM_OCStructInit:
 1269              	.LFB39:
 753:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the default configuration */
 1270              		.loc 1 753 0
 1271              		.cfi_startproc
 1272              		@ args = 0, pretend = 0, frame = 0
 1273              		@ frame_needed = 0, uses_anonymous_args = 0
 1274              		@ link register save eliminated.
 1275              	.LVL196:
 755:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 1276              		.loc 1 755 0
 1277 0000 0023     		movs	r3, #0
 1278 0002 0380     		strh	r3, [r0]	@ movhi
 756:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 1279              		.loc 1 756 0
 1280 0004 4380     		strh	r3, [r0, #2]	@ movhi
 757:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x0000;
 1281              		.loc 1 757 0
 1282 0006 8380     		strh	r3, [r0, #4]	@ movhi
 758:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 1283              		.loc 1 758 0
 1284 0008 C380     		strh	r3, [r0, #6]	@ movhi
 759:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 1285              		.loc 1 759 0
 1286 000a 0381     		strh	r3, [r0, #8]	@ movhi
 760:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 1287              		.loc 1 760 0
 1288 000c 4381     		strh	r3, [r0, #10]	@ movhi
 761:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 1289              		.loc 1 761 0
 1290 000e 8381     		strh	r3, [r0, #12]	@ movhi
 762:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 1291              		.loc 1 762 0
 1292 0010 C381     		strh	r3, [r0, #14]	@ movhi
 1293 0012 7047     		bx	lr
 1294              		.cfi_endproc
 1295              	.LFE39:
 1297              		.section	.text.TIM_ICStructInit,"ax",%progbits
 1298              		.align	2
 1299              		.global	TIM_ICStructInit
 1300              		.thumb
 1301              		.thumb_func
 1303              	TIM_ICStructInit:
 1304              	.LFB40:
 772:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the default configuration */
 1305              		.loc 1 772 0
 1306              		.cfi_startproc
 1307              		@ args = 0, pretend = 0, frame = 0
 1308              		@ frame_needed = 0, uses_anonymous_args = 0
 1309              		@ link register save eliminated.
 1310              	.LVL197:
 774:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
 1311              		.loc 1 774 0
 1312 0000 0023     		movs	r3, #0
 1313 0002 0380     		strh	r3, [r0]	@ movhi
 775:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 1314              		.loc 1 775 0
 1315 0004 4380     		strh	r3, [r0, #2]	@ movhi
 776:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 1316              		.loc 1 776 0
 1317 0006 0122     		movs	r2, #1
 1318 0008 8280     		strh	r2, [r0, #4]	@ movhi
 777:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 1319              		.loc 1 777 0
 1320 000a C380     		strh	r3, [r0, #6]	@ movhi
 778:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 1321              		.loc 1 778 0
 1322 000c 0381     		strh	r3, [r0, #8]	@ movhi
 1323 000e 7047     		bx	lr
 1324              		.cfi_endproc
 1325              	.LFE40:
 1327              		.section	.text.TIM_BDTRStructInit,"ax",%progbits
 1328              		.align	2
 1329              		.global	TIM_BDTRStructInit
 1330              		.thumb
 1331              		.thumb_func
 1333              	TIM_BDTRStructInit:
 1334              	.LFB41:
 788:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the default configuration */
 1335              		.loc 1 788 0
 1336              		.cfi_startproc
 1337              		@ args = 0, pretend = 0, frame = 0
 1338              		@ frame_needed = 0, uses_anonymous_args = 0
 1339              		@ link register save eliminated.
 1340              	.LVL198:
 790:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 1341              		.loc 1 790 0
 1342 0000 0023     		movs	r3, #0
 1343 0002 0380     		strh	r3, [r0]	@ movhi
 791:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 1344              		.loc 1 791 0
 1345 0004 4380     		strh	r3, [r0, #2]	@ movhi
 792:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 1346              		.loc 1 792 0
 1347 0006 8380     		strh	r3, [r0, #4]	@ movhi
 793:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 1348              		.loc 1 793 0
 1349 0008 C380     		strh	r3, [r0, #6]	@ movhi
 794:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 1350              		.loc 1 794 0
 1351 000a 0381     		strh	r3, [r0, #8]	@ movhi
 795:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 1352              		.loc 1 795 0
 1353 000c 4381     		strh	r3, [r0, #10]	@ movhi
 796:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 1354              		.loc 1 796 0
 1355 000e 8381     		strh	r3, [r0, #12]	@ movhi
 1356 0010 7047     		bx	lr
 1357              		.cfi_endproc
 1358              	.LFE41:
 1360 0012 00BF     		.section	.text.TIM_Cmd,"ax",%progbits
 1361              		.align	2
 1362              		.global	TIM_Cmd
 1363              		.thumb
 1364              		.thumb_func
 1366              	TIM_Cmd:
 1367              	.LFB42:
 807:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 1368              		.loc 1 807 0
 1369              		.cfi_startproc
 1370              		@ args = 0, pretend = 0, frame = 0
 1371              		@ frame_needed = 0, uses_anonymous_args = 0
 1372              		@ link register save eliminated.
 1373              	.LVL199:
 812:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 1374              		.loc 1 812 0
 1375 0000 29B1     		cbz	r1, .L75
 815:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 1376              		.loc 1 815 0
 1377 0002 0388     		ldrh	r3, [r0]
 1378 0004 9BB2     		uxth	r3, r3
 1379 0006 43F00103 		orr	r3, r3, #1
 1380 000a 0380     		strh	r3, [r0]	@ movhi
 1381 000c 7047     		bx	lr
 1382              	.L75:
 820:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 1383              		.loc 1 820 0
 1384 000e 0388     		ldrh	r3, [r0]
 1385 0010 23F00103 		bic	r3, r3, #1
 1386 0014 1B04     		lsls	r3, r3, #16
 1387 0016 1B0C     		lsrs	r3, r3, #16
 1388 0018 0380     		strh	r3, [r0]	@ movhi
 1389 001a 7047     		bx	lr
 1390              		.cfi_endproc
 1391              	.LFE42:
 1393              		.section	.text.TIM_CtrlPWMOutputs,"ax",%progbits
 1394              		.align	2
 1395              		.global	TIM_CtrlPWMOutputs
 1396              		.thumb
 1397              		.thumb_func
 1399              	TIM_CtrlPWMOutputs:
 1400              	.LFB43:
 832:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 1401              		.loc 1 832 0
 1402              		.cfi_startproc
 1403              		@ args = 0, pretend = 0, frame = 0
 1404              		@ frame_needed = 0, uses_anonymous_args = 0
 1405              		@ link register save eliminated.
 1406              	.LVL200:
 836:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 1407              		.loc 1 836 0
 1408 0000 49B1     		cbz	r1, .L78
 839:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 1409              		.loc 1 839 0
 1410 0002 B0F84430 		ldrh	r3, [r0, #68]
 1411 0006 6FEA4343 		mvn	r3, r3, lsl #17
 1412 000a 6FEA5343 		mvn	r3, r3, lsr #17
 1413 000e 9BB2     		uxth	r3, r3
 1414 0010 A0F84430 		strh	r3, [r0, #68]	@ movhi
 1415 0014 7047     		bx	lr
 1416              	.L78:
 844:.\StdPeriphLib\src/stm32f10x_tim.c ****   }  
 1417              		.loc 1 844 0
 1418 0016 B0F84430 		ldrh	r3, [r0, #68]
 1419 001a C3F30E03 		ubfx	r3, r3, #0, #15
 1420 001e A0F84430 		strh	r3, [r0, #68]	@ movhi
 1421 0022 7047     		bx	lr
 1422              		.cfi_endproc
 1423              	.LFE43:
 1425              		.section	.text.TIM_ITConfig,"ax",%progbits
 1426              		.align	2
 1427              		.global	TIM_ITConfig
 1428              		.thumb
 1429              		.thumb_func
 1431              	TIM_ITConfig:
 1432              	.LFB44:
 873:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 1433              		.loc 1 873 0
 1434              		.cfi_startproc
 1435              		@ args = 0, pretend = 0, frame = 0
 1436              		@ frame_needed = 0, uses_anonymous_args = 0
 1437              		@ link register save eliminated.
 1438              	.LVL201:
 879:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 1439              		.loc 1 879 0
 1440 0000 22B1     		cbz	r2, .L81
 882:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 1441              		.loc 1 882 0
 1442 0002 8389     		ldrh	r3, [r0, #12]
 1443 0004 9BB2     		uxth	r3, r3
 1444 0006 1943     		orrs	r1, r1, r3
 1445              	.LVL202:
 1446 0008 8181     		strh	r1, [r0, #12]	@ movhi
 1447 000a 7047     		bx	lr
 1448              	.LVL203:
 1449              	.L81:
 887:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 1450              		.loc 1 887 0
 1451 000c 8389     		ldrh	r3, [r0, #12]
 1452 000e 9BB2     		uxth	r3, r3
 1453 0010 23EA0101 		bic	r1, r3, r1
 1454              	.LVL204:
 1455 0014 8181     		strh	r1, [r0, #12]	@ movhi
 1456 0016 7047     		bx	lr
 1457              		.cfi_endproc
 1458              	.LFE44:
 1460              		.section	.text.TIM_GenerateEvent,"ax",%progbits
 1461              		.align	2
 1462              		.global	TIM_GenerateEvent
 1463              		.thumb
 1464              		.thumb_func
 1466              	TIM_GenerateEvent:
 1467              	.LFB45:
 910:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 1468              		.loc 1 910 0
 1469              		.cfi_startproc
 1470              		@ args = 0, pretend = 0, frame = 0
 1471              		@ frame_needed = 0, uses_anonymous_args = 0
 1472              		@ link register save eliminated.
 1473              	.LVL205:
 916:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 1474              		.loc 1 916 0
 1475 0000 8182     		strh	r1, [r0, #20]	@ movhi
 1476 0002 7047     		bx	lr
 1477              		.cfi_endproc
 1478              	.LFE45:
 1480              		.section	.text.TIM_DMAConfig,"ax",%progbits
 1481              		.align	2
 1482              		.global	TIM_DMAConfig
 1483              		.thumb
 1484              		.thumb_func
 1486              	TIM_DMAConfig:
 1487              	.LFB46:
 938:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 1488              		.loc 1 938 0
 1489              		.cfi_startproc
 1490              		@ args = 0, pretend = 0, frame = 0
 1491              		@ frame_needed = 0, uses_anonymous_args = 0
 1492              		@ link register save eliminated.
 1493              	.LVL206:
 944:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 1494              		.loc 1 944 0
 1495 0000 0A43     		orrs	r2, r2, r1
 1496              	.LVL207:
 1497 0002 A0F84820 		strh	r2, [r0, #72]	@ movhi
 1498 0006 7047     		bx	lr
 1499              		.cfi_endproc
 1500              	.LFE46:
 1502              		.section	.text.TIM_DMACmd,"ax",%progbits
 1503              		.align	2
 1504              		.global	TIM_DMACmd
 1505              		.thumb
 1506              		.thumb_func
 1508              	TIM_DMACmd:
 1509              	.LFB47:
 965:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 1510              		.loc 1 965 0
 1511              		.cfi_startproc
 1512              		@ args = 0, pretend = 0, frame = 0
 1513              		@ frame_needed = 0, uses_anonymous_args = 0
 1514              		@ link register save eliminated.
 1515              	.LVL208:
 971:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 1516              		.loc 1 971 0
 1517 0000 22B1     		cbz	r2, .L86
 974:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 1518              		.loc 1 974 0
 1519 0002 8389     		ldrh	r3, [r0, #12]
 1520 0004 9BB2     		uxth	r3, r3
 1521 0006 1943     		orrs	r1, r1, r3
 1522              	.LVL209:
 1523 0008 8181     		strh	r1, [r0, #12]	@ movhi
 1524 000a 7047     		bx	lr
 1525              	.LVL210:
 1526              	.L86:
 979:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 1527              		.loc 1 979 0
 1528 000c 8389     		ldrh	r3, [r0, #12]
 1529 000e 9BB2     		uxth	r3, r3
 1530 0010 23EA0101 		bic	r1, r3, r1
 1531              	.LVL211:
 1532 0014 8181     		strh	r1, [r0, #12]	@ movhi
 1533 0016 7047     		bx	lr
 1534              		.cfi_endproc
 1535              	.LFE47:
 1537              		.section	.text.TIM_InternalClockConfig,"ax",%progbits
 1538              		.align	2
 1539              		.global	TIM_InternalClockConfig
 1540              		.thumb
 1541              		.thumb_func
 1543              	TIM_InternalClockConfig:
 1544              	.LFB48:
 990:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 1545              		.loc 1 990 0
 1546              		.cfi_startproc
 1547              		@ args = 0, pretend = 0, frame = 0
 1548              		@ frame_needed = 0, uses_anonymous_args = 0
 1549              		@ link register save eliminated.
 1550              	.LVL212:
 994:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 1551              		.loc 1 994 0
 1552 0000 0389     		ldrh	r3, [r0, #8]
 1553 0002 23F00703 		bic	r3, r3, #7
 1554 0006 1B04     		lsls	r3, r3, #16
 1555 0008 1B0C     		lsrs	r3, r3, #16
 1556 000a 0381     		strh	r3, [r0, #8]	@ movhi
 1557 000c 7047     		bx	lr
 1558              		.cfi_endproc
 1559              	.LFE48:
 1561 000e 00BF     		.section	.text.TIM_ITRxExternalClockConfig,"ax",%progbits
 1562              		.align	2
 1563              		.global	TIM_ITRxExternalClockConfig
 1564              		.thumb
 1565              		.thumb_func
 1567              	TIM_ITRxExternalClockConfig:
 1568              	.LFB49:
1009:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 1569              		.loc 1 1009 0
 1570              		.cfi_startproc
 1571              		@ args = 0, pretend = 0, frame = 0
 1572              		@ frame_needed = 0, uses_anonymous_args = 0
 1573              		@ link register save eliminated.
 1574              	.LVL213:
 1575              	.LBB4:
 1576              	.LBB5:
1236:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the TS Bits */
 1577              		.loc 1 1236 0
 1578 0000 0389     		ldrh	r3, [r0, #8]
 1579              	.LVL214:
1238:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Input Trigger source */
 1580              		.loc 1 1238 0
 1581 0002 23F07003 		bic	r3, r3, #112
 1582              	.LVL215:
 1583 0006 1B04     		lsls	r3, r3, #16
 1584 0008 1B0C     		lsrs	r3, r3, #16
 1585              	.LVL216:
1240:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
 1586              		.loc 1 1240 0
 1587 000a 1943     		orrs	r1, r1, r3
 1588              	.LVL217:
1242:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 1589              		.loc 1 1242 0
 1590 000c 0181     		strh	r1, [r0, #8]	@ movhi
 1591              	.LBE5:
 1592              	.LBE4:
1016:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 1593              		.loc 1 1016 0
 1594 000e 0389     		ldrh	r3, [r0, #8]
 1595 0010 9BB2     		uxth	r3, r3
 1596 0012 43F00703 		orr	r3, r3, #7
 1597 0016 0381     		strh	r3, [r0, #8]	@ movhi
 1598 0018 7047     		bx	lr
 1599              		.cfi_endproc
 1600              	.LFE49:
 1602 001a 00BF     		.section	.text.TIM_TIxExternalClockConfig,"ax",%progbits
 1603              		.align	2
 1604              		.global	TIM_TIxExternalClockConfig
 1605              		.thumb
 1606              		.thumb_func
 1608              	TIM_TIxExternalClockConfig:
 1609              	.LFB50:
1037:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 1610              		.loc 1 1037 0
 1611              		.cfi_startproc
 1612              		@ args = 0, pretend = 0, frame = 0
 1613              		@ frame_needed = 0, uses_anonymous_args = 0
 1614              	.LVL218:
 1615 0000 38B5     		push	{r3, r4, r5, lr}
 1616              	.LCFI13:
 1617              		.cfi_def_cfa_offset 16
 1618              		.cfi_offset 3, -16
 1619              		.cfi_offset 4, -12
 1620              		.cfi_offset 5, -8
 1621              		.cfi_offset 14, -4
 1622 0002 0446     		mov	r4, r0
 1623 0004 0D46     		mov	r5, r1
1044:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 1624              		.loc 1 1044 0
 1625 0006 6029     		cmp	r1, #96
 1626 0008 04D1     		bne	.L91
1046:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 1627              		.loc 1 1046 0
 1628 000a 1146     		mov	r1, r2
 1629              	.LVL219:
 1630 000c 0122     		movs	r2, #1
 1631              	.LVL220:
 1632 000e FFF7FEFF 		bl	TI2_Config
 1633              	.LVL221:
 1634 0012 03E0     		b	.L92
 1635              	.LVL222:
 1636              	.L91:
1050:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 1637              		.loc 1 1050 0
 1638 0014 1146     		mov	r1, r2
 1639              	.LVL223:
 1640 0016 0122     		movs	r2, #1
 1641              	.LVL224:
 1642 0018 FFF7FEFF 		bl	TI1_Config
 1643              	.LVL225:
 1644              	.L92:
 1645              	.LBB8:
 1646              	.LBB9:
1236:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the TS Bits */
 1647              		.loc 1 1236 0
 1648 001c 2189     		ldrh	r1, [r4, #8]
 1649              	.LVL226:
1238:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Input Trigger source */
 1650              		.loc 1 1238 0
 1651 001e 21F07001 		bic	r1, r1, #112
 1652              	.LVL227:
 1653 0022 0904     		lsls	r1, r1, #16
 1654 0024 090C     		lsrs	r1, r1, #16
 1655              	.LVL228:
1240:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
 1656              		.loc 1 1240 0
 1657 0026 2943     		orrs	r1, r1, r5
 1658              	.LVL229:
1242:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 1659              		.loc 1 1242 0
 1660 0028 2181     		strh	r1, [r4, #8]	@ movhi
 1661              	.LBE9:
 1662              	.LBE8:
1055:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 1663              		.loc 1 1055 0
 1664 002a 2389     		ldrh	r3, [r4, #8]
 1665 002c 9BB2     		uxth	r3, r3
 1666 002e 43F00703 		orr	r3, r3, #7
 1667 0032 2381     		strh	r3, [r4, #8]	@ movhi
 1668 0034 38BD     		pop	{r3, r4, r5, pc}
 1669              		.cfi_endproc
 1670              	.LFE50:
 1672 0036 00BF     		.section	.text.TIM_ETRConfig,"ax",%progbits
 1673              		.align	2
 1674              		.global	TIM_ETRConfig
 1675              		.thumb
 1676              		.thumb_func
 1678              	TIM_ETRConfig:
 1679              	.LFB53:
1150:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
 1680              		.loc 1 1150 0
 1681              		.cfi_startproc
 1682              		@ args = 0, pretend = 0, frame = 0
 1683              		@ frame_needed = 0, uses_anonymous_args = 0
 1684              		@ link register save eliminated.
 1685              	.LVL230:
 1686 0000 10B4     		push	{r4}
 1687              	.LCFI14:
 1688              		.cfi_def_cfa_offset 4
 1689              		.cfi_offset 4, -4
 1690              	.LVL231:
1157:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the ETR Bits */
 1691              		.loc 1 1157 0
 1692 0002 0489     		ldrh	r4, [r0, #8]
 1693              	.LVL232:
1159:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
 1694              		.loc 1 1159 0
 1695 0004 E4B2     		uxtb	r4, r4
 1696              	.LVL233:
 1697 0006 2143     		orrs	r1, r1, r4
 1698              	.LVL234:
 1699 0008 0A43     		orrs	r2, r2, r1
 1700              	.LVL235:
1161:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
 1701              		.loc 1 1161 0
 1702 000a 42EA0323 		orr	r3, r2, r3, lsl #8
 1703              	.LVL236:
 1704 000e 99B2     		uxth	r1, r3
 1705              	.LVL237:
1163:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 1706              		.loc 1 1163 0
 1707 0010 0181     		strh	r1, [r0, #8]	@ movhi
1164:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 1708              		.loc 1 1164 0
 1709 0012 5DF8044B 		ldr	r4, [sp], #4
 1710              	.LCFI15:
 1711              		.cfi_restore 4
 1712              		.cfi_def_cfa_offset 0
 1713 0016 7047     		bx	lr
 1714              		.cfi_endproc
 1715              	.LFE53:
 1717              		.section	.text.TIM_ETRClockMode1Config,"ax",%progbits
 1718              		.align	2
 1719              		.global	TIM_ETRClockMode1Config
 1720              		.thumb
 1721              		.thumb_func
 1723              	TIM_ETRClockMode1Config:
 1724              	.LFB51:
1077:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
 1725              		.loc 1 1077 0
 1726              		.cfi_startproc
 1727              		@ args = 0, pretend = 0, frame = 0
 1728              		@ frame_needed = 0, uses_anonymous_args = 0
 1729              	.LVL238:
 1730 0000 10B5     		push	{r4, lr}
 1731              	.LCFI16:
 1732              		.cfi_def_cfa_offset 8
 1733              		.cfi_offset 4, -8
 1734              		.cfi_offset 14, -4
 1735 0002 0446     		mov	r4, r0
 1736              	.LVL239:
1085:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 1737              		.loc 1 1085 0
 1738 0004 FFF7FEFF 		bl	TIM_ETRConfig
 1739              	.LVL240:
1088:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the SMS Bits */
 1740              		.loc 1 1088 0
 1741 0008 2389     		ldrh	r3, [r4, #8]
 1742              	.LVL241:
1094:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpsmcr |= TIM_TS_ETRF;
 1743              		.loc 1 1094 0
 1744 000a 23F07703 		bic	r3, r3, #119
 1745              	.LVL242:
 1746 000e 1B04     		lsls	r3, r3, #16
 1747 0010 1B0C     		lsrs	r3, r3, #16
 1748              	.LVL243:
1095:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
 1749              		.loc 1 1095 0
 1750 0012 43F07703 		orr	r3, r3, #119
 1751              	.LVL244:
1097:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 1752              		.loc 1 1097 0
 1753 0016 2381     		strh	r3, [r4, #8]	@ movhi
 1754 0018 10BD     		pop	{r4, pc}
 1755              		.cfi_endproc
 1756              	.LFE51:
 1758 001a 00BF     		.section	.text.TIM_ETRClockMode2Config,"ax",%progbits
 1759              		.align	2
 1760              		.global	TIM_ETRClockMode2Config
 1761              		.thumb
 1762              		.thumb_func
 1764              	TIM_ETRClockMode2Config:
 1765              	.LFB52:
1119:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 1766              		.loc 1 1119 0
 1767              		.cfi_startproc
 1768              		@ args = 0, pretend = 0, frame = 0
 1769              		@ frame_needed = 0, uses_anonymous_args = 0
 1770              	.LVL245:
 1771 0000 10B5     		push	{r4, lr}
 1772              	.LCFI17:
 1773              		.cfi_def_cfa_offset 8
 1774              		.cfi_offset 4, -8
 1775              		.cfi_offset 14, -4
 1776 0002 0446     		mov	r4, r0
1126:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Enable the External clock mode2 */
 1777              		.loc 1 1126 0
 1778 0004 FFF7FEFF 		bl	TIM_ETRConfig
 1779              	.LVL246:
1128:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 1780              		.loc 1 1128 0
 1781 0008 2389     		ldrh	r3, [r4, #8]
 1782 000a 9BB2     		uxth	r3, r3
 1783 000c 43F48043 		orr	r3, r3, #16384
 1784 0010 2381     		strh	r3, [r4, #8]	@ movhi
 1785 0012 10BD     		pop	{r4, pc}
 1786              		.cfi_endproc
 1787              	.LFE52:
 1789              		.section	.text.TIM_PrescalerConfig,"ax",%progbits
 1790              		.align	2
 1791              		.global	TIM_PrescalerConfig
 1792              		.thumb
 1793              		.thumb_func
 1795              	TIM_PrescalerConfig:
 1796              	.LFB54:
1177:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 1797              		.loc 1 1177 0
 1798              		.cfi_startproc
 1799              		@ args = 0, pretend = 0, frame = 0
 1800              		@ frame_needed = 0, uses_anonymous_args = 0
 1801              		@ link register save eliminated.
 1802              	.LVL247:
1182:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set or reset the UG Bit */
 1803              		.loc 1 1182 0
 1804 0000 0185     		strh	r1, [r0, #40]	@ movhi
1184:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 1805              		.loc 1 1184 0
 1806 0002 8282     		strh	r2, [r0, #20]	@ movhi
 1807 0004 7047     		bx	lr
 1808              		.cfi_endproc
 1809              	.LFE54:
 1811 0006 00BF     		.section	.text.TIM_CounterModeConfig,"ax",%progbits
 1812              		.align	2
 1813              		.global	TIM_CounterModeConfig
 1814              		.thumb
 1815              		.thumb_func
 1817              	TIM_CounterModeConfig:
 1818              	.LFB55:
1200:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpcr1 = 0;
 1819              		.loc 1 1200 0
 1820              		.cfi_startproc
 1821              		@ args = 0, pretend = 0, frame = 0
 1822              		@ frame_needed = 0, uses_anonymous_args = 0
 1823              		@ link register save eliminated.
 1824              	.LVL248:
1205:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the CMS and DIR Bits */
 1825              		.loc 1 1205 0
 1826 0000 0388     		ldrh	r3, [r0]
 1827              	.LVL249:
1207:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Counter Mode */
 1828              		.loc 1 1207 0
 1829 0002 23F07003 		bic	r3, r3, #112
 1830              	.LVL250:
 1831 0006 1B04     		lsls	r3, r3, #16
 1832 0008 1B0C     		lsrs	r3, r3, #16
 1833              	.LVL251:
1209:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CR1 register */
 1834              		.loc 1 1209 0
 1835 000a 1943     		orrs	r1, r1, r3
 1836              	.LVL252:
1211:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 1837              		.loc 1 1211 0
 1838 000c 0180     		strh	r1, [r0]	@ movhi
 1839 000e 7047     		bx	lr
 1840              		.cfi_endproc
 1841              	.LFE55:
 1843              		.section	.text.TIM_SelectInputTrigger,"ax",%progbits
 1844              		.align	2
 1845              		.global	TIM_SelectInputTrigger
 1846              		.thumb
 1847              		.thumb_func
 1849              	TIM_SelectInputTrigger:
 1850              	.LFB56:
1230:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
 1851              		.loc 1 1230 0
 1852              		.cfi_startproc
 1853              		@ args = 0, pretend = 0, frame = 0
 1854              		@ frame_needed = 0, uses_anonymous_args = 0
 1855              		@ link register save eliminated.
 1856              	.LVL253:
1236:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the TS Bits */
 1857              		.loc 1 1236 0
 1858 0000 0389     		ldrh	r3, [r0, #8]
 1859              	.LVL254:
1238:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the Input Trigger source */
 1860              		.loc 1 1238 0
 1861 0002 23F07003 		bic	r3, r3, #112
 1862              	.LVL255:
 1863 0006 1B04     		lsls	r3, r3, #16
 1864 0008 1B0C     		lsrs	r3, r3, #16
 1865              	.LVL256:
1240:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx SMCR */
 1866              		.loc 1 1240 0
 1867 000a 1943     		orrs	r1, r1, r3
 1868              	.LVL257:
1242:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 1869              		.loc 1 1242 0
 1870 000c 0181     		strh	r1, [r0, #8]	@ movhi
 1871 000e 7047     		bx	lr
 1872              		.cfi_endproc
 1873              	.LFE56:
 1875              		.section	.text.TIM_EncoderInterfaceConfig,"ax",%progbits
 1876              		.align	2
 1877              		.global	TIM_EncoderInterfaceConfig
 1878              		.thumb
 1879              		.thumb_func
 1881              	TIM_EncoderInterfaceConfig:
 1882              	.LFB57:
1266:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpsmcr = 0;
 1883              		.loc 1 1266 0
 1884              		.cfi_startproc
 1885              		@ args = 0, pretend = 0, frame = 0
 1886              		@ frame_needed = 0, uses_anonymous_args = 0
 1887              		@ link register save eliminated.
 1888              	.LVL258:
 1889 0000 70B4     		push	{r4, r5, r6}
 1890              	.LCFI18:
 1891              		.cfi_def_cfa_offset 12
 1892              		.cfi_offset 4, -12
 1893              		.cfi_offset 5, -8
 1894              		.cfi_offset 6, -4
 1895              	.LVL259:
1278:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 1896              		.loc 1 1278 0
 1897 0002 0689     		ldrh	r6, [r0, #8]
 1898              	.LVL260:
1281:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 1899              		.loc 1 1281 0
 1900 0004 058B     		ldrh	r5, [r0, #24]
 1901 0006 ADB2     		uxth	r5, r5
 1902              	.LVL261:
1284:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 1903              		.loc 1 1284 0
 1904 0008 048C     		ldrh	r4, [r0, #32]
 1905 000a A4B2     		uxth	r4, r4
 1906              	.LVL262:
1287:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpsmcr |= TIM_EncoderMode;
 1907              		.loc 1 1287 0
 1908 000c 26F00706 		bic	r6, r6, #7
 1909              	.LVL263:
 1910 0010 3604     		lsls	r6, r6, #16
 1911 0012 360C     		lsrs	r6, r6, #16
 1912              	.LVL264:
1288:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 1913              		.loc 1 1288 0
 1914 0014 3143     		orrs	r1, r1, r6
 1915              	.LVL265:
1291:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
 1916              		.loc 1 1291 0
 1917 0016 25F44075 		bic	r5, r5, #768
 1918              	.LVL266:
 1919 001a 25F00305 		bic	r5, r5, #3
 1920              	.LVL267:
1292:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 1921              		.loc 1 1292 0
 1922 001e 45F48075 		orr	r5, r5, #256
 1923              	.LVL268:
 1924 0022 45F00105 		orr	r5, r5, #1
 1925              	.LVL269:
1295:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
 1926              		.loc 1 1295 0
 1927 0026 24F02204 		bic	r4, r4, #34
 1928              	.LVL270:
 1929 002a 2243     		orrs	r2, r2, r4
 1930              	.LVL271:
1296:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 1931              		.loc 1 1296 0
 1932 002c 42EA0313 		orr	r3, r2, r3, lsl #4
 1933              	.LVL272:
 1934 0030 9CB2     		uxth	r4, r3
 1935              	.LVL273:
1299:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 1936              		.loc 1 1299 0
 1937 0032 0181     		strh	r1, [r0, #8]	@ movhi
1301:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCER */
 1938              		.loc 1 1301 0
 1939 0034 0583     		strh	r5, [r0, #24]	@ movhi
1303:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 1940              		.loc 1 1303 0
 1941 0036 0484     		strh	r4, [r0, #32]	@ movhi
1304:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 1942              		.loc 1 1304 0
 1943 0038 70BC     		pop	{r4, r5, r6}
 1944              	.LCFI19:
 1945              		.cfi_restore 6
 1946              		.cfi_restore 5
 1947              		.cfi_restore 4
 1948              		.cfi_def_cfa_offset 0
 1949              	.LVL274:
 1950 003a 7047     		bx	lr
 1951              		.cfi_endproc
 1952              	.LFE57:
 1954              		.section	.text.TIM_ForcedOC1Config,"ax",%progbits
 1955              		.align	2
 1956              		.global	TIM_ForcedOC1Config
 1957              		.thumb
 1958              		.thumb_func
 1960              	TIM_ForcedOC1Config:
 1961              	.LFB58:
1316:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 1962              		.loc 1 1316 0
 1963              		.cfi_startproc
 1964              		@ args = 0, pretend = 0, frame = 0
 1965              		@ frame_needed = 0, uses_anonymous_args = 0
 1966              		@ link register save eliminated.
 1967              	.LVL275:
1321:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC1M Bits */
 1968              		.loc 1 1321 0
 1969 0000 038B     		ldrh	r3, [r0, #24]
 1970              	.LVL276:
1323:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
 1971              		.loc 1 1323 0
 1972 0002 23F07003 		bic	r3, r3, #112
 1973              	.LVL277:
 1974 0006 1B04     		lsls	r3, r3, #16
 1975 0008 1B0C     		lsrs	r3, r3, #16
 1976              	.LVL278:
1325:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 1977              		.loc 1 1325 0
 1978 000a 1943     		orrs	r1, r1, r3
 1979              	.LVL279:
1327:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 1980              		.loc 1 1327 0
 1981 000c 0183     		strh	r1, [r0, #24]	@ movhi
 1982 000e 7047     		bx	lr
 1983              		.cfi_endproc
 1984              	.LFE58:
 1986              		.section	.text.TIM_ForcedOC2Config,"ax",%progbits
 1987              		.align	2
 1988              		.global	TIM_ForcedOC2Config
 1989              		.thumb
 1990              		.thumb_func
 1992              	TIM_ForcedOC2Config:
 1993              	.LFB59:
1340:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 1994              		.loc 1 1340 0
 1995              		.cfi_startproc
 1996              		@ args = 0, pretend = 0, frame = 0
 1997              		@ frame_needed = 0, uses_anonymous_args = 0
 1998              		@ link register save eliminated.
 1999              	.LVL280:
1345:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC2M Bits */
 2000              		.loc 1 1345 0
 2001 0000 038B     		ldrh	r3, [r0, #24]
 2002              	.LVL281:
1347:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
 2003              		.loc 1 1347 0
 2004 0002 23F4E043 		bic	r3, r3, #28672
 2005              	.LVL282:
 2006 0006 1B04     		lsls	r3, r3, #16
 2007 0008 1B0C     		lsrs	r3, r3, #16
 2008              	.LVL283:
1349:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 2009              		.loc 1 1349 0
 2010 000a 43EA0121 		orr	r1, r3, r1, lsl #8
 2011              	.LVL284:
 2012 000e 89B2     		uxth	r1, r1
 2013              	.LVL285:
1351:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 2014              		.loc 1 1351 0
 2015 0010 0183     		strh	r1, [r0, #24]	@ movhi
 2016 0012 7047     		bx	lr
 2017              		.cfi_endproc
 2018              	.LFE59:
 2020              		.section	.text.TIM_ForcedOC3Config,"ax",%progbits
 2021              		.align	2
 2022              		.global	TIM_ForcedOC3Config
 2023              		.thumb
 2024              		.thumb_func
 2026              	TIM_ForcedOC3Config:
 2027              	.LFB60:
1364:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 2028              		.loc 1 1364 0
 2029              		.cfi_startproc
 2030              		@ args = 0, pretend = 0, frame = 0
 2031              		@ frame_needed = 0, uses_anonymous_args = 0
 2032              		@ link register save eliminated.
 2033              	.LVL286:
1369:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC1M Bits */
 2034              		.loc 1 1369 0
 2035 0000 838B     		ldrh	r3, [r0, #28]
 2036              	.LVL287:
1371:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
 2037              		.loc 1 1371 0
 2038 0002 23F07003 		bic	r3, r3, #112
 2039              	.LVL288:
 2040 0006 1B04     		lsls	r3, r3, #16
 2041 0008 1B0C     		lsrs	r3, r3, #16
 2042              	.LVL289:
1373:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 2043              		.loc 1 1373 0
 2044 000a 1943     		orrs	r1, r1, r3
 2045              	.LVL290:
1375:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 2046              		.loc 1 1375 0
 2047 000c 8183     		strh	r1, [r0, #28]	@ movhi
 2048 000e 7047     		bx	lr
 2049              		.cfi_endproc
 2050              	.LFE60:
 2052              		.section	.text.TIM_ForcedOC4Config,"ax",%progbits
 2053              		.align	2
 2054              		.global	TIM_ForcedOC4Config
 2055              		.thumb
 2056              		.thumb_func
 2058              	TIM_ForcedOC4Config:
 2059              	.LFB61:
1388:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 2060              		.loc 1 1388 0
 2061              		.cfi_startproc
 2062              		@ args = 0, pretend = 0, frame = 0
 2063              		@ frame_needed = 0, uses_anonymous_args = 0
 2064              		@ link register save eliminated.
 2065              	.LVL291:
1393:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC2M Bits */
 2066              		.loc 1 1393 0
 2067 0000 838B     		ldrh	r3, [r0, #28]
 2068              	.LVL292:
1395:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Configure The Forced output Mode */
 2069              		.loc 1 1395 0
 2070 0002 23F4E043 		bic	r3, r3, #28672
 2071              	.LVL293:
 2072 0006 1B04     		lsls	r3, r3, #16
 2073 0008 1B0C     		lsrs	r3, r3, #16
 2074              	.LVL294:
1397:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 2075              		.loc 1 1397 0
 2076 000a 43EA0121 		orr	r1, r3, r1, lsl #8
 2077              	.LVL295:
 2078 000e 89B2     		uxth	r1, r1
 2079              	.LVL296:
1399:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 2080              		.loc 1 1399 0
 2081 0010 8183     		strh	r1, [r0, #28]	@ movhi
 2082 0012 7047     		bx	lr
 2083              		.cfi_endproc
 2084              	.LFE61:
 2086              		.section	.text.TIM_ARRPreloadConfig,"ax",%progbits
 2087              		.align	2
 2088              		.global	TIM_ARRPreloadConfig
 2089              		.thumb
 2090              		.thumb_func
 2092              	TIM_ARRPreloadConfig:
 2093              	.LFB62:
1410:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 2094              		.loc 1 1410 0
 2095              		.cfi_startproc
 2096              		@ args = 0, pretend = 0, frame = 0
 2097              		@ frame_needed = 0, uses_anonymous_args = 0
 2098              		@ link register save eliminated.
 2099              	.LVL297:
1414:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 2100              		.loc 1 1414 0
 2101 0000 29B1     		cbz	r1, .L110
1417:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 2102              		.loc 1 1417 0
 2103 0002 0388     		ldrh	r3, [r0]
 2104 0004 9BB2     		uxth	r3, r3
 2105 0006 43F08003 		orr	r3, r3, #128
 2106 000a 0380     		strh	r3, [r0]	@ movhi
 2107 000c 7047     		bx	lr
 2108              	.L110:
1422:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 2109              		.loc 1 1422 0
 2110 000e 0388     		ldrh	r3, [r0]
 2111 0010 23F08003 		bic	r3, r3, #128
 2112 0014 1B04     		lsls	r3, r3, #16
 2113 0016 1B0C     		lsrs	r3, r3, #16
 2114 0018 0380     		strh	r3, [r0]	@ movhi
 2115 001a 7047     		bx	lr
 2116              		.cfi_endproc
 2117              	.LFE62:
 2119              		.section	.text.TIM_SelectCOM,"ax",%progbits
 2120              		.align	2
 2121              		.global	TIM_SelectCOM
 2122              		.thumb
 2123              		.thumb_func
 2125              	TIM_SelectCOM:
 2126              	.LFB63:
1434:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 2127              		.loc 1 1434 0
 2128              		.cfi_startproc
 2129              		@ args = 0, pretend = 0, frame = 0
 2130              		@ frame_needed = 0, uses_anonymous_args = 0
 2131              		@ link register save eliminated.
 2132              	.LVL298:
1438:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 2133              		.loc 1 1438 0
 2134 0000 29B1     		cbz	r1, .L113
1441:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 2135              		.loc 1 1441 0
 2136 0002 8388     		ldrh	r3, [r0, #4]
 2137 0004 9BB2     		uxth	r3, r3
 2138 0006 43F00403 		orr	r3, r3, #4
 2139 000a 8380     		strh	r3, [r0, #4]	@ movhi
 2140 000c 7047     		bx	lr
 2141              	.L113:
1446:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 2142              		.loc 1 1446 0
 2143 000e 8388     		ldrh	r3, [r0, #4]
 2144 0010 23F00403 		bic	r3, r3, #4
 2145 0014 1B04     		lsls	r3, r3, #16
 2146 0016 1B0C     		lsrs	r3, r3, #16
 2147 0018 8380     		strh	r3, [r0, #4]	@ movhi
 2148 001a 7047     		bx	lr
 2149              		.cfi_endproc
 2150              	.LFE63:
 2152              		.section	.text.TIM_SelectCCDMA,"ax",%progbits
 2153              		.align	2
 2154              		.global	TIM_SelectCCDMA
 2155              		.thumb
 2156              		.thumb_func
 2158              	TIM_SelectCCDMA:
 2159              	.LFB64:
1459:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 2160              		.loc 1 1459 0
 2161              		.cfi_startproc
 2162              		@ args = 0, pretend = 0, frame = 0
 2163              		@ frame_needed = 0, uses_anonymous_args = 0
 2164              		@ link register save eliminated.
 2165              	.LVL299:
1463:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 2166              		.loc 1 1463 0
 2167 0000 29B1     		cbz	r1, .L116
1466:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 2168              		.loc 1 1466 0
 2169 0002 8388     		ldrh	r3, [r0, #4]
 2170 0004 9BB2     		uxth	r3, r3
 2171 0006 43F00803 		orr	r3, r3, #8
 2172 000a 8380     		strh	r3, [r0, #4]	@ movhi
 2173 000c 7047     		bx	lr
 2174              	.L116:
1471:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 2175              		.loc 1 1471 0
 2176 000e 8388     		ldrh	r3, [r0, #4]
 2177 0010 23F00803 		bic	r3, r3, #8
 2178 0014 1B04     		lsls	r3, r3, #16
 2179 0016 1B0C     		lsrs	r3, r3, #16
 2180 0018 8380     		strh	r3, [r0, #4]	@ movhi
 2181 001a 7047     		bx	lr
 2182              		.cfi_endproc
 2183              	.LFE64:
 2185              		.section	.text.TIM_CCPreloadControl,"ax",%progbits
 2186              		.align	2
 2187              		.global	TIM_CCPreloadControl
 2188              		.thumb
 2189              		.thumb_func
 2191              	TIM_CCPreloadControl:
 2192              	.LFB65:
1484:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 2193              		.loc 1 1484 0
 2194              		.cfi_startproc
 2195              		@ args = 0, pretend = 0, frame = 0
 2196              		@ frame_needed = 0, uses_anonymous_args = 0
 2197              		@ link register save eliminated.
 2198              	.LVL300:
1488:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 2199              		.loc 1 1488 0
 2200 0000 29B1     		cbz	r1, .L119
1491:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 2201              		.loc 1 1491 0
 2202 0002 8388     		ldrh	r3, [r0, #4]
 2203 0004 9BB2     		uxth	r3, r3
 2204 0006 43F00103 		orr	r3, r3, #1
 2205 000a 8380     		strh	r3, [r0, #4]	@ movhi
 2206 000c 7047     		bx	lr
 2207              	.L119:
1496:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 2208              		.loc 1 1496 0
 2209 000e 8388     		ldrh	r3, [r0, #4]
 2210 0010 23F00103 		bic	r3, r3, #1
 2211 0014 1B04     		lsls	r3, r3, #16
 2212 0016 1B0C     		lsrs	r3, r3, #16
 2213 0018 8380     		strh	r3, [r0, #4]	@ movhi
 2214 001a 7047     		bx	lr
 2215              		.cfi_endproc
 2216              	.LFE65:
 2218              		.section	.text.TIM_OC1PreloadConfig,"ax",%progbits
 2219              		.align	2
 2220              		.global	TIM_OC1PreloadConfig
 2221              		.thumb
 2222              		.thumb_func
 2224              	TIM_OC1PreloadConfig:
 2225              	.LFB66:
1510:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 2226              		.loc 1 1510 0
 2227              		.cfi_startproc
 2228              		@ args = 0, pretend = 0, frame = 0
 2229              		@ frame_needed = 0, uses_anonymous_args = 0
 2230              		@ link register save eliminated.
 2231              	.LVL301:
1515:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC1PE Bit */
 2232              		.loc 1 1515 0
 2233 0000 038B     		ldrh	r3, [r0, #24]
 2234              	.LVL302:
1517:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
 2235              		.loc 1 1517 0
 2236 0002 23F00803 		bic	r3, r3, #8
 2237              	.LVL303:
 2238 0006 1B04     		lsls	r3, r3, #16
 2239 0008 1B0C     		lsrs	r3, r3, #16
 2240              	.LVL304:
1519:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 2241              		.loc 1 1519 0
 2242 000a 1943     		orrs	r1, r1, r3
 2243              	.LVL305:
1521:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 2244              		.loc 1 1521 0
 2245 000c 0183     		strh	r1, [r0, #24]	@ movhi
 2246 000e 7047     		bx	lr
 2247              		.cfi_endproc
 2248              	.LFE66:
 2250              		.section	.text.TIM_OC2PreloadConfig,"ax",%progbits
 2251              		.align	2
 2252              		.global	TIM_OC2PreloadConfig
 2253              		.thumb
 2254              		.thumb_func
 2256              	TIM_OC2PreloadConfig:
 2257              	.LFB67:
1535:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 2258              		.loc 1 1535 0
 2259              		.cfi_startproc
 2260              		@ args = 0, pretend = 0, frame = 0
 2261              		@ frame_needed = 0, uses_anonymous_args = 0
 2262              		@ link register save eliminated.
 2263              	.LVL306:
1540:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC2PE Bit */
 2264              		.loc 1 1540 0
 2265 0000 038B     		ldrh	r3, [r0, #24]
 2266              	.LVL307:
1542:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
 2267              		.loc 1 1542 0
 2268 0002 23F40063 		bic	r3, r3, #2048
 2269              	.LVL308:
 2270 0006 1B04     		lsls	r3, r3, #16
 2271 0008 1B0C     		lsrs	r3, r3, #16
 2272              	.LVL309:
1544:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 2273              		.loc 1 1544 0
 2274 000a 43EA0121 		orr	r1, r3, r1, lsl #8
 2275              	.LVL310:
 2276 000e 89B2     		uxth	r1, r1
 2277              	.LVL311:
1546:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 2278              		.loc 1 1546 0
 2279 0010 0183     		strh	r1, [r0, #24]	@ movhi
 2280 0012 7047     		bx	lr
 2281              		.cfi_endproc
 2282              	.LFE67:
 2284              		.section	.text.TIM_OC3PreloadConfig,"ax",%progbits
 2285              		.align	2
 2286              		.global	TIM_OC3PreloadConfig
 2287              		.thumb
 2288              		.thumb_func
 2290              	TIM_OC3PreloadConfig:
 2291              	.LFB68:
1559:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 2292              		.loc 1 1559 0
 2293              		.cfi_startproc
 2294              		@ args = 0, pretend = 0, frame = 0
 2295              		@ frame_needed = 0, uses_anonymous_args = 0
 2296              		@ link register save eliminated.
 2297              	.LVL312:
1564:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC3PE Bit */
 2298              		.loc 1 1564 0
 2299 0000 838B     		ldrh	r3, [r0, #28]
 2300              	.LVL313:
1566:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
 2301              		.loc 1 1566 0
 2302 0002 23F00803 		bic	r3, r3, #8
 2303              	.LVL314:
 2304 0006 1B04     		lsls	r3, r3, #16
 2305 0008 1B0C     		lsrs	r3, r3, #16
 2306              	.LVL315:
1568:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 2307              		.loc 1 1568 0
 2308 000a 1943     		orrs	r1, r1, r3
 2309              	.LVL316:
1570:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 2310              		.loc 1 1570 0
 2311 000c 8183     		strh	r1, [r0, #28]	@ movhi
 2312 000e 7047     		bx	lr
 2313              		.cfi_endproc
 2314              	.LFE68:
 2316              		.section	.text.TIM_OC4PreloadConfig,"ax",%progbits
 2317              		.align	2
 2318              		.global	TIM_OC4PreloadConfig
 2319              		.thumb
 2320              		.thumb_func
 2322              	TIM_OC4PreloadConfig:
 2323              	.LFB69:
1583:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 2324              		.loc 1 1583 0
 2325              		.cfi_startproc
 2326              		@ args = 0, pretend = 0, frame = 0
 2327              		@ frame_needed = 0, uses_anonymous_args = 0
 2328              		@ link register save eliminated.
 2329              	.LVL317:
1588:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC4PE Bit */
 2330              		.loc 1 1588 0
 2331 0000 838B     		ldrh	r3, [r0, #28]
 2332              	.LVL318:
1590:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
 2333              		.loc 1 1590 0
 2334 0002 23F40063 		bic	r3, r3, #2048
 2335              	.LVL319:
 2336 0006 1B04     		lsls	r3, r3, #16
 2337 0008 1B0C     		lsrs	r3, r3, #16
 2338              	.LVL320:
1592:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 2339              		.loc 1 1592 0
 2340 000a 43EA0121 		orr	r1, r3, r1, lsl #8
 2341              	.LVL321:
 2342 000e 89B2     		uxth	r1, r1
 2343              	.LVL322:
1594:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 2344              		.loc 1 1594 0
 2345 0010 8183     		strh	r1, [r0, #28]	@ movhi
 2346 0012 7047     		bx	lr
 2347              		.cfi_endproc
 2348              	.LFE69:
 2350              		.section	.text.TIM_OC1FastConfig,"ax",%progbits
 2351              		.align	2
 2352              		.global	TIM_OC1FastConfig
 2353              		.thumb
 2354              		.thumb_func
 2356              	TIM_OC1FastConfig:
 2357              	.LFB70:
1607:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 2358              		.loc 1 1607 0
 2359              		.cfi_startproc
 2360              		@ args = 0, pretend = 0, frame = 0
 2361              		@ frame_needed = 0, uses_anonymous_args = 0
 2362              		@ link register save eliminated.
 2363              	.LVL323:
1613:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC1FE Bit */
 2364              		.loc 1 1613 0
 2365 0000 038B     		ldrh	r3, [r0, #24]
 2366              	.LVL324:
1615:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
 2367              		.loc 1 1615 0
 2368 0002 23F00403 		bic	r3, r3, #4
 2369              	.LVL325:
 2370 0006 1B04     		lsls	r3, r3, #16
 2371 0008 1B0C     		lsrs	r3, r3, #16
 2372              	.LVL326:
1617:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 2373              		.loc 1 1617 0
 2374 000a 1943     		orrs	r1, r1, r3
 2375              	.LVL327:
1619:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 2376              		.loc 1 1619 0
 2377 000c 0183     		strh	r1, [r0, #24]	@ movhi
 2378 000e 7047     		bx	lr
 2379              		.cfi_endproc
 2380              	.LFE70:
 2382              		.section	.text.TIM_OC2FastConfig,"ax",%progbits
 2383              		.align	2
 2384              		.global	TIM_OC2FastConfig
 2385              		.thumb
 2386              		.thumb_func
 2388              	TIM_OC2FastConfig:
 2389              	.LFB71:
1633:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 2390              		.loc 1 1633 0
 2391              		.cfi_startproc
 2392              		@ args = 0, pretend = 0, frame = 0
 2393              		@ frame_needed = 0, uses_anonymous_args = 0
 2394              		@ link register save eliminated.
 2395              	.LVL328:
1639:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC2FE Bit */
 2396              		.loc 1 1639 0
 2397 0000 038B     		ldrh	r3, [r0, #24]
 2398              	.LVL329:
1641:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
 2399              		.loc 1 1641 0
 2400 0002 23F48063 		bic	r3, r3, #1024
 2401              	.LVL330:
 2402 0006 1B04     		lsls	r3, r3, #16
 2403 0008 1B0C     		lsrs	r3, r3, #16
 2404              	.LVL331:
1643:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 */
 2405              		.loc 1 1643 0
 2406 000a 43EA0121 		orr	r1, r3, r1, lsl #8
 2407              	.LVL332:
 2408 000e 89B2     		uxth	r1, r1
 2409              	.LVL333:
1645:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 2410              		.loc 1 1645 0
 2411 0010 0183     		strh	r1, [r0, #24]	@ movhi
 2412 0012 7047     		bx	lr
 2413              		.cfi_endproc
 2414              	.LFE71:
 2416              		.section	.text.TIM_OC3FastConfig,"ax",%progbits
 2417              		.align	2
 2418              		.global	TIM_OC3FastConfig
 2419              		.thumb
 2420              		.thumb_func
 2422              	TIM_OC3FastConfig:
 2423              	.LFB72:
1658:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 2424              		.loc 1 1658 0
 2425              		.cfi_startproc
 2426              		@ args = 0, pretend = 0, frame = 0
 2427              		@ frame_needed = 0, uses_anonymous_args = 0
 2428              		@ link register save eliminated.
 2429              	.LVL334:
1664:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC3FE Bit */
 2430              		.loc 1 1664 0
 2431 0000 838B     		ldrh	r3, [r0, #28]
 2432              	.LVL335:
1666:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
 2433              		.loc 1 1666 0
 2434 0002 23F00403 		bic	r3, r3, #4
 2435              	.LVL336:
 2436 0006 1B04     		lsls	r3, r3, #16
 2437 0008 1B0C     		lsrs	r3, r3, #16
 2438              	.LVL337:
1668:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
 2439              		.loc 1 1668 0
 2440 000a 1943     		orrs	r1, r1, r3
 2441              	.LVL338:
1670:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 2442              		.loc 1 1670 0
 2443 000c 8183     		strh	r1, [r0, #28]	@ movhi
 2444 000e 7047     		bx	lr
 2445              		.cfi_endproc
 2446              	.LFE72:
 2448              		.section	.text.TIM_OC4FastConfig,"ax",%progbits
 2449              		.align	2
 2450              		.global	TIM_OC4FastConfig
 2451              		.thumb
 2452              		.thumb_func
 2454              	TIM_OC4FastConfig:
 2455              	.LFB73:
1683:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 2456              		.loc 1 1683 0
 2457              		.cfi_startproc
 2458              		@ args = 0, pretend = 0, frame = 0
 2459              		@ frame_needed = 0, uses_anonymous_args = 0
 2460              		@ link register save eliminated.
 2461              	.LVL339:
1689:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC4FE Bit */
 2462              		.loc 1 1689 0
 2463 0000 838B     		ldrh	r3, [r0, #28]
 2464              	.LVL340:
1691:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
 2465              		.loc 1 1691 0
 2466 0002 23F48063 		bic	r3, r3, #1024
 2467              	.LVL341:
 2468 0006 1B04     		lsls	r3, r3, #16
 2469 0008 1B0C     		lsrs	r3, r3, #16
 2470              	.LVL342:
1693:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 */
 2471              		.loc 1 1693 0
 2472 000a 43EA0121 		orr	r1, r3, r1, lsl #8
 2473              	.LVL343:
 2474 000e 89B2     		uxth	r1, r1
 2475              	.LVL344:
1695:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 2476              		.loc 1 1695 0
 2477 0010 8183     		strh	r1, [r0, #28]	@ movhi
 2478 0012 7047     		bx	lr
 2479              		.cfi_endproc
 2480              	.LFE73:
 2482              		.section	.text.TIM_ClearOC1Ref,"ax",%progbits
 2483              		.align	2
 2484              		.global	TIM_ClearOC1Ref
 2485              		.thumb
 2486              		.thumb_func
 2488              	TIM_ClearOC1Ref:
 2489              	.LFB74:
1708:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 2490              		.loc 1 1708 0
 2491              		.cfi_startproc
 2492              		@ args = 0, pretend = 0, frame = 0
 2493              		@ frame_needed = 0, uses_anonymous_args = 0
 2494              		@ link register save eliminated.
 2495              	.LVL345:
1714:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 2496              		.loc 1 1714 0
 2497 0000 038B     		ldrh	r3, [r0, #24]
 2498              	.LVL346:
1717:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
 2499              		.loc 1 1717 0
 2500 0002 23F08003 		bic	r3, r3, #128
 2501              	.LVL347:
 2502 0006 1B04     		lsls	r3, r3, #16
 2503 0008 1B0C     		lsrs	r3, r3, #16
 2504              	.LVL348:
1719:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 2505              		.loc 1 1719 0
 2506 000a 1943     		orrs	r1, r1, r3
 2507              	.LVL349:
1721:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 2508              		.loc 1 1721 0
 2509 000c 0183     		strh	r1, [r0, #24]	@ movhi
 2510 000e 7047     		bx	lr
 2511              		.cfi_endproc
 2512              	.LFE74:
 2514              		.section	.text.TIM_ClearOC2Ref,"ax",%progbits
 2515              		.align	2
 2516              		.global	TIM_ClearOC2Ref
 2517              		.thumb
 2518              		.thumb_func
 2520              	TIM_ClearOC2Ref:
 2521              	.LFB75:
1734:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr1 = 0;
 2522              		.loc 1 1734 0
 2523              		.cfi_startproc
 2524              		@ args = 0, pretend = 0, frame = 0
 2525              		@ frame_needed = 0, uses_anonymous_args = 0
 2526              		@ link register save eliminated.
 2527              	.LVL350:
1739:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC2CE Bit */
 2528              		.loc 1 1739 0
 2529 0000 038B     		ldrh	r3, [r0, #24]
 2530              	.LVL351:
1741:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
 2531              		.loc 1 1741 0
 2532 0002 C3F30E03 		ubfx	r3, r3, #0, #15
 2533              	.LVL352:
1743:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR1 register */
 2534              		.loc 1 1743 0
 2535 0006 43EA0121 		orr	r1, r3, r1, lsl #8
 2536              	.LVL353:
 2537 000a 89B2     		uxth	r1, r1
 2538              	.LVL354:
1745:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 2539              		.loc 1 1745 0
 2540 000c 0183     		strh	r1, [r0, #24]	@ movhi
 2541 000e 7047     		bx	lr
 2542              		.cfi_endproc
 2543              	.LFE75:
 2545              		.section	.text.TIM_ClearOC3Ref,"ax",%progbits
 2546              		.align	2
 2547              		.global	TIM_ClearOC3Ref
 2548              		.thumb
 2549              		.thumb_func
 2551              	TIM_ClearOC3Ref:
 2552              	.LFB76:
1758:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 2553              		.loc 1 1758 0
 2554              		.cfi_startproc
 2555              		@ args = 0, pretend = 0, frame = 0
 2556              		@ frame_needed = 0, uses_anonymous_args = 0
 2557              		@ link register save eliminated.
 2558              	.LVL355:
1763:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC3CE Bit */
 2559              		.loc 1 1763 0
 2560 0000 838B     		ldrh	r3, [r0, #28]
 2561              	.LVL356:
1765:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
 2562              		.loc 1 1765 0
 2563 0002 23F08003 		bic	r3, r3, #128
 2564              	.LVL357:
 2565 0006 1B04     		lsls	r3, r3, #16
 2566 0008 1B0C     		lsrs	r3, r3, #16
 2567              	.LVL358:
1767:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 2568              		.loc 1 1767 0
 2569 000a 1943     		orrs	r1, r1, r3
 2570              	.LVL359:
1769:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 2571              		.loc 1 1769 0
 2572 000c 8183     		strh	r1, [r0, #28]	@ movhi
 2573 000e 7047     		bx	lr
 2574              		.cfi_endproc
 2575              	.LFE76:
 2577              		.section	.text.TIM_ClearOC4Ref,"ax",%progbits
 2578              		.align	2
 2579              		.global	TIM_ClearOC4Ref
 2580              		.thumb
 2581              		.thumb_func
 2583              	TIM_ClearOC4Ref:
 2584              	.LFB77:
1782:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0;
 2585              		.loc 1 1782 0
 2586              		.cfi_startproc
 2587              		@ args = 0, pretend = 0, frame = 0
 2588              		@ frame_needed = 0, uses_anonymous_args = 0
 2589              		@ link register save eliminated.
 2590              	.LVL360:
1787:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Reset the OC4CE Bit */
 2591              		.loc 1 1787 0
 2592 0000 838B     		ldrh	r3, [r0, #28]
 2593              	.LVL361:
1789:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
 2594              		.loc 1 1789 0
 2595 0002 C3F30E03 		ubfx	r3, r3, #0, #15
 2596              	.LVL362:
1791:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 register */
 2597              		.loc 1 1791 0
 2598 0006 43EA0121 		orr	r1, r3, r1, lsl #8
 2599              	.LVL363:
 2600 000a 89B2     		uxth	r1, r1
 2601              	.LVL364:
1793:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 2602              		.loc 1 1793 0
 2603 000c 8183     		strh	r1, [r0, #28]	@ movhi
 2604 000e 7047     		bx	lr
 2605              		.cfi_endproc
 2606              	.LFE77:
 2608              		.section	.text.TIM_OC1PolarityConfig,"ax",%progbits
 2609              		.align	2
 2610              		.global	TIM_OC1PolarityConfig
 2611              		.thumb
 2612              		.thumb_func
 2614              	TIM_OC1PolarityConfig:
 2615              	.LFB78:
1806:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 2616              		.loc 1 1806 0
 2617              		.cfi_startproc
 2618              		@ args = 0, pretend = 0, frame = 0
 2619              		@ frame_needed = 0, uses_anonymous_args = 0
 2620              		@ link register save eliminated.
 2621              	.LVL365:
1811:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set or Reset the CC1P Bit */
 2622              		.loc 1 1811 0
 2623 0000 038C     		ldrh	r3, [r0, #32]
 2624              	.LVL366:
1813:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer |= TIM_OCPolarity;
 2625              		.loc 1 1813 0
 2626 0002 23F00203 		bic	r3, r3, #2
 2627              	.LVL367:
 2628 0006 1B04     		lsls	r3, r3, #16
 2629 0008 1B0C     		lsrs	r3, r3, #16
 2630              	.LVL368:
1814:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 2631              		.loc 1 1814 0
 2632 000a 1943     		orrs	r1, r1, r3
 2633              	.LVL369:
1816:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 2634              		.loc 1 1816 0
 2635 000c 0184     		strh	r1, [r0, #32]	@ movhi
 2636 000e 7047     		bx	lr
 2637              		.cfi_endproc
 2638              	.LFE78:
 2640              		.section	.text.TIM_OC1NPolarityConfig,"ax",%progbits
 2641              		.align	2
 2642              		.global	TIM_OC1NPolarityConfig
 2643              		.thumb
 2644              		.thumb_func
 2646              	TIM_OC1NPolarityConfig:
 2647              	.LFB79:
1829:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 2648              		.loc 1 1829 0
 2649              		.cfi_startproc
 2650              		@ args = 0, pretend = 0, frame = 0
 2651              		@ frame_needed = 0, uses_anonymous_args = 0
 2652              		@ link register save eliminated.
 2653              	.LVL370:
1835:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set or Reset the CC1NP Bit */
 2654              		.loc 1 1835 0
 2655 0000 038C     		ldrh	r3, [r0, #32]
 2656              	.LVL371:
1837:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer |= TIM_OCNPolarity;
 2657              		.loc 1 1837 0
 2658 0002 23F00803 		bic	r3, r3, #8
 2659              	.LVL372:
 2660 0006 1B04     		lsls	r3, r3, #16
 2661 0008 1B0C     		lsrs	r3, r3, #16
 2662              	.LVL373:
1838:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 2663              		.loc 1 1838 0
 2664 000a 1943     		orrs	r1, r1, r3
 2665              	.LVL374:
1840:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 2666              		.loc 1 1840 0
 2667 000c 0184     		strh	r1, [r0, #32]	@ movhi
 2668 000e 7047     		bx	lr
 2669              		.cfi_endproc
 2670              	.LFE79:
 2672              		.section	.text.TIM_OC2PolarityConfig,"ax",%progbits
 2673              		.align	2
 2674              		.global	TIM_OC2PolarityConfig
 2675              		.thumb
 2676              		.thumb_func
 2678              	TIM_OC2PolarityConfig:
 2679              	.LFB80:
1853:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 2680              		.loc 1 1853 0
 2681              		.cfi_startproc
 2682              		@ args = 0, pretend = 0, frame = 0
 2683              		@ frame_needed = 0, uses_anonymous_args = 0
 2684              		@ link register save eliminated.
 2685              	.LVL375:
1858:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set or Reset the CC2P Bit */
 2686              		.loc 1 1858 0
 2687 0000 038C     		ldrh	r3, [r0, #32]
 2688              	.LVL376:
1860:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
 2689              		.loc 1 1860 0
 2690 0002 23F02003 		bic	r3, r3, #32
 2691              	.LVL377:
 2692 0006 1B04     		lsls	r3, r3, #16
 2693 0008 1B0C     		lsrs	r3, r3, #16
 2694              	.LVL378:
1861:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 2695              		.loc 1 1861 0
 2696 000a 43EA0111 		orr	r1, r3, r1, lsl #4
 2697              	.LVL379:
 2698 000e 89B2     		uxth	r1, r1
 2699              	.LVL380:
1863:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 2700              		.loc 1 1863 0
 2701 0010 0184     		strh	r1, [r0, #32]	@ movhi
 2702 0012 7047     		bx	lr
 2703              		.cfi_endproc
 2704              	.LFE80:
 2706              		.section	.text.TIM_OC2NPolarityConfig,"ax",%progbits
 2707              		.align	2
 2708              		.global	TIM_OC2NPolarityConfig
 2709              		.thumb
 2710              		.thumb_func
 2712              	TIM_OC2NPolarityConfig:
 2713              	.LFB81:
1876:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 2714              		.loc 1 1876 0
 2715              		.cfi_startproc
 2716              		@ args = 0, pretend = 0, frame = 0
 2717              		@ frame_needed = 0, uses_anonymous_args = 0
 2718              		@ link register save eliminated.
 2719              	.LVL381:
1882:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set or Reset the CC2NP Bit */
 2720              		.loc 1 1882 0
 2721 0000 038C     		ldrh	r3, [r0, #32]
 2722              	.LVL382:
1884:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
 2723              		.loc 1 1884 0
 2724 0002 23F08003 		bic	r3, r3, #128
 2725              	.LVL383:
 2726 0006 1B04     		lsls	r3, r3, #16
 2727 0008 1B0C     		lsrs	r3, r3, #16
 2728              	.LVL384:
1885:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 2729              		.loc 1 1885 0
 2730 000a 43EA0111 		orr	r1, r3, r1, lsl #4
 2731              	.LVL385:
 2732 000e 89B2     		uxth	r1, r1
 2733              	.LVL386:
1887:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 2734              		.loc 1 1887 0
 2735 0010 0184     		strh	r1, [r0, #32]	@ movhi
 2736 0012 7047     		bx	lr
 2737              		.cfi_endproc
 2738              	.LFE81:
 2740              		.section	.text.TIM_OC3PolarityConfig,"ax",%progbits
 2741              		.align	2
 2742              		.global	TIM_OC3PolarityConfig
 2743              		.thumb
 2744              		.thumb_func
 2746              	TIM_OC3PolarityConfig:
 2747              	.LFB82:
1900:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 2748              		.loc 1 1900 0
 2749              		.cfi_startproc
 2750              		@ args = 0, pretend = 0, frame = 0
 2751              		@ frame_needed = 0, uses_anonymous_args = 0
 2752              		@ link register save eliminated.
 2753              	.LVL387:
1905:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set or Reset the CC3P Bit */
 2754              		.loc 1 1905 0
 2755 0000 038C     		ldrh	r3, [r0, #32]
 2756              	.LVL388:
1907:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
 2757              		.loc 1 1907 0
 2758 0002 23F40073 		bic	r3, r3, #512
 2759              	.LVL389:
 2760 0006 1B04     		lsls	r3, r3, #16
 2761 0008 1B0C     		lsrs	r3, r3, #16
 2762              	.LVL390:
1908:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 2763              		.loc 1 1908 0
 2764 000a 43EA0121 		orr	r1, r3, r1, lsl #8
 2765              	.LVL391:
 2766 000e 89B2     		uxth	r1, r1
 2767              	.LVL392:
1910:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 2768              		.loc 1 1910 0
 2769 0010 0184     		strh	r1, [r0, #32]	@ movhi
 2770 0012 7047     		bx	lr
 2771              		.cfi_endproc
 2772              	.LFE82:
 2774              		.section	.text.TIM_OC3NPolarityConfig,"ax",%progbits
 2775              		.align	2
 2776              		.global	TIM_OC3NPolarityConfig
 2777              		.thumb
 2778              		.thumb_func
 2780              	TIM_OC3NPolarityConfig:
 2781              	.LFB83:
1923:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 2782              		.loc 1 1923 0
 2783              		.cfi_startproc
 2784              		@ args = 0, pretend = 0, frame = 0
 2785              		@ frame_needed = 0, uses_anonymous_args = 0
 2786              		@ link register save eliminated.
 2787              	.LVL393:
1930:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set or Reset the CC3NP Bit */
 2788              		.loc 1 1930 0
 2789 0000 038C     		ldrh	r3, [r0, #32]
 2790              	.LVL394:
1932:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
 2791              		.loc 1 1932 0
 2792 0002 23F40063 		bic	r3, r3, #2048
 2793              	.LVL395:
 2794 0006 1B04     		lsls	r3, r3, #16
 2795 0008 1B0C     		lsrs	r3, r3, #16
 2796              	.LVL396:
1933:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 2797              		.loc 1 1933 0
 2798 000a 43EA0121 		orr	r1, r3, r1, lsl #8
 2799              	.LVL397:
 2800 000e 89B2     		uxth	r1, r1
 2801              	.LVL398:
1935:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 2802              		.loc 1 1935 0
 2803 0010 0184     		strh	r1, [r0, #32]	@ movhi
 2804 0012 7047     		bx	lr
 2805              		.cfi_endproc
 2806              	.LFE83:
 2808              		.section	.text.TIM_OC4PolarityConfig,"ax",%progbits
 2809              		.align	2
 2810              		.global	TIM_OC4PolarityConfig
 2811              		.thumb
 2812              		.thumb_func
 2814              	TIM_OC4PolarityConfig:
 2815              	.LFB84:
1948:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccer = 0;
 2816              		.loc 1 1948 0
 2817              		.cfi_startproc
 2818              		@ args = 0, pretend = 0, frame = 0
 2819              		@ frame_needed = 0, uses_anonymous_args = 0
 2820              		@ link register save eliminated.
 2821              	.LVL399:
1953:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set or Reset the CC4P Bit */
 2822              		.loc 1 1953 0
 2823 0000 038C     		ldrh	r3, [r0, #32]
 2824              	.LVL400:
1955:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
 2825              		.loc 1 1955 0
 2826 0002 23F40053 		bic	r3, r3, #8192
 2827              	.LVL401:
 2828 0006 1B04     		lsls	r3, r3, #16
 2829 0008 1B0C     		lsrs	r3, r3, #16
 2830              	.LVL402:
1956:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCER register */
 2831              		.loc 1 1956 0
 2832 000a 43EA0131 		orr	r1, r3, r1, lsl #12
 2833              	.LVL403:
 2834 000e 89B2     		uxth	r1, r1
 2835              	.LVL404:
1958:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 2836              		.loc 1 1958 0
 2837 0010 0184     		strh	r1, [r0, #32]	@ movhi
 2838 0012 7047     		bx	lr
 2839              		.cfi_endproc
 2840              	.LFE84:
 2842              		.section	.text.TIM_CCxCmd,"ax",%progbits
 2843              		.align	2
 2844              		.global	TIM_CCxCmd
 2845              		.thumb
 2846              		.thumb_func
 2848              	TIM_CCxCmd:
 2849              	.LFB85:
1975:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmp = 0;
 2850              		.loc 1 1975 0
 2851              		.cfi_startproc
 2852              		@ args = 0, pretend = 0, frame = 0
 2853              		@ frame_needed = 0, uses_anonymous_args = 0
 2854              		@ link register save eliminated.
 2855              	.LVL405:
 2856 0000 10B4     		push	{r4}
 2857              	.LCFI20:
 2858              		.cfi_def_cfa_offset 4
 2859              		.cfi_offset 4, -4
 2860              	.LVL406:
1986:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 2861              		.loc 1 1986 0
 2862 0002 038C     		ldrh	r3, [r0, #32]
 2863 0004 9CB2     		uxth	r4, r3
1983:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 2864              		.loc 1 1983 0
 2865 0006 0123     		movs	r3, #1
 2866 0008 8B40     		lsls	r3, r3, r1
1986:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 2867              		.loc 1 1986 0
 2868 000a 24EA0303 		bic	r3, r4, r3
 2869 000e 0384     		strh	r3, [r0, #32]	@ movhi
1989:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 2870              		.loc 1 1989 0
 2871 0010 038C     		ldrh	r3, [r0, #32]
 2872 0012 8A40     		lsls	r2, r2, r1
 2873              	.LVL407:
 2874 0014 1343     		orrs	r3, r3, r2
 2875 0016 9BB2     		uxth	r3, r3
 2876 0018 0384     		strh	r3, [r0, #32]	@ movhi
1990:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 2877              		.loc 1 1990 0
 2878 001a 5DF8044B 		ldr	r4, [sp], #4
 2879              	.LCFI21:
 2880              		.cfi_restore 4
 2881              		.cfi_def_cfa_offset 0
 2882 001e 7047     		bx	lr
 2883              		.cfi_endproc
 2884              	.LFE85:
 2886              		.section	.text.TIM_CCxNCmd,"ax",%progbits
 2887              		.align	2
 2888              		.global	TIM_CCxNCmd
 2889              		.thumb
 2890              		.thumb_func
 2892              	TIM_CCxNCmd:
 2893              	.LFB86:
2005:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmp = 0;
 2894              		.loc 1 2005 0
 2895              		.cfi_startproc
 2896              		@ args = 0, pretend = 0, frame = 0
 2897              		@ frame_needed = 0, uses_anonymous_args = 0
 2898              		@ link register save eliminated.
 2899              	.LVL408:
 2900 0000 10B4     		push	{r4}
 2901              	.LCFI22:
 2902              		.cfi_def_cfa_offset 4
 2903              		.cfi_offset 4, -4
 2904              	.LVL409:
2016:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 2905              		.loc 1 2016 0
 2906 0002 038C     		ldrh	r3, [r0, #32]
 2907 0004 9CB2     		uxth	r4, r3
2013:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 2908              		.loc 1 2013 0
 2909 0006 0423     		movs	r3, #4
 2910 0008 8B40     		lsls	r3, r3, r1
2016:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 2911              		.loc 1 2016 0
 2912 000a 24EA0303 		bic	r3, r4, r3
 2913 000e 0384     		strh	r3, [r0, #32]	@ movhi
2019:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 2914              		.loc 1 2019 0
 2915 0010 038C     		ldrh	r3, [r0, #32]
 2916 0012 8A40     		lsls	r2, r2, r1
 2917              	.LVL410:
 2918 0014 1343     		orrs	r3, r3, r2
 2919 0016 9BB2     		uxth	r3, r3
 2920 0018 0384     		strh	r3, [r0, #32]	@ movhi
2020:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 2921              		.loc 1 2020 0
 2922 001a 5DF8044B 		ldr	r4, [sp], #4
 2923              	.LCFI23:
 2924              		.cfi_restore 4
 2925              		.cfi_def_cfa_offset 0
 2926 001e 7047     		bx	lr
 2927              		.cfi_endproc
 2928              	.LFE86:
 2930              		.section	.text.TIM_SelectOCxM,"ax",%progbits
 2931              		.align	2
 2932              		.global	TIM_SelectOCxM
 2933              		.thumb
 2934              		.thumb_func
 2936              	TIM_SelectOCxM:
 2937              	.LFB87:
2046:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint32_t tmp = 0;
 2938              		.loc 1 2046 0
 2939              		.cfi_startproc
 2940              		@ args = 0, pretend = 0, frame = 0
 2941              		@ frame_needed = 0, uses_anonymous_args = 0
 2942              		@ link register save eliminated.
 2943              	.LVL411:
 2944 0000 30B4     		push	{r4, r5}
 2945              	.LCFI24:
 2946              		.cfi_def_cfa_offset 8
 2947              		.cfi_offset 4, -8
 2948              		.cfi_offset 5, -4
 2949              	.LVL412:
2056:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 2950              		.loc 1 2056 0
 2951 0002 00F11805 		add	r5, r0, #24
 2952              	.LVL413:
2061:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 2953              		.loc 1 2061 0
 2954 0006 038C     		ldrh	r3, [r0, #32]
 2955 0008 9CB2     		uxth	r4, r3
2058:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 2956              		.loc 1 2058 0
 2957 000a 0123     		movs	r3, #1
 2958 000c 8B40     		lsls	r3, r3, r1
2061:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 2959              		.loc 1 2061 0
 2960 000e 24EA0303 		bic	r3, r4, r3
 2961 0012 0384     		strh	r3, [r0, #32]	@ movhi
2063:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 2962              		.loc 1 2063 0
 2963 0014 21F00803 		bic	r3, r1, #8
 2964 0018 9BB2     		uxth	r3, r3
 2965 001a 43B9     		cbnz	r3, .L145
 2966              	.LVL414:
2065:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 2967              		.loc 1 2065 0
 2968 001c 4908     		lsrs	r1, r1, #1
 2969              	.LVL415:
2068:.\StdPeriphLib\src/stm32f10x_tim.c ****    
 2970              		.loc 1 2068 0
 2971 001e 6B58     		ldr	r3, [r5, r1]
 2972 0020 23F07003 		bic	r3, r3, #112
 2973 0024 6B50     		str	r3, [r5, r1]
2071:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 2974              		.loc 1 2071 0
 2975 0026 6B58     		ldr	r3, [r5, r1]
 2976 0028 1A43     		orrs	r2, r2, r3
 2977              	.LVL416:
 2978 002a 6A50     		str	r2, [r5, r1]
 2979 002c 0BE0     		b	.L144
 2980              	.LVL417:
 2981              	.L145:
2075:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 2982              		.loc 1 2075 0
 2983 002e 0439     		subs	r1, r1, #4
 2984              	.LVL418:
 2985 0030 C1F34E01 		ubfx	r1, r1, #1, #15
2078:.\StdPeriphLib\src/stm32f10x_tim.c ****     
 2986              		.loc 1 2078 0
 2987 0034 4B59     		ldr	r3, [r1, r5]
 2988 0036 23F4E043 		bic	r3, r3, #28672
 2989 003a 4B51     		str	r3, [r1, r5]
2081:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 2990              		.loc 1 2081 0
 2991 003c 4B59     		ldr	r3, [r1, r5]
 2992 003e 1202     		lsls	r2, r2, #8
 2993              	.LVL419:
 2994 0040 92B2     		uxth	r2, r2
 2995 0042 1A43     		orrs	r2, r2, r3
 2996 0044 4A51     		str	r2, [r1, r5]
 2997              	.LVL420:
 2998              	.L144:
2083:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 2999              		.loc 1 2083 0
 3000 0046 30BC     		pop	{r4, r5}
 3001              	.LCFI25:
 3002              		.cfi_restore 5
 3003              		.cfi_restore 4
 3004              		.cfi_def_cfa_offset 0
 3005 0048 7047     		bx	lr
 3006              		.cfi_endproc
 3007              	.LFE87:
 3009 004a 00BF     		.section	.text.TIM_UpdateDisableConfig,"ax",%progbits
 3010              		.align	2
 3011              		.global	TIM_UpdateDisableConfig
 3012              		.thumb
 3013              		.thumb_func
 3015              	TIM_UpdateDisableConfig:
 3016              	.LFB88:
2093:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 3017              		.loc 1 2093 0
 3018              		.cfi_startproc
 3019              		@ args = 0, pretend = 0, frame = 0
 3020              		@ frame_needed = 0, uses_anonymous_args = 0
 3021              		@ link register save eliminated.
 3022              	.LVL421:
2097:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 3023              		.loc 1 2097 0
 3024 0000 29B1     		cbz	r1, .L149
2100:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 3025              		.loc 1 2100 0
 3026 0002 0388     		ldrh	r3, [r0]
 3027 0004 9BB2     		uxth	r3, r3
 3028 0006 43F00203 		orr	r3, r3, #2
 3029 000a 0380     		strh	r3, [r0]	@ movhi
 3030 000c 7047     		bx	lr
 3031              	.L149:
2105:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 3032              		.loc 1 2105 0
 3033 000e 0388     		ldrh	r3, [r0]
 3034 0010 23F00203 		bic	r3, r3, #2
 3035 0014 1B04     		lsls	r3, r3, #16
 3036 0016 1B0C     		lsrs	r3, r3, #16
 3037 0018 0380     		strh	r3, [r0]	@ movhi
 3038 001a 7047     		bx	lr
 3039              		.cfi_endproc
 3040              	.LFE88:
 3042              		.section	.text.TIM_UpdateRequestConfig,"ax",%progbits
 3043              		.align	2
 3044              		.global	TIM_UpdateRequestConfig
 3045              		.thumb
 3046              		.thumb_func
 3048              	TIM_UpdateRequestConfig:
 3049              	.LFB89:
2121:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 3050              		.loc 1 2121 0
 3051              		.cfi_startproc
 3052              		@ args = 0, pretend = 0, frame = 0
 3053              		@ frame_needed = 0, uses_anonymous_args = 0
 3054              		@ link register save eliminated.
 3055              	.LVL422:
2125:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 3056              		.loc 1 2125 0
 3057 0000 29B1     		cbz	r1, .L152
2128:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 3058              		.loc 1 2128 0
 3059 0002 0388     		ldrh	r3, [r0]
 3060 0004 9BB2     		uxth	r3, r3
 3061 0006 43F00403 		orr	r3, r3, #4
 3062 000a 0380     		strh	r3, [r0]	@ movhi
 3063 000c 7047     		bx	lr
 3064              	.L152:
2133:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 3065              		.loc 1 2133 0
 3066 000e 0388     		ldrh	r3, [r0]
 3067 0010 23F00403 		bic	r3, r3, #4
 3068 0014 1B04     		lsls	r3, r3, #16
 3069 0016 1B0C     		lsrs	r3, r3, #16
 3070 0018 0380     		strh	r3, [r0]	@ movhi
 3071 001a 7047     		bx	lr
 3072              		.cfi_endproc
 3073              	.LFE89:
 3075              		.section	.text.TIM_SelectHallSensor,"ax",%progbits
 3076              		.align	2
 3077              		.global	TIM_SelectHallSensor
 3078              		.thumb
 3079              		.thumb_func
 3081              	TIM_SelectHallSensor:
 3082              	.LFB90:
2145:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 3083              		.loc 1 2145 0
 3084              		.cfi_startproc
 3085              		@ args = 0, pretend = 0, frame = 0
 3086              		@ frame_needed = 0, uses_anonymous_args = 0
 3087              		@ link register save eliminated.
 3088              	.LVL423:
2149:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 3089              		.loc 1 2149 0
 3090 0000 29B1     		cbz	r1, .L155
2152:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 3091              		.loc 1 2152 0
 3092 0002 8388     		ldrh	r3, [r0, #4]
 3093 0004 9BB2     		uxth	r3, r3
 3094 0006 43F08003 		orr	r3, r3, #128
 3095 000a 8380     		strh	r3, [r0, #4]	@ movhi
 3096 000c 7047     		bx	lr
 3097              	.L155:
2157:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 3098              		.loc 1 2157 0
 3099 000e 8388     		ldrh	r3, [r0, #4]
 3100 0010 23F08003 		bic	r3, r3, #128
 3101 0014 1B04     		lsls	r3, r3, #16
 3102 0016 1B0C     		lsrs	r3, r3, #16
 3103 0018 8380     		strh	r3, [r0, #4]	@ movhi
 3104 001a 7047     		bx	lr
 3105              		.cfi_endproc
 3106              	.LFE90:
 3108              		.section	.text.TIM_SelectOnePulseMode,"ax",%progbits
 3109              		.align	2
 3110              		.global	TIM_SelectOnePulseMode
 3111              		.thumb
 3112              		.thumb_func
 3114              	TIM_SelectOnePulseMode:
 3115              	.LFB91:
2171:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 3116              		.loc 1 2171 0
 3117              		.cfi_startproc
 3118              		@ args = 0, pretend = 0, frame = 0
 3119              		@ frame_needed = 0, uses_anonymous_args = 0
 3120              		@ link register save eliminated.
 3121              	.LVL424:
2176:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Configure the OPM Mode */
 3122              		.loc 1 2176 0
 3123 0000 0388     		ldrh	r3, [r0]
 3124 0002 23F00803 		bic	r3, r3, #8
 3125 0006 1B04     		lsls	r3, r3, #16
 3126 0008 1B0C     		lsrs	r3, r3, #16
 3127 000a 0380     		strh	r3, [r0]	@ movhi
2178:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 3128              		.loc 1 2178 0
 3129 000c 0388     		ldrh	r3, [r0]
 3130 000e 9BB2     		uxth	r3, r3
 3131 0010 1943     		orrs	r1, r1, r3
 3132              	.LVL425:
 3133 0012 0180     		strh	r1, [r0]	@ movhi
 3134 0014 7047     		bx	lr
 3135              		.cfi_endproc
 3136              	.LFE91:
 3138 0016 00BF     		.section	.text.TIM_SelectOutputTrigger,"ax",%progbits
 3139              		.align	2
 3140              		.global	TIM_SelectOutputTrigger
 3141              		.thumb
 3142              		.thumb_func
 3144              	TIM_SelectOutputTrigger:
 3145              	.LFB92:
2203:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 3146              		.loc 1 2203 0
 3147              		.cfi_startproc
 3148              		@ args = 0, pretend = 0, frame = 0
 3149              		@ frame_needed = 0, uses_anonymous_args = 0
 3150              		@ link register save eliminated.
 3151              	.LVL426:
2208:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Select the TRGO source */
 3152              		.loc 1 2208 0
 3153 0000 8388     		ldrh	r3, [r0, #4]
 3154 0002 23F07003 		bic	r3, r3, #112
 3155 0006 1B04     		lsls	r3, r3, #16
 3156 0008 1B0C     		lsrs	r3, r3, #16
 3157 000a 8380     		strh	r3, [r0, #4]	@ movhi
2210:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 3158              		.loc 1 2210 0
 3159 000c 8388     		ldrh	r3, [r0, #4]
 3160 000e 9BB2     		uxth	r3, r3
 3161 0010 1943     		orrs	r1, r1, r3
 3162              	.LVL427:
 3163 0012 8180     		strh	r1, [r0, #4]	@ movhi
 3164 0014 7047     		bx	lr
 3165              		.cfi_endproc
 3166              	.LFE92:
 3168 0016 00BF     		.section	.text.TIM_SelectSlaveMode,"ax",%progbits
 3169              		.align	2
 3170              		.global	TIM_SelectSlaveMode
 3171              		.thumb
 3172              		.thumb_func
 3174              	TIM_SelectSlaveMode:
 3175              	.LFB93:
2226:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 3176              		.loc 1 2226 0
 3177              		.cfi_startproc
 3178              		@ args = 0, pretend = 0, frame = 0
 3179              		@ frame_needed = 0, uses_anonymous_args = 0
 3180              		@ link register save eliminated.
 3181              	.LVL428:
2231:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Select the Slave Mode */
 3182              		.loc 1 2231 0
 3183 0000 0389     		ldrh	r3, [r0, #8]
 3184 0002 23F00703 		bic	r3, r3, #7
 3185 0006 1B04     		lsls	r3, r3, #16
 3186 0008 1B0C     		lsrs	r3, r3, #16
 3187 000a 0381     		strh	r3, [r0, #8]	@ movhi
2233:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 3188              		.loc 1 2233 0
 3189 000c 0389     		ldrh	r3, [r0, #8]
 3190 000e 9BB2     		uxth	r3, r3
 3191 0010 1943     		orrs	r1, r1, r3
 3192              	.LVL429:
 3193 0012 0181     		strh	r1, [r0, #8]	@ movhi
 3194 0014 7047     		bx	lr
 3195              		.cfi_endproc
 3196              	.LFE93:
 3198 0016 00BF     		.section	.text.TIM_SelectMasterSlaveMode,"ax",%progbits
 3199              		.align	2
 3200              		.global	TIM_SelectMasterSlaveMode
 3201              		.thumb
 3202              		.thumb_func
 3204              	TIM_SelectMasterSlaveMode:
 3205              	.LFB94:
2247:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 3206              		.loc 1 2247 0
 3207              		.cfi_startproc
 3208              		@ args = 0, pretend = 0, frame = 0
 3209              		@ frame_needed = 0, uses_anonymous_args = 0
 3210              		@ link register save eliminated.
 3211              	.LVL430:
2252:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 3212              		.loc 1 2252 0
 3213 0000 0389     		ldrh	r3, [r0, #8]
 3214 0002 23F08003 		bic	r3, r3, #128
 3215 0006 1B04     		lsls	r3, r3, #16
 3216 0008 1B0C     		lsrs	r3, r3, #16
 3217 000a 0381     		strh	r3, [r0, #8]	@ movhi
2255:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 3218              		.loc 1 2255 0
 3219 000c 0389     		ldrh	r3, [r0, #8]
 3220 000e 9BB2     		uxth	r3, r3
 3221 0010 1943     		orrs	r1, r1, r3
 3222              	.LVL431:
 3223 0012 0181     		strh	r1, [r0, #8]	@ movhi
 3224 0014 7047     		bx	lr
 3225              		.cfi_endproc
 3226              	.LFE94:
 3228 0016 00BF     		.section	.text.TIM_SetCounter,"ax",%progbits
 3229              		.align	2
 3230              		.global	TIM_SetCounter
 3231              		.thumb
 3232              		.thumb_func
 3234              	TIM_SetCounter:
 3235              	.LFB95:
2265:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 3236              		.loc 1 2265 0
 3237              		.cfi_startproc
 3238              		@ args = 0, pretend = 0, frame = 0
 3239              		@ frame_needed = 0, uses_anonymous_args = 0
 3240              		@ link register save eliminated.
 3241              	.LVL432:
2269:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 3242              		.loc 1 2269 0
 3243 0000 8184     		strh	r1, [r0, #36]	@ movhi
 3244 0002 7047     		bx	lr
 3245              		.cfi_endproc
 3246              	.LFE95:
 3248              		.section	.text.TIM_SetAutoreload,"ax",%progbits
 3249              		.align	2
 3250              		.global	TIM_SetAutoreload
 3251              		.thumb
 3252              		.thumb_func
 3254              	TIM_SetAutoreload:
 3255              	.LFB96:
2279:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 3256              		.loc 1 2279 0
 3257              		.cfi_startproc
 3258              		@ args = 0, pretend = 0, frame = 0
 3259              		@ frame_needed = 0, uses_anonymous_args = 0
 3260              		@ link register save eliminated.
 3261              	.LVL433:
2283:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 3262              		.loc 1 2283 0
 3263 0000 8185     		strh	r1, [r0, #44]	@ movhi
 3264 0002 7047     		bx	lr
 3265              		.cfi_endproc
 3266              	.LFE96:
 3268              		.section	.text.TIM_SetCompare1,"ax",%progbits
 3269              		.align	2
 3270              		.global	TIM_SetCompare1
 3271              		.thumb
 3272              		.thumb_func
 3274              	TIM_SetCompare1:
 3275              	.LFB97:
2293:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 3276              		.loc 1 2293 0
 3277              		.cfi_startproc
 3278              		@ args = 0, pretend = 0, frame = 0
 3279              		@ frame_needed = 0, uses_anonymous_args = 0
 3280              		@ link register save eliminated.
 3281              	.LVL434:
2297:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 3282              		.loc 1 2297 0
 3283 0000 8186     		strh	r1, [r0, #52]	@ movhi
 3284 0002 7047     		bx	lr
 3285              		.cfi_endproc
 3286              	.LFE97:
 3288              		.section	.text.TIM_SetCompare2,"ax",%progbits
 3289              		.align	2
 3290              		.global	TIM_SetCompare2
 3291              		.thumb
 3292              		.thumb_func
 3294              	TIM_SetCompare2:
 3295              	.LFB98:
2307:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 3296              		.loc 1 2307 0
 3297              		.cfi_startproc
 3298              		@ args = 0, pretend = 0, frame = 0
 3299              		@ frame_needed = 0, uses_anonymous_args = 0
 3300              		@ link register save eliminated.
 3301              	.LVL435:
2311:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 3302              		.loc 1 2311 0
 3303 0000 0187     		strh	r1, [r0, #56]	@ movhi
 3304 0002 7047     		bx	lr
 3305              		.cfi_endproc
 3306              	.LFE98:
 3308              		.section	.text.TIM_SetCompare3,"ax",%progbits
 3309              		.align	2
 3310              		.global	TIM_SetCompare3
 3311              		.thumb
 3312              		.thumb_func
 3314              	TIM_SetCompare3:
 3315              	.LFB99:
2321:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 3316              		.loc 1 2321 0
 3317              		.cfi_startproc
 3318              		@ args = 0, pretend = 0, frame = 0
 3319              		@ frame_needed = 0, uses_anonymous_args = 0
 3320              		@ link register save eliminated.
 3321              	.LVL436:
2325:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 3322              		.loc 1 2325 0
 3323 0000 8187     		strh	r1, [r0, #60]	@ movhi
 3324 0002 7047     		bx	lr
 3325              		.cfi_endproc
 3326              	.LFE99:
 3328              		.section	.text.TIM_SetCompare4,"ax",%progbits
 3329              		.align	2
 3330              		.global	TIM_SetCompare4
 3331              		.thumb
 3332              		.thumb_func
 3334              	TIM_SetCompare4:
 3335              	.LFB100:
2335:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 3336              		.loc 1 2335 0
 3337              		.cfi_startproc
 3338              		@ args = 0, pretend = 0, frame = 0
 3339              		@ frame_needed = 0, uses_anonymous_args = 0
 3340              		@ link register save eliminated.
 3341              	.LVL437:
2339:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 3342              		.loc 1 2339 0
 3343 0000 A0F84010 		strh	r1, [r0, #64]	@ movhi
 3344 0004 7047     		bx	lr
 3345              		.cfi_endproc
 3346              	.LFE100:
 3348 0006 00BF     		.section	.text.TIM_SetIC1Prescaler,"ax",%progbits
 3349              		.align	2
 3350              		.global	TIM_SetIC1Prescaler
 3351              		.thumb
 3352              		.thumb_func
 3354              	TIM_SetIC1Prescaler:
 3355              	.LFB101:
2354:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 3356              		.loc 1 2354 0
 3357              		.cfi_startproc
 3358              		@ args = 0, pretend = 0, frame = 0
 3359              		@ frame_needed = 0, uses_anonymous_args = 0
 3360              		@ link register save eliminated.
 3361              	.LVL438:
2359:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the IC1PSC value */
 3362              		.loc 1 2359 0
 3363 0000 038B     		ldrh	r3, [r0, #24]
 3364 0002 23F00C03 		bic	r3, r3, #12
 3365 0006 1B04     		lsls	r3, r3, #16
 3366 0008 1B0C     		lsrs	r3, r3, #16
 3367 000a 0383     		strh	r3, [r0, #24]	@ movhi
2361:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 3368              		.loc 1 2361 0
 3369 000c 038B     		ldrh	r3, [r0, #24]
 3370 000e 9BB2     		uxth	r3, r3
 3371 0010 1943     		orrs	r1, r1, r3
 3372              	.LVL439:
 3373 0012 0183     		strh	r1, [r0, #24]	@ movhi
 3374 0014 7047     		bx	lr
 3375              		.cfi_endproc
 3376              	.LFE101:
 3378 0016 00BF     		.section	.text.TIM_SetIC2Prescaler,"ax",%progbits
 3379              		.align	2
 3380              		.global	TIM_SetIC2Prescaler
 3381              		.thumb
 3382              		.thumb_func
 3384              	TIM_SetIC2Prescaler:
 3385              	.LFB102:
2376:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 3386              		.loc 1 2376 0
 3387              		.cfi_startproc
 3388              		@ args = 0, pretend = 0, frame = 0
 3389              		@ frame_needed = 0, uses_anonymous_args = 0
 3390              		@ link register save eliminated.
 3391              	.LVL440:
2381:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the IC2PSC value */
 3392              		.loc 1 2381 0
 3393 0000 038B     		ldrh	r3, [r0, #24]
 3394 0002 23F44063 		bic	r3, r3, #3072
 3395 0006 1B04     		lsls	r3, r3, #16
 3396 0008 1B0C     		lsrs	r3, r3, #16
 3397 000a 0383     		strh	r3, [r0, #24]	@ movhi
2383:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 3398              		.loc 1 2383 0
 3399 000c 038B     		ldrh	r3, [r0, #24]
 3400 000e 9BB2     		uxth	r3, r3
 3401 0010 43EA0121 		orr	r1, r3, r1, lsl #8
 3402              	.LVL441:
 3403 0014 89B2     		uxth	r1, r1
 3404 0016 0183     		strh	r1, [r0, #24]	@ movhi
 3405 0018 7047     		bx	lr
 3406              		.cfi_endproc
 3407              	.LFE102:
 3409 001a 00BF     		.section	.text.TIM_PWMIConfig,"ax",%progbits
 3410              		.align	2
 3411              		.global	TIM_PWMIConfig
 3412              		.thumb
 3413              		.thumb_func
 3415              	TIM_PWMIConfig:
 3416              	.LFB36:
 655:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
 3417              		.loc 1 655 0
 3418              		.cfi_startproc
 3419              		@ args = 0, pretend = 0, frame = 0
 3420              		@ frame_needed = 0, uses_anonymous_args = 0
 3421              	.LVL442:
 3422 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3423              	.LCFI26:
 3424              		.cfi_def_cfa_offset 24
 3425              		.cfi_offset 3, -24
 3426              		.cfi_offset 4, -20
 3427              		.cfi_offset 5, -16
 3428              		.cfi_offset 6, -12
 3429              		.cfi_offset 7, -8
 3430              		.cfi_offset 14, -4
 3431 0002 0546     		mov	r5, r0
 3432 0004 0C46     		mov	r4, r1
 3433              	.LVL443:
 661:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 3434              		.loc 1 661 0
 3435 0006 4988     		ldrh	r1, [r1, #2]
 3436              	.LVL444:
 667:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 3437              		.loc 1 667 0
 3438 0008 0029     		cmp	r1, #0
 3439 000a 0CBF     		ite	eq
 3440 000c 0227     		moveq	r7, #2
 3441 000e 0027     		movne	r7, #0
 3442              	.LVL445:
 670:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 3443              		.loc 1 670 0
 3444 0010 A288     		ldrh	r2, [r4, #4]
 676:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 3445              		.loc 1 676 0
 3446 0012 012A     		cmp	r2, #1
 3447 0014 0CBF     		ite	eq
 3448 0016 0226     		moveq	r6, #2
 3449 0018 0126     		movne	r6, #1
 3450              	.LVL446:
 678:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 3451              		.loc 1 678 0
 3452 001a 2388     		ldrh	r3, [r4]
 3453 001c 8BB9     		cbnz	r3, .L172
 681:.\StdPeriphLib\src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3454              		.loc 1 681 0
 3455 001e 2389     		ldrh	r3, [r4, #8]
 3456 0020 FFF7FEFF 		bl	TI1_Config
 3457              	.LVL447:
 684:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* TI2 Configuration */
 3458              		.loc 1 684 0
 3459 0024 2846     		mov	r0, r5
 3460 0026 E188     		ldrh	r1, [r4, #6]
 3461 0028 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 3462              	.LVL448:
 686:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 3463              		.loc 1 686 0
 3464 002c 2846     		mov	r0, r5
 3465 002e 3946     		mov	r1, r7
 3466 0030 3246     		mov	r2, r6
 3467 0032 2389     		ldrh	r3, [r4, #8]
 3468 0034 FFF7FEFF 		bl	TI2_Config
 3469              	.LVL449:
 688:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 3470              		.loc 1 688 0
 3471 0038 2846     		mov	r0, r5
 3472 003a E188     		ldrh	r1, [r4, #6]
 3473 003c FFF7FEFF 		bl	TIM_SetIC2Prescaler
 3474              	.LVL450:
 3475 0040 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3476              	.LVL451:
 3477              	.L172:
 693:.\StdPeriphLib\src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 3478              		.loc 1 693 0
 3479 0042 2389     		ldrh	r3, [r4, #8]
 3480 0044 FFF7FEFF 		bl	TI2_Config
 3481              	.LVL452:
 696:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* TI1 Configuration */
 3482              		.loc 1 696 0
 3483 0048 2846     		mov	r0, r5
 3484 004a E188     		ldrh	r1, [r4, #6]
 3485 004c FFF7FEFF 		bl	TIM_SetIC2Prescaler
 3486              	.LVL453:
 698:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Set the Input Capture Prescaler value */
 3487              		.loc 1 698 0
 3488 0050 2846     		mov	r0, r5
 3489 0052 3946     		mov	r1, r7
 3490 0054 3246     		mov	r2, r6
 3491 0056 2389     		ldrh	r3, [r4, #8]
 3492 0058 FFF7FEFF 		bl	TI1_Config
 3493              	.LVL454:
 700:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 3494              		.loc 1 700 0
 3495 005c 2846     		mov	r0, r5
 3496 005e E188     		ldrh	r1, [r4, #6]
 3497 0060 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 3498              	.LVL455:
 3499 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3500              		.cfi_endproc
 3501              	.LFE36:
 3503 0066 00BF     		.section	.text.TIM_SetIC3Prescaler,"ax",%progbits
 3504              		.align	2
 3505              		.global	TIM_SetIC3Prescaler
 3506              		.thumb
 3507              		.thumb_func
 3509              	TIM_SetIC3Prescaler:
 3510              	.LFB103:
2398:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 3511              		.loc 1 2398 0
 3512              		.cfi_startproc
 3513              		@ args = 0, pretend = 0, frame = 0
 3514              		@ frame_needed = 0, uses_anonymous_args = 0
 3515              		@ link register save eliminated.
 3516              	.LVL456:
2403:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the IC3PSC value */
 3517              		.loc 1 2403 0
 3518 0000 838B     		ldrh	r3, [r0, #28]
 3519 0002 23F00C03 		bic	r3, r3, #12
 3520 0006 1B04     		lsls	r3, r3, #16
 3521 0008 1B0C     		lsrs	r3, r3, #16
 3522 000a 8383     		strh	r3, [r0, #28]	@ movhi
2405:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 3523              		.loc 1 2405 0
 3524 000c 838B     		ldrh	r3, [r0, #28]
 3525 000e 9BB2     		uxth	r3, r3
 3526 0010 1943     		orrs	r1, r1, r3
 3527              	.LVL457:
 3528 0012 8183     		strh	r1, [r0, #28]	@ movhi
 3529 0014 7047     		bx	lr
 3530              		.cfi_endproc
 3531              	.LFE103:
 3533 0016 00BF     		.section	.text.TIM_SetIC4Prescaler,"ax",%progbits
 3534              		.align	2
 3535              		.global	TIM_SetIC4Prescaler
 3536              		.thumb
 3537              		.thumb_func
 3539              	TIM_SetIC4Prescaler:
 3540              	.LFB104:
2420:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 3541              		.loc 1 2420 0
 3542              		.cfi_startproc
 3543              		@ args = 0, pretend = 0, frame = 0
 3544              		@ frame_needed = 0, uses_anonymous_args = 0
 3545              		@ link register save eliminated.
 3546              	.LVL458:
2425:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the IC4PSC value */
 3547              		.loc 1 2425 0
 3548 0000 838B     		ldrh	r3, [r0, #28]
 3549 0002 23F44063 		bic	r3, r3, #3072
 3550 0006 1B04     		lsls	r3, r3, #16
 3551 0008 1B0C     		lsrs	r3, r3, #16
 3552 000a 8383     		strh	r3, [r0, #28]	@ movhi
2427:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 3553              		.loc 1 2427 0
 3554 000c 838B     		ldrh	r3, [r0, #28]
 3555 000e 9BB2     		uxth	r3, r3
 3556 0010 43EA0121 		orr	r1, r3, r1, lsl #8
 3557              	.LVL459:
 3558 0014 89B2     		uxth	r1, r1
 3559 0016 8183     		strh	r1, [r0, #28]	@ movhi
 3560 0018 7047     		bx	lr
 3561              		.cfi_endproc
 3562              	.LFE104:
 3564 001a 00BF     		.section	.text.TIM_ICInit,"ax",%progbits
 3565              		.align	2
 3566              		.global	TIM_ICInit
 3567              		.thumb
 3568              		.thumb_func
 3570              	TIM_ICInit:
 3571              	.LFB35:
 588:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 3572              		.loc 1 588 0
 3573              		.cfi_startproc
 3574              		@ args = 0, pretend = 0, frame = 0
 3575              		@ frame_needed = 0, uses_anonymous_args = 0
 3576              	.LVL460:
 3577 0000 70B5     		push	{r4, r5, r6, lr}
 3578              	.LCFI27:
 3579              		.cfi_def_cfa_offset 16
 3580              		.cfi_offset 4, -16
 3581              		.cfi_offset 5, -12
 3582              		.cfi_offset 6, -8
 3583              		.cfi_offset 14, -4
 3584 0002 0446     		mov	r4, r0
 3585 0004 0D46     		mov	r5, r1
 604:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 3586              		.loc 1 604 0
 3587 0006 0B88     		ldrh	r3, [r1]
 3588 0008 4BB9     		cbnz	r3, .L180
 608:.\StdPeriphLib\src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3589              		.loc 1 608 0
 3590 000a 4988     		ldrh	r1, [r1, #2]
 3591              	.LVL461:
 3592 000c AA88     		ldrh	r2, [r5, #4]
 3593 000e 2B89     		ldrh	r3, [r5, #8]
 3594 0010 FFF7FEFF 		bl	TI1_Config
 3595              	.LVL462:
 612:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 3596              		.loc 1 612 0
 3597 0014 2046     		mov	r0, r4
 3598 0016 E988     		ldrh	r1, [r5, #6]
 3599 0018 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 3600              	.LVL463:
 3601 001c 70BD     		pop	{r4, r5, r6, pc}
 3602              	.LVL464:
 3603              	.L180:
 614:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 3604              		.loc 1 614 0
 3605 001e 042B     		cmp	r3, #4
 3606 0020 09D1     		bne	.L182
 618:.\StdPeriphLib\src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3607              		.loc 1 618 0
 3608 0022 4988     		ldrh	r1, [r1, #2]
 3609              	.LVL465:
 3610 0024 AA88     		ldrh	r2, [r5, #4]
 3611 0026 2B89     		ldrh	r3, [r5, #8]
 3612 0028 FFF7FEFF 		bl	TI2_Config
 3613              	.LVL466:
 622:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 3614              		.loc 1 622 0
 3615 002c 2046     		mov	r0, r4
 3616 002e E988     		ldrh	r1, [r5, #6]
 3617 0030 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 3618              	.LVL467:
 3619 0034 70BD     		pop	{r4, r5, r6, pc}
 3620              	.LVL468:
 3621              	.L182:
 624:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 3622              		.loc 1 624 0
 3623 0036 082B     		cmp	r3, #8
 3624 0038 3BD1     		bne	.L183
 628:.\StdPeriphLib\src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3625              		.loc 1 628 0
 3626 003a 4888     		ldrh	r0, [r1, #2]
 3627              	.LVL469:
 3628 003c 8E88     		ldrh	r6, [r1, #4]
 3629 003e 0B89     		ldrh	r3, [r1, #8]
 3630              	.LVL470:
 3631              	.LBB14:
 3632              	.LBB15:
2780:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2781:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2782:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configure the TI3 as Input.
2783:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2784:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
2785:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2786:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
2787:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
2788:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
2789:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2790:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 3 is selected to be connected to IC3.
2791:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 3 is selected to be connected to IC4.
2792:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 3 is selected to be connected to TRC.
2793:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
2794:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
2795:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
2796:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2797:.\StdPeriphLib\src/stm32f10x_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
2798:.\StdPeriphLib\src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter)
2799:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2800:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
2801:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Disable the Channel 3: Reset the CC3E Bit */
2802:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC3E);
 3633              		.loc 1 2802 0
 3634 0040 228C     		ldrh	r2, [r4, #32]
 3635 0042 22F48072 		bic	r2, r2, #256
 3636 0046 1204     		lsls	r2, r2, #16
 3637 0048 120C     		lsrs	r2, r2, #16
 3638 004a 2284     		strh	r2, [r4, #32]	@ movhi
2803:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 3639              		.loc 1 2803 0
 3640 004c A28B     		ldrh	r2, [r4, #28]
 3641 004e 92B2     		uxth	r2, r2
 3642              	.LVL471:
2804:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 3643              		.loc 1 2804 0
 3644 0050 218C     		ldrh	r1, [r4, #32]
 3645              	.LVL472:
 3646 0052 89B2     		uxth	r1, r1
 3647              	.LVL473:
2805:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 8);
2806:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Select the Input and set the filter */
2807:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)(((uint16_t)~((uint16_t)TIM_CCMR2_CC3S)) & ((uint16_t)~((uint16_t)TIM_CCMR2
 3648              		.loc 1 2807 0
 3649 0054 22F0F302 		bic	r2, r2, #243
 3650              	.LVL474:
 3651 0058 42EA0313 		orr	r3, r2, r3, lsl #4
 3652              	.LVL475:
 3653 005c 9BB2     		uxth	r3, r3
2808:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 3654              		.loc 1 2808 0
 3655 005e 3343     		orrs	r3, r3, r6
 3656              	.LVL476:
2809:.\StdPeriphLib\src/stm32f10x_tim.c ****     
2810:.\StdPeriphLib\src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
 3657              		.loc 1 2810 0
 3658 0060 344E     		ldr	r6, .L191
 3659              	.LVL477:
 3660 0062 B442     		cmp	r4, r6
 3661 0064 11D0     		beq	.L184
 3662 0066 344A     		ldr	r2, .L191+4
 3663 0068 9442     		cmp	r4, r2
 3664 006a 0ED0     		beq	.L184
 3665 006c B4F1804F 		cmp	r4, #1073741824
 3666 0070 0BD0     		beq	.L184
 3667 0072 A2F59832 		sub	r2, r2, #77824
 3668 0076 9442     		cmp	r4, r2
 3669 0078 07D0     		beq	.L184
 3670 007a 02F58062 		add	r2, r2, #1024
 3671 007e 9442     		cmp	r4, r2
 3672 0080 03D0     		beq	.L184
2811:.\StdPeriphLib\src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
 3673              		.loc 1 2811 0
 3674 0082 02F58062 		add	r2, r2, #1024
 3675 0086 9442     		cmp	r4, r2
 3676 0088 07D1     		bne	.L185
 3677              	.L184:
 3678              	.LVL478:
2812:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
2813:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC3E Bit */
2814:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC3P));
 3679              		.loc 1 2814 0
 3680 008a 21F40071 		bic	r1, r1, #512
 3681              	.LVL479:
2815:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC3E);
 3682              		.loc 1 2815 0
 3683 008e 41EA0022 		orr	r2, r1, r0, lsl #8
 3684 0092 92B2     		uxth	r2, r2
 3685 0094 42F48072 		orr	r2, r2, #256
 3686              	.LVL480:
 3687 0098 04E0     		b	.L186
 3688              	.LVL481:
 3689              	.L185:
2816:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
2817:.\StdPeriphLib\src/stm32f10x_tim.c ****   else
2818:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
2819:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC3E Bit */
2820:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC3P | TIM_CCER_CC3NP));
 3690              		.loc 1 2820 0
 3691 009a 21F42061 		bic	r1, r1, #2560
 3692              	.LVL482:
 3693 009e 40F48072 		orr	r2, r0, #256
2821:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC3E);
 3694              		.loc 1 2821 0
 3695 00a2 0A43     		orrs	r2, r2, r1
 3696              	.LVL483:
 3697              	.L186:
2822:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
2823:.\StdPeriphLib\src/stm32f10x_tim.c ****   
2824:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
2825:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 3698              		.loc 1 2825 0
 3699 00a4 A383     		strh	r3, [r4, #28]	@ movhi
2826:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 3700              		.loc 1 2826 0
 3701 00a6 2284     		strh	r2, [r4, #32]	@ movhi
 3702              	.LBE15:
 3703              	.LBE14:
 632:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 3704              		.loc 1 632 0
 3705 00a8 2046     		mov	r0, r4
 3706              	.LVL484:
 3707 00aa E988     		ldrh	r1, [r5, #6]
 3708 00ac FFF7FEFF 		bl	TIM_SetIC3Prescaler
 3709              	.LVL485:
 3710 00b0 70BD     		pop	{r4, r5, r6, pc}
 3711              	.LVL486:
 3712              	.L183:
 638:.\StdPeriphLib\src/stm32f10x_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 3713              		.loc 1 638 0
 3714 00b2 4E88     		ldrh	r6, [r1, #2]
 3715 00b4 8B88     		ldrh	r3, [r1, #4]
 3716 00b6 0889     		ldrh	r0, [r1, #8]
 3717              	.LVL487:
 3718              	.LBB16:
 3719              	.LBB17:
2827:.\StdPeriphLib\src/stm32f10x_tim.c **** }
2828:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2829:.\StdPeriphLib\src/stm32f10x_tim.c **** /**
2830:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @brief  Configure the TI4 as Input.
2831:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2832:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
2833:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2834:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Rising
2835:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICPolarity_Falling
2836:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
2837:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter can be one of the following values:
2838:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_DirectTI: TIM Input 4 is selected to be connected to IC4.
2839:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_IndirectTI: TIM Input 4 is selected to be connected to IC3.
2840:.\StdPeriphLib\src/stm32f10x_tim.c ****   *     @arg TIM_ICSelection_TRC: TIM Input 4 is selected to be connected to TRC.
2841:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
2842:.\StdPeriphLib\src/stm32f10x_tim.c ****   *   This parameter must be a value between 0x00 and 0x0F.
2843:.\StdPeriphLib\src/stm32f10x_tim.c ****   * @retval None
2844:.\StdPeriphLib\src/stm32f10x_tim.c ****   */
2845:.\StdPeriphLib\src/stm32f10x_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
2846:.\StdPeriphLib\src/stm32f10x_tim.c ****                        uint16_t TIM_ICFilter)
2847:.\StdPeriphLib\src/stm32f10x_tim.c **** {
2848:.\StdPeriphLib\src/stm32f10x_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
2849:.\StdPeriphLib\src/stm32f10x_tim.c **** 
2850:.\StdPeriphLib\src/stm32f10x_tim.c ****    /* Disable the Channel 4: Reset the CC4E Bit */
2851:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER &= (uint16_t)~((uint16_t)TIM_CCER_CC4E);
 3720              		.loc 1 2851 0
 3721 00b8 228C     		ldrh	r2, [r4, #32]
 3722 00ba 22F48052 		bic	r2, r2, #4096
 3723 00be 1204     		lsls	r2, r2, #16
 3724 00c0 120C     		lsrs	r2, r2, #16
 3725 00c2 2284     		strh	r2, [r4, #32]	@ movhi
2852:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 3726              		.loc 1 2852 0
 3727 00c4 A18B     		ldrh	r1, [r4, #28]
 3728              	.LVL488:
2853:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccer = TIMx->CCER;
 3729              		.loc 1 2853 0
 3730 00c6 228C     		ldrh	r2, [r4, #32]
 3731 00c8 92B2     		uxth	r2, r2
 3732              	.LVL489:
2854:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 12);
2855:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Select the Input and set the filter */
2856:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 &= (uint16_t)((uint16_t)(~(uint16_t)TIM_CCMR2_CC4S) & ((uint16_t)~((uint16_t)TIM_CCMR2_I
 3733              		.loc 1 2856 0
 3734 00ca 21F44071 		bic	r1, r1, #768
 3735              	.LVL490:
 3736 00ce 0905     		lsls	r1, r1, #20
 3737 00d0 090D     		lsrs	r1, r1, #20
 3738              	.LVL491:
2857:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection << 8);
 3739              		.loc 1 2857 0
 3740 00d2 41EA0323 		orr	r3, r1, r3, lsl #8
 3741              	.LVL492:
2858:.\StdPeriphLib\src/stm32f10x_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICFilter << 12);
 3742              		.loc 1 2858 0
 3743 00d6 43EA0033 		orr	r3, r3, r0, lsl #12
 3744              	.LVL493:
 3745 00da 9BB2     		uxth	r3, r3
 3746              	.LVL494:
2859:.\StdPeriphLib\src/stm32f10x_tim.c ****   
2860:.\StdPeriphLib\src/stm32f10x_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8) || (TIMx == TIM2) || (TIMx == TIM3) ||
 3747              		.loc 1 2860 0
 3748 00dc 1549     		ldr	r1, .L191
 3749 00de 8C42     		cmp	r4, r1
 3750 00e0 12D0     		beq	.L187
 3751 00e2 01F50061 		add	r1, r1, #2048
 3752 00e6 8C42     		cmp	r4, r1
 3753 00e8 0ED0     		beq	.L187
 3754 00ea B4F1804F 		cmp	r4, #1073741824
 3755 00ee 0BD0     		beq	.L187
 3756 00f0 A1F59831 		sub	r1, r1, #77824
 3757 00f4 8C42     		cmp	r4, r1
 3758 00f6 07D0     		beq	.L187
 3759 00f8 01F58061 		add	r1, r1, #1024
 3760 00fc 8C42     		cmp	r4, r1
 3761 00fe 03D0     		beq	.L187
2861:.\StdPeriphLib\src/stm32f10x_tim.c ****      (TIMx == TIM4) ||(TIMx == TIM5))
 3762              		.loc 1 2861 0
 3763 0100 01F58061 		add	r1, r1, #1024
 3764 0104 8C42     		cmp	r4, r1
 3765 0106 07D1     		bne	.L188
 3766              	.L187:
 3767              	.LVL495:
2862:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
2863:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC4E Bit */
2864:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC4P));
 3768              		.loc 1 2864 0
 3769 0108 22F40050 		bic	r0, r2, #8192
 3770              	.LVL496:
2865:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC4E);
 3771              		.loc 1 2865 0
 3772 010c 40EA0632 		orr	r2, r0, r6, lsl #12
 3773              	.LVL497:
 3774 0110 92B2     		uxth	r2, r2
 3775 0112 42F48052 		orr	r2, r2, #4096
 3776              	.LVL498:
 3777 0116 06E0     		b	.L189
 3778              	.LVL499:
 3779              	.L188:
2866:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
2867:.\StdPeriphLib\src/stm32f10x_tim.c ****   else
2868:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
2869:.\StdPeriphLib\src/stm32f10x_tim.c ****     /* Select the Polarity and set the CC4E Bit */
2870:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer &= (uint16_t)~((uint16_t)(TIM_CCER_CC3P | TIM_CCER_CC4NP));
 3780              		.loc 1 2870 0
 3781 0118 22F40072 		bic	r2, r2, #512
 3782              	.LVL500:
 3783 011c 5204     		lsls	r2, r2, #17
 3784 011e 520C     		lsrs	r2, r2, #17
 3785              	.LVL501:
 3786 0120 46F48051 		orr	r1, r6, #4096
2871:.\StdPeriphLib\src/stm32f10x_tim.c ****     tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC4E);
 3787              		.loc 1 2871 0
 3788 0124 0A43     		orrs	r2, r2, r1
 3789              	.LVL502:
 3790              	.L189:
2872:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
2873:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
2874:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 3791              		.loc 1 2874 0
 3792 0126 A383     		strh	r3, [r4, #28]	@ movhi
2875:.\StdPeriphLib\src/stm32f10x_tim.c ****   TIMx->CCER = tmpccer;
 3793              		.loc 1 2875 0
 3794 0128 2284     		strh	r2, [r4, #32]	@ movhi
 3795              	.LBE17:
 3796              	.LBE16:
 642:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 3797              		.loc 1 642 0
 3798 012a 2046     		mov	r0, r4
 3799 012c E988     		ldrh	r1, [r5, #6]
 3800 012e FFF7FEFF 		bl	TIM_SetIC4Prescaler
 3801              	.LVL503:
 3802 0132 70BD     		pop	{r4, r5, r6, pc}
 3803              	.LVL504:
 3804              	.L192:
 3805              		.align	2
 3806              	.L191:
 3807 0134 002C0140 		.word	1073818624
 3808 0138 00340140 		.word	1073820672
 3809              		.cfi_endproc
 3810              	.LFE35:
 3812              		.section	.text.TIM_SetClockDivision,"ax",%progbits
 3813              		.align	2
 3814              		.global	TIM_SetClockDivision
 3815              		.thumb
 3816              		.thumb_func
 3818              	TIM_SetClockDivision:
 3819              	.LFB105:
2442:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 3820              		.loc 1 2442 0
 3821              		.cfi_startproc
 3822              		@ args = 0, pretend = 0, frame = 0
 3823              		@ frame_needed = 0, uses_anonymous_args = 0
 3824              		@ link register save eliminated.
 3825              	.LVL505:
2447:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Set the CKD value */
 3826              		.loc 1 2447 0
 3827 0000 0388     		ldrh	r3, [r0]
 3828 0002 23F44073 		bic	r3, r3, #768
 3829 0006 1B04     		lsls	r3, r3, #16
 3830 0008 1B0C     		lsrs	r3, r3, #16
 3831 000a 0380     		strh	r3, [r0]	@ movhi
2449:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 3832              		.loc 1 2449 0
 3833 000c 0388     		ldrh	r3, [r0]
 3834 000e 9BB2     		uxth	r3, r3
 3835 0010 1943     		orrs	r1, r1, r3
 3836              	.LVL506:
 3837 0012 0180     		strh	r1, [r0]	@ movhi
 3838 0014 7047     		bx	lr
 3839              		.cfi_endproc
 3840              	.LFE105:
 3842 0016 00BF     		.section	.text.TIM_GetCapture1,"ax",%progbits
 3843              		.align	2
 3844              		.global	TIM_GetCapture1
 3845              		.thumb
 3846              		.thumb_func
 3848              	TIM_GetCapture1:
 3849              	.LFB106:
2458:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 3850              		.loc 1 2458 0
 3851              		.cfi_startproc
 3852              		@ args = 0, pretend = 0, frame = 0
 3853              		@ frame_needed = 0, uses_anonymous_args = 0
 3854              		@ link register save eliminated.
 3855              	.LVL507:
2462:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 3856              		.loc 1 2462 0
 3857 0000 808E     		ldrh	r0, [r0, #52]
 3858              	.LVL508:
2463:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 3859              		.loc 1 2463 0
 3860 0002 80B2     		uxth	r0, r0
 3861 0004 7047     		bx	lr
 3862              		.cfi_endproc
 3863              	.LFE106:
 3865 0006 00BF     		.section	.text.TIM_GetCapture2,"ax",%progbits
 3866              		.align	2
 3867              		.global	TIM_GetCapture2
 3868              		.thumb
 3869              		.thumb_func
 3871              	TIM_GetCapture2:
 3872              	.LFB107:
2471:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 3873              		.loc 1 2471 0
 3874              		.cfi_startproc
 3875              		@ args = 0, pretend = 0, frame = 0
 3876              		@ frame_needed = 0, uses_anonymous_args = 0
 3877              		@ link register save eliminated.
 3878              	.LVL509:
2475:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 3879              		.loc 1 2475 0
 3880 0000 008F     		ldrh	r0, [r0, #56]
 3881              	.LVL510:
2476:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 3882              		.loc 1 2476 0
 3883 0002 80B2     		uxth	r0, r0
 3884 0004 7047     		bx	lr
 3885              		.cfi_endproc
 3886              	.LFE107:
 3888 0006 00BF     		.section	.text.TIM_GetCapture3,"ax",%progbits
 3889              		.align	2
 3890              		.global	TIM_GetCapture3
 3891              		.thumb
 3892              		.thumb_func
 3894              	TIM_GetCapture3:
 3895              	.LFB108:
2484:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 3896              		.loc 1 2484 0
 3897              		.cfi_startproc
 3898              		@ args = 0, pretend = 0, frame = 0
 3899              		@ frame_needed = 0, uses_anonymous_args = 0
 3900              		@ link register save eliminated.
 3901              	.LVL511:
2488:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 3902              		.loc 1 2488 0
 3903 0000 808F     		ldrh	r0, [r0, #60]
 3904              	.LVL512:
2489:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 3905              		.loc 1 2489 0
 3906 0002 80B2     		uxth	r0, r0
 3907 0004 7047     		bx	lr
 3908              		.cfi_endproc
 3909              	.LFE108:
 3911 0006 00BF     		.section	.text.TIM_GetCapture4,"ax",%progbits
 3912              		.align	2
 3913              		.global	TIM_GetCapture4
 3914              		.thumb
 3915              		.thumb_func
 3917              	TIM_GetCapture4:
 3918              	.LFB109:
2497:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 3919              		.loc 1 2497 0
 3920              		.cfi_startproc
 3921              		@ args = 0, pretend = 0, frame = 0
 3922              		@ frame_needed = 0, uses_anonymous_args = 0
 3923              		@ link register save eliminated.
 3924              	.LVL513:
2501:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 3925              		.loc 1 2501 0
 3926 0000 B0F84000 		ldrh	r0, [r0, #64]
 3927              	.LVL514:
2502:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 3928              		.loc 1 2502 0
 3929 0004 80B2     		uxth	r0, r0
 3930 0006 7047     		bx	lr
 3931              		.cfi_endproc
 3932              	.LFE109:
 3934              		.section	.text.TIM_GetCounter,"ax",%progbits
 3935              		.align	2
 3936              		.global	TIM_GetCounter
 3937              		.thumb
 3938              		.thumb_func
 3940              	TIM_GetCounter:
 3941              	.LFB110:
2510:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 3942              		.loc 1 2510 0
 3943              		.cfi_startproc
 3944              		@ args = 0, pretend = 0, frame = 0
 3945              		@ frame_needed = 0, uses_anonymous_args = 0
 3946              		@ link register save eliminated.
 3947              	.LVL515:
2514:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 3948              		.loc 1 2514 0
 3949 0000 808C     		ldrh	r0, [r0, #36]
 3950              	.LVL516:
2515:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 3951              		.loc 1 2515 0
 3952 0002 80B2     		uxth	r0, r0
 3953 0004 7047     		bx	lr
 3954              		.cfi_endproc
 3955              	.LFE110:
 3957 0006 00BF     		.section	.text.TIM_GetPrescaler,"ax",%progbits
 3958              		.align	2
 3959              		.global	TIM_GetPrescaler
 3960              		.thumb
 3961              		.thumb_func
 3963              	TIM_GetPrescaler:
 3964              	.LFB111:
2523:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 3965              		.loc 1 2523 0
 3966              		.cfi_startproc
 3967              		@ args = 0, pretend = 0, frame = 0
 3968              		@ frame_needed = 0, uses_anonymous_args = 0
 3969              		@ link register save eliminated.
 3970              	.LVL517:
2527:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 3971              		.loc 1 2527 0
 3972 0000 008D     		ldrh	r0, [r0, #40]
 3973              	.LVL518:
2528:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 3974              		.loc 1 2528 0
 3975 0002 80B2     		uxth	r0, r0
 3976 0004 7047     		bx	lr
 3977              		.cfi_endproc
 3978              	.LFE111:
 3980 0006 00BF     		.section	.text.TIM_GetFlagStatus,"ax",%progbits
 3981              		.align	2
 3982              		.global	TIM_GetFlagStatus
 3983              		.thumb
 3984              		.thumb_func
 3986              	TIM_GetFlagStatus:
 3987              	.LFB112:
2557:.\StdPeriphLib\src/stm32f10x_tim.c ****   ITStatus bitstatus = RESET;  
 3988              		.loc 1 2557 0
 3989              		.cfi_startproc
 3990              		@ args = 0, pretend = 0, frame = 0
 3991              		@ frame_needed = 0, uses_anonymous_args = 0
 3992              		@ link register save eliminated.
 3993              	.LVL519:
2563:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 3994              		.loc 1 2563 0
 3995 0000 038A     		ldrh	r3, [r0, #16]
 3996              	.LVL520:
 3997 0002 1942     		tst	r1, r3
2572:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 3998              		.loc 1 2572 0
 3999 0004 14BF     		ite	ne
 4000 0006 0120     		movne	r0, #1
 4001              	.LVL521:
 4002 0008 0020     		moveq	r0, #0
 4003 000a 7047     		bx	lr
 4004              		.cfi_endproc
 4005              	.LFE112:
 4007              		.section	.text.TIM_ClearFlag,"ax",%progbits
 4008              		.align	2
 4009              		.global	TIM_ClearFlag
 4010              		.thumb
 4011              		.thumb_func
 4013              	TIM_ClearFlag:
 4014              	.LFB113:
2601:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 4015              		.loc 1 2601 0
 4016              		.cfi_startproc
 4017              		@ args = 0, pretend = 0, frame = 0
 4018              		@ frame_needed = 0, uses_anonymous_args = 0
 4019              		@ link register save eliminated.
 4020              	.LVL522:
2607:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 4021              		.loc 1 2607 0
 4022 0000 C943     		mvns	r1, r1
 4023              	.LVL523:
 4024 0002 89B2     		uxth	r1, r1
 4025 0004 0182     		strh	r1, [r0, #16]	@ movhi
 4026 0006 7047     		bx	lr
 4027              		.cfi_endproc
 4028              	.LFE113:
 4030              		.section	.text.TIM_GetITStatus,"ax",%progbits
 4031              		.align	2
 4032              		.global	TIM_GetITStatus
 4033              		.thumb
 4034              		.thumb_func
 4036              	TIM_GetITStatus:
 4037              	.LFB114:
2633:.\StdPeriphLib\src/stm32f10x_tim.c ****   ITStatus bitstatus = RESET;  
 4038              		.loc 1 2633 0
 4039              		.cfi_startproc
 4040              		@ args = 0, pretend = 0, frame = 0
 4041              		@ frame_needed = 0, uses_anonymous_args = 0
 4042              		@ link register save eliminated.
 4043              	.LVL524:
2640:.\StdPeriphLib\src/stm32f10x_tim.c ****   
 4044              		.loc 1 2640 0
 4045 0000 028A     		ldrh	r2, [r0, #16]
 4046              	.LVL525:
2642:.\StdPeriphLib\src/stm32f10x_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
 4047              		.loc 1 2642 0
 4048 0002 8389     		ldrh	r3, [r0, #12]
 4049 0004 9BB2     		uxth	r3, r3
 4050              	.LVL526:
2643:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 4051              		.loc 1 2643 0
 4052 0006 1142     		tst	r1, r2
 4053 0008 04D0     		beq	.L204
2643:.\StdPeriphLib\src/stm32f10x_tim.c ****   {
 4054              		.loc 1 2643 0 is_stmt 0 discriminator 1
 4055 000a 1942     		tst	r1, r3
2645:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 4056              		.loc 1 2645 0 is_stmt 1 discriminator 1
 4057 000c 14BF     		ite	ne
 4058 000e 0120     		movne	r0, #1
 4059              	.LVL527:
 4060 0010 0020     		moveq	r0, #0
 4061 0012 7047     		bx	lr
 4062              	.LVL528:
 4063              	.L204:
2649:.\StdPeriphLib\src/stm32f10x_tim.c ****   }
 4064              		.loc 1 2649 0
 4065 0014 0020     		movs	r0, #0
 4066              	.LVL529:
2652:.\StdPeriphLib\src/stm32f10x_tim.c **** 
 4067              		.loc 1 2652 0
 4068 0016 7047     		bx	lr
 4069              		.cfi_endproc
 4070              	.LFE114:
 4072              		.section	.text.TIM_ClearITPendingBit,"ax",%progbits
 4073              		.align	2
 4074              		.global	TIM_ClearITPendingBit
 4075              		.thumb
 4076              		.thumb_func
 4078              	TIM_ClearITPendingBit:
 4079              	.LFB115:
2677:.\StdPeriphLib\src/stm32f10x_tim.c ****   /* Check the parameters */
 4080              		.loc 1 2677 0
 4081              		.cfi_startproc
 4082              		@ args = 0, pretend = 0, frame = 0
 4083              		@ frame_needed = 0, uses_anonymous_args = 0
 4084              		@ link register save eliminated.
 4085              	.LVL530:
2682:.\StdPeriphLib\src/stm32f10x_tim.c **** }
 4086              		.loc 1 2682 0
 4087 0000 C943     		mvns	r1, r1
 4088              	.LVL531:
 4089 0002 89B2     		uxth	r1, r1
 4090 0004 0182     		strh	r1, [r0, #16]	@ movhi
 4091 0006 7047     		bx	lr
 4092              		.cfi_endproc
 4093              	.LFE115:
 4095              		.text
 4096              	.Letext0:
 4097              		.file 2 "c:\\sublime text build 3126\\gnu tools arm embedded\\arm-none-eabi\\include\\machine\\_de
 4098              		.file 3 "c:\\sublime text build 3126\\gnu tools arm embedded\\arm-none-eabi\\include\\sys\\_stdint
 4099              		.file 4 ".\\CMSIS/stm32f10x.h"
 4100              		.file 5 ".\\StdPeriphLib\\inc/stm32f10x_tim.h"
 4101              		.file 6 ".\\StdPeriphLib\\inc/stm32f10x_rcc.h"
 4102              		.file 7 ".\\CMSIS/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_tim.c
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:19     .text.TI1_Config:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:23     .text.TI1_Config:00000000 TI1_Config
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:117    .text.TI1_Config:0000006c $d
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:123    .text.TI2_Config:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:127    .text.TI2_Config:00000000 TI2_Config
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:225    .text.TI2_Config:00000074 $d
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:230    .text.TIM_DeInit:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:235    .text.TIM_DeInit:00000000 TIM_DeInit
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:554    .text.TIM_DeInit:000001c0 $d
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:574    .text.TIM_TimeBaseInit:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:579    .text.TIM_TimeBaseInit:00000000 TIM_TimeBaseInit
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:693    .text.TIM_TimeBaseInit:00000098 $d
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:699    .text.TIM_OC1Init:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:704    .text.TIM_OC1Init:00000000 TIM_OC1Init
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:827    .text.TIM_OC1Init:00000088 $d
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:832    .text.TIM_OC2Init:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:837    .text.TIM_OC2Init:00000000 TIM_OC2Init
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:957    .text.TIM_OC2Init:00000084 $d
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:962    .text.TIM_OC3Init:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:967    .text.TIM_OC3Init:00000000 TIM_OC3Init
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1085   .text.TIM_OC3Init:00000080 $d
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1090   .text.TIM_OC4Init:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1095   .text.TIM_OC4Init:00000000 TIM_OC4Init
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1194   .text.TIM_OC4Init:00000068 $d
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1199   .text.TIM_BDTRConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1204   .text.TIM_BDTRConfig:00000000 TIM_BDTRConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1233   .text.TIM_TimeBaseStructInit:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1238   .text.TIM_TimeBaseStructInit:00000000 TIM_TimeBaseStructInit
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1263   .text.TIM_OCStructInit:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1268   .text.TIM_OCStructInit:00000000 TIM_OCStructInit
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1298   .text.TIM_ICStructInit:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1303   .text.TIM_ICStructInit:00000000 TIM_ICStructInit
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1328   .text.TIM_BDTRStructInit:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1333   .text.TIM_BDTRStructInit:00000000 TIM_BDTRStructInit
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1361   .text.TIM_Cmd:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1366   .text.TIM_Cmd:00000000 TIM_Cmd
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1394   .text.TIM_CtrlPWMOutputs:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1399   .text.TIM_CtrlPWMOutputs:00000000 TIM_CtrlPWMOutputs
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1426   .text.TIM_ITConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1431   .text.TIM_ITConfig:00000000 TIM_ITConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1461   .text.TIM_GenerateEvent:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1466   .text.TIM_GenerateEvent:00000000 TIM_GenerateEvent
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1481   .text.TIM_DMAConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1486   .text.TIM_DMAConfig:00000000 TIM_DMAConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1503   .text.TIM_DMACmd:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1508   .text.TIM_DMACmd:00000000 TIM_DMACmd
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1538   .text.TIM_InternalClockConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1543   .text.TIM_InternalClockConfig:00000000 TIM_InternalClockConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1562   .text.TIM_ITRxExternalClockConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1567   .text.TIM_ITRxExternalClockConfig:00000000 TIM_ITRxExternalClockConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1603   .text.TIM_TIxExternalClockConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1608   .text.TIM_TIxExternalClockConfig:00000000 TIM_TIxExternalClockConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1673   .text.TIM_ETRConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1678   .text.TIM_ETRConfig:00000000 TIM_ETRConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1718   .text.TIM_ETRClockMode1Config:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1723   .text.TIM_ETRClockMode1Config:00000000 TIM_ETRClockMode1Config
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1759   .text.TIM_ETRClockMode2Config:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1764   .text.TIM_ETRClockMode2Config:00000000 TIM_ETRClockMode2Config
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1790   .text.TIM_PrescalerConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1795   .text.TIM_PrescalerConfig:00000000 TIM_PrescalerConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1812   .text.TIM_CounterModeConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1817   .text.TIM_CounterModeConfig:00000000 TIM_CounterModeConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1844   .text.TIM_SelectInputTrigger:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1849   .text.TIM_SelectInputTrigger:00000000 TIM_SelectInputTrigger
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1876   .text.TIM_EncoderInterfaceConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1881   .text.TIM_EncoderInterfaceConfig:00000000 TIM_EncoderInterfaceConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1955   .text.TIM_ForcedOC1Config:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1960   .text.TIM_ForcedOC1Config:00000000 TIM_ForcedOC1Config
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1987   .text.TIM_ForcedOC2Config:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:1992   .text.TIM_ForcedOC2Config:00000000 TIM_ForcedOC2Config
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2021   .text.TIM_ForcedOC3Config:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2026   .text.TIM_ForcedOC3Config:00000000 TIM_ForcedOC3Config
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2053   .text.TIM_ForcedOC4Config:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2058   .text.TIM_ForcedOC4Config:00000000 TIM_ForcedOC4Config
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2087   .text.TIM_ARRPreloadConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2092   .text.TIM_ARRPreloadConfig:00000000 TIM_ARRPreloadConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2120   .text.TIM_SelectCOM:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2125   .text.TIM_SelectCOM:00000000 TIM_SelectCOM
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2153   .text.TIM_SelectCCDMA:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2158   .text.TIM_SelectCCDMA:00000000 TIM_SelectCCDMA
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2186   .text.TIM_CCPreloadControl:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2191   .text.TIM_CCPreloadControl:00000000 TIM_CCPreloadControl
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2219   .text.TIM_OC1PreloadConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2224   .text.TIM_OC1PreloadConfig:00000000 TIM_OC1PreloadConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2251   .text.TIM_OC2PreloadConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2256   .text.TIM_OC2PreloadConfig:00000000 TIM_OC2PreloadConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2285   .text.TIM_OC3PreloadConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2290   .text.TIM_OC3PreloadConfig:00000000 TIM_OC3PreloadConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2317   .text.TIM_OC4PreloadConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2322   .text.TIM_OC4PreloadConfig:00000000 TIM_OC4PreloadConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2351   .text.TIM_OC1FastConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2356   .text.TIM_OC1FastConfig:00000000 TIM_OC1FastConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2383   .text.TIM_OC2FastConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2388   .text.TIM_OC2FastConfig:00000000 TIM_OC2FastConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2417   .text.TIM_OC3FastConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2422   .text.TIM_OC3FastConfig:00000000 TIM_OC3FastConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2449   .text.TIM_OC4FastConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2454   .text.TIM_OC4FastConfig:00000000 TIM_OC4FastConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2483   .text.TIM_ClearOC1Ref:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2488   .text.TIM_ClearOC1Ref:00000000 TIM_ClearOC1Ref
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2515   .text.TIM_ClearOC2Ref:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2520   .text.TIM_ClearOC2Ref:00000000 TIM_ClearOC2Ref
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2546   .text.TIM_ClearOC3Ref:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2551   .text.TIM_ClearOC3Ref:00000000 TIM_ClearOC3Ref
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2578   .text.TIM_ClearOC4Ref:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2583   .text.TIM_ClearOC4Ref:00000000 TIM_ClearOC4Ref
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2609   .text.TIM_OC1PolarityConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2614   .text.TIM_OC1PolarityConfig:00000000 TIM_OC1PolarityConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2641   .text.TIM_OC1NPolarityConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2646   .text.TIM_OC1NPolarityConfig:00000000 TIM_OC1NPolarityConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2673   .text.TIM_OC2PolarityConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2678   .text.TIM_OC2PolarityConfig:00000000 TIM_OC2PolarityConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2707   .text.TIM_OC2NPolarityConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2712   .text.TIM_OC2NPolarityConfig:00000000 TIM_OC2NPolarityConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2741   .text.TIM_OC3PolarityConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2746   .text.TIM_OC3PolarityConfig:00000000 TIM_OC3PolarityConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2775   .text.TIM_OC3NPolarityConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2780   .text.TIM_OC3NPolarityConfig:00000000 TIM_OC3NPolarityConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2809   .text.TIM_OC4PolarityConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2814   .text.TIM_OC4PolarityConfig:00000000 TIM_OC4PolarityConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2843   .text.TIM_CCxCmd:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2848   .text.TIM_CCxCmd:00000000 TIM_CCxCmd
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2887   .text.TIM_CCxNCmd:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2892   .text.TIM_CCxNCmd:00000000 TIM_CCxNCmd
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2931   .text.TIM_SelectOCxM:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:2936   .text.TIM_SelectOCxM:00000000 TIM_SelectOCxM
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3010   .text.TIM_UpdateDisableConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3015   .text.TIM_UpdateDisableConfig:00000000 TIM_UpdateDisableConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3043   .text.TIM_UpdateRequestConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3048   .text.TIM_UpdateRequestConfig:00000000 TIM_UpdateRequestConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3076   .text.TIM_SelectHallSensor:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3081   .text.TIM_SelectHallSensor:00000000 TIM_SelectHallSensor
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3109   .text.TIM_SelectOnePulseMode:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3114   .text.TIM_SelectOnePulseMode:00000000 TIM_SelectOnePulseMode
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3139   .text.TIM_SelectOutputTrigger:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3144   .text.TIM_SelectOutputTrigger:00000000 TIM_SelectOutputTrigger
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3169   .text.TIM_SelectSlaveMode:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3174   .text.TIM_SelectSlaveMode:00000000 TIM_SelectSlaveMode
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3199   .text.TIM_SelectMasterSlaveMode:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3204   .text.TIM_SelectMasterSlaveMode:00000000 TIM_SelectMasterSlaveMode
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3229   .text.TIM_SetCounter:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3234   .text.TIM_SetCounter:00000000 TIM_SetCounter
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3249   .text.TIM_SetAutoreload:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3254   .text.TIM_SetAutoreload:00000000 TIM_SetAutoreload
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3269   .text.TIM_SetCompare1:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3274   .text.TIM_SetCompare1:00000000 TIM_SetCompare1
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3289   .text.TIM_SetCompare2:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3294   .text.TIM_SetCompare2:00000000 TIM_SetCompare2
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3309   .text.TIM_SetCompare3:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3314   .text.TIM_SetCompare3:00000000 TIM_SetCompare3
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3329   .text.TIM_SetCompare4:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3334   .text.TIM_SetCompare4:00000000 TIM_SetCompare4
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3349   .text.TIM_SetIC1Prescaler:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3354   .text.TIM_SetIC1Prescaler:00000000 TIM_SetIC1Prescaler
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3379   .text.TIM_SetIC2Prescaler:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3384   .text.TIM_SetIC2Prescaler:00000000 TIM_SetIC2Prescaler
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3410   .text.TIM_PWMIConfig:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3415   .text.TIM_PWMIConfig:00000000 TIM_PWMIConfig
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3504   .text.TIM_SetIC3Prescaler:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3509   .text.TIM_SetIC3Prescaler:00000000 TIM_SetIC3Prescaler
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3534   .text.TIM_SetIC4Prescaler:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3539   .text.TIM_SetIC4Prescaler:00000000 TIM_SetIC4Prescaler
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3565   .text.TIM_ICInit:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3570   .text.TIM_ICInit:00000000 TIM_ICInit
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3807   .text.TIM_ICInit:00000134 $d
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3813   .text.TIM_SetClockDivision:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3818   .text.TIM_SetClockDivision:00000000 TIM_SetClockDivision
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3843   .text.TIM_GetCapture1:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3848   .text.TIM_GetCapture1:00000000 TIM_GetCapture1
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3866   .text.TIM_GetCapture2:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3871   .text.TIM_GetCapture2:00000000 TIM_GetCapture2
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3889   .text.TIM_GetCapture3:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3894   .text.TIM_GetCapture3:00000000 TIM_GetCapture3
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3912   .text.TIM_GetCapture4:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3917   .text.TIM_GetCapture4:00000000 TIM_GetCapture4
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3935   .text.TIM_GetCounter:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3940   .text.TIM_GetCounter:00000000 TIM_GetCounter
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3958   .text.TIM_GetPrescaler:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3963   .text.TIM_GetPrescaler:00000000 TIM_GetPrescaler
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3981   .text.TIM_GetFlagStatus:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:3986   .text.TIM_GetFlagStatus:00000000 TIM_GetFlagStatus
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:4008   .text.TIM_ClearFlag:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:4013   .text.TIM_ClearFlag:00000000 TIM_ClearFlag
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:4031   .text.TIM_GetITStatus:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:4036   .text.TIM_GetITStatus:00000000 TIM_GetITStatus
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:4073   .text.TIM_ClearITPendingBit:00000000 $t
C:\DOCUME~1\C4C4~1\LOCALS~1\Temp\ccihjVlu.s:4078   .text.TIM_ClearITPendingBit:00000000 TIM_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
